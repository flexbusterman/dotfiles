# used by dwm super + a
# used by dwm
# super + shift + a
# notify-send "super + shift + a"
# super + control + a
# notify-send "super + control + a"
# super + shift + control + a
# notify-send "super + shift + control + a"
# shift + control + a
# notify-send "shift + control + a"

# Alt_L
# 	$(cat ~/.local/state/flarbs/trackpadalwayson) || touchpadenable
# @Alt_L
# 	$(cat ~/.local/state/flarbs/trackpadalwayson) || touchpaddisable

super + b
	bluetoothconnect $HEADPHONES
super + shift + b
	bluetoothctl disconnect $HEADPHONES
# super + control + b
# notify-send "super + control + b"
super + shift + control + b
	blueberry
# shift + control + b
# notify-send "shift + control + b"

super + c
	reaperconnect; supercolliderttsconnect;
super + shift + c
	calendar
# super + control + c
# notify-send "super + control + c"
# super + shift + control + c
# notify-send "super + shift + control + c"
# shift + control + c
# notify-send "shift + control + c"

super + d
	typedate
super + shift + d
	$TERMINAL -e dwmrebuild
# super + control + d
# 	task rm $(task _get $(task next limit:1 | tail -n +4 | head -n 1 | sed 's/^ //' | cut -d ' ' -f1).id)
	# punch --delete
super + shift + control + d
	mpc --host ~/.mpd/socket clear
# shift + control + d
# notify-send "shift + control + d"

super + e
	tmuxaerc
	# pgrep emacs || emacs -daemon; kitty -e emacsclient -c
	# gaminginputtoggle
super + shift + e
    togglekanata
#	touchpaddisablewhiletypingtoggle
# notify-send "super + control + e"
# super + control + e
# notify-send "super + control + e"
# super + shift + control + e
# notify-send "super + shift + control + e"
# shift + control + e
# notify-send "shift + control + e"

# super + f
# notify-send "super + f"
# super + shift + f
# notify-send "super + shift + f"
# super + control + f
# notify-send "super + control + f"
# super + shift + control + f
# notify-send "super + shift + control + f"
# shift + control + f
# notify-send "shift + control + f"

# super + g
# notify-send "super + g"
# super + shift + g
# notify-send "super + shift + g"
# super + control + g
# notify-send "super + control + g"
# super + shift + control + g
# notify-send "super + shift + control + g"
# shift + control + g
# notify-send "shift + control + g"

# super + h
# notify-send "super + h"
# super + shift + h
# notify-send "super + shift + h"
super + control + h
	musicseekbackward
# super + shift + control + h
# notify-send "super + shift + control + h"
# shift + control + h
# notify-send "shift + control + h"

# super + i
# notify-send "super + i"
super + shift + i
	xcalib -i -a
super + control + i
	task start $(task _get $(task next limit:1 | tail -n +4 | head -n 1 | sed 's/^ //' | cut -d ' ' -f1).id)
	# punch --in
# notify-send "super + control + i"
super + shift + control + i
	punch --select
# shift + control + i
# notify-send "shift + control + i"

# super + j
# notify-send "super + j"
# super + shift + j
# notify-send "super + shift + j"
super + control + j
	musicnext
# super + shift + control + j
# notify-send "super + shift + control + j"
# shift + control + j
	# notify-send "shift + control + j"

# used by dwm super + k
# used by dwm notify-send "super + k"
# used by dwm super + shift + k
# used by dwm notify-send "super + shift + k"
super + control + k
	musicprev
# super + shift + control + k
# notify-send "super + shift + control + k"
# shift + control + k
# notify-send "shift + control + k"

# used by dwm super + l
# used by dwm notify-send "super + l"
# used by dwm super + shift + l
# used by dwm notify-send "super + shift + l"
super + control + l
	musicseekforward
super + shift + control + l
	slock
# shift + control + l
# notify-send "shift + control + l"

super + m
	mullvadconnect
super + shift + m
	mullvaddisconnect
# super + control + m
# 	musicprev
# super + shift + control + m
# notify-send "super + shift + control + m"
# shift + control + m
# notify-send "shift + control + m"

super + m
super + control + m
	measure
# super + shift + control + m
# notify-send "super + shift + control + m"
# shift + control + m
# notify-send "shift + control + m"

super + n
	$TERMINAL -e ~/.local/bin/fzfnotes
super + shift + n
	$TERMINAL -e ~/.local/bin/fzfgrep
# super + control + n
# notify-send "super + control + n"
# super + shift + control + n
# notify-send "super + shift + control + n"
# shift + control + n
# notify-send "shift + control + n"

super + o
	notify-send -t 15000 "$(oblique)"
# # Orgmode shortcuts
# super + o; a; a;
# 	orgmux -a # tmux orgmode agenda
# super + o; a; t;
# 	orgmux -t # tmux orgmode todo
# super + o; a; c;
# 	orgmux -c # tmux orgmode capture
# super + o; a; r;
# 	orgmux -r # tmux orgmode open refile
# # super + shift + o
# # notify-send "super + shift + o"

super + control + o
	task stop $(task _get $(task active limit:1 | tail -n +4 | head -n 1 | sed 's/^ //' | cut -d ' ' -f1).id)
	# punch --out
# notify-send "super + control + o"
# super + shift + control + o
# notify-send "super + shift + control + o"
# shift + control + o
# notify-send "shift + control + o"

super + p
	prependclipboard ~/Dropbox/ORGMODE/refile.org
super + shift + p
	passmenu
# super + control + p
# notify-send "super + control + p"
super + shift + control + p
	poweroff
# shift + control + p
# notify-send "shift + control + p"

super + q
	qpwgraph
super + shift + q
	killall Xorg
# notify-send "super + shift + q"
# super + control + q
# notify-send "super + control + q"
# super + shift + control + q
# notify-send "super + shift + control + q"
# shift + control + q
# notify-send "shift + control + q"

super + r
	reaper
super + shift + r
	pkill -usr1 -x sxhkd && notify-send 'Reloaded sxhkd config' || pkill -usr1 -x sxhkd && notify-send 'Reloaded sxhkd config'
	# sudo pkill -HUP sxhkd
	# notify-send "reloaded config"
	# sudo pkill -HUP sxhkd

# super + control + r
# notify-send "super + control + r"
super + shift + control + r
	reboot
# shift + control + r
# notify-send "shift + control + r"

super + s
	$TERMINAL -T SuperCollider -e tmuxsession SuperCollider 'supercollider'
super + shift + s
	killsupercollider

# super + control + s
# notify-send "super + control + s"
# super + shift + control + s
# notify-send "super + shift + control + s"
# shift + control + s
# notify-send "shift + control + s"

super + t
	$TERMINAL -e htop
	# $TERMINAL -e btop
super + shift + t
	$TERMINAL -e nvtop
super + control + t
	$TERMINAL -e vit
# notify-send "super + control + t"
super + shift + control + t
	$TERMINAL -e tt -theme dracula
shift + control + t
	~/.local/bin/trimclipboard

# super + u
# notify-send "super + u"
# super + shift + u
# notify-send "super + shift + u"
# super + control + u
# notify-send "super + control + u"
# super + shift + control + u
# notify-send "super + shift + control + u"
# shift + control + u
# notify-send "shift + control + u"

super + v
	fzfvideo
super + shift + v
	fzfvideoresume
# super + control + v
# notify-send "super + control + v"
# super + shift + control + v
# notify-send "super + shift + control + v"
# shift + control + v
# notify-send "shift + control + v"

# super + w
# notify-send "super + w"
# super + shift + w
# notify-send "super + shift + w"
# super + control + w
# notify-send "super + control + w"
# super + shift + control + w
# notify-send "super + shift + control + w"
# shift + control + w
# notify-send "shift + control + w"

# super + x
# used by dwm
super + shift + x
	xkill
# super + control + x
# notify-send "super + control + x"
# super + shift + control + x
# notify-send "super + shift + control + x"
# shift + control + x
# notify-send "shift + control + x"

super + y
	ytfzf -m --mpv-opts='--ytdl-format=bestvideo[height<=480]+bestaudio/best[height<=480]' -D
# super + shift + y
# notify-send "super + shift + y"
# super + control + y
# notify-send "super + control + y"
# super + shift + control + y
# notify-send "super + shift + control + y"
# shift + control + y
# notify-send "shift + control + y"

# super + z
# notify-send "super + z"
# super + shift + z
# notify-send "super + shift + z"
# super + control + z
# notify-send "super + control + z"
# super + shift + control + z
# notify-send "super + shift + control + z"
# shift + control + z
# notify-send "shift + control + z"

#                      _       _
#  ___ _ __   ___  ___(_) __ _| |
# / __| '_ \ / _ \/ __| |/ _` | |
# \__ \ |_) |  __/ (__| | (_| | |
# |___/ .__/ \___|\___|_|\__,_|_|
#     |_|
# special keys

super + Return
	~/.local/bin/dmenurun
	# fuzzel
	# dmenu_run
	# wofi --show run
	# --show drun
super + shift + Return
	$TERMINAL -e tmux new-session -A -s main
	# $TERMINAL -e tmux new-session -A -s main
super + control + Return
	$TERMINAL -e $SHELL -c "MPD_HOST=/run/user/$UID/mpd/socket ncmpcpp"
super + shift + control + Return
	tidal-hifi
	# $TERMINAL

super + control + shift + space
	musicrandomfolder

super + control + space
	musicplaypause

super + comma
	$TERMINAL -e ranger
super + shift + comma
	$TERMINAL -e yazi

super + period
	qutebrowser
super + shift + period
	bravestart

super + slash
	$TERMINAL -e ~/.local/bin/shortcuts
super + shift + slash
	typesnippet

super + backslash
	keymouse
# super + shift + backslash
# 	nofity-send "keynav goes here"

super + semicolon
	clipstream
super + shift + semicolon
	clipdownload
super + shift + control + semicolon
	clipdownload -a

super + shift + equal
	calculate

super + grave
	$TERMINAL -T vit -e vit

super + shift + grave
	dmenuunicode

super + F1
	bindings

super + F2
	resolution

super + F3
	displaydefault

super + shift + F3
	displayselect

super + F4
	$TERMINAL -T PulseMixer -e pulsemixer
super + shift + F4
	pavucontrol

super + F6
	torwrap

super + F7
	td-toggle

super + F8
	mounter

super + F9
	unmounter

super + F10
	campreview

super + F11
	screencaststart

super + shift + F11
	screencastwithmicstart
	# dmenurecord

super + F12
	killrecording

Print
	screenshot
shift + Print
	screenshot -s

super + control + BackSpace
	notify-send "super + control + BackSpace"

super + control + equal
	pamixer --allow-boost -i 3; kill -44 $(pidof dwmblocks)

super + control + minus
	pamixer --allow-boost -d 3; kill -44 $(pidof dwmblocks)

super + control + d
	musicfolderbad

super + alt + equal
	brightness -i

super + alt + minus
	brightness -d

# __  _______ ___   __
# \ \/ /  ___( _ ) / /_
#  \  /| |_  / _ \| '_ \
#  /  \|  _|| (_) | (_) |
# /_/\_\_|   \___/ \___/
# xf86 media keys volume brightness
XF86AudioMute
	pamixer -t; kill -44 $(pidof dwmblocks)
XF86AudioRaiseVolume
	pamixer --allow-boost -i 3; kill -44 $(pidof dwmblocks)
XF86AudioLowerVolume
	pamixer --allow-boost -d 3; kill -44 $(pidof dwmblocks)
XF86AudioMicMute
	amixer set Capture toggle
XF86MonBrightnessUp
	brightnessup
XF86MonBrightnessDown
	brightnessdown

#      _       __             _ _
#   __| | ___ / _| __ _ _   _| | |_ ___
#  / _` |/ _ \ |_ / _` | | | | | __/ __|
# | (_| |  __/  _| (_| | |_| | | |_\__ \
#  \__,_|\___|_|  \__,_|\__,_|_|\__|___/

#
# wm independent hotkeys
#

# {notify-send "test 1"; notify-send "test 2", notify-send "test 3"; notify-send "test 4"}

# toggle bar and resize
# super + a
# 	{polybar-msg cmd hide; bspc config -m focused top_padding 0, polybar-msg cmd show; bspc config -m focused top_padding 21}
# super + z
# 	{bspc config window_gap 0, bspc config window_gap 16}

#
# bspwm hotkeys
#

# quit/restart bspwm
# super + shift + {q,r}
	# bspc {quit,wm -r}

# close and kill
# super + {_,shift + }w
	# bspc node -{c,k}

# alternate between the tiled and monocle layout
# super + m
	# bspc desktop -l next

# # send the newest marked node to the newest preselected node
# super + y
	# bspc node newest.marked.local -n newest.!automatic.local

# # swap the current node and the biggest window
# super + space
	# bspc node -s biggest.window

#
# state/flags
#

# set the window state
# super + f
# 	bspc node -t fullscreen
# super + f
	# bspc node --state ~fullscreen
# super + {t,shift + t,s,f}
	# bspc node -T {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
# super + ctrl + {m,x,y,z}
	# bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
# super + {_,shift + }{h,j,k,l}
	# bspc node -{f,s} {west,south,north,east}

# # focus the node for the given path jump
# super + {p,b,comma,period}
	# bspc node -f @{parent,brother,first,second}

# # focus the next/previous window in the current desktop
# super + {_,shift + }c
	# bspc node -f {next,prev}.local.!hidden.window

# # focus the next/previous desktop in the current monitor
# super + bracket{left,right}
	# bspc desktop -f {prev,next}.local

# # focus the last node/desktop
# super + {grave,Tab}
	# bspc {node,desktop} -f last

# # focus the older or newer node in the focus history
# super + {o,i}
	# bspc wm -h off; \
	# bspc node {older,newer} -f; \
	# bspc wm -h on

# # focus or send to the given desktop
# super + {_,shift + }{1-9,0}
	# bspc {desktop -f,node -d} '^{1-9,10}'

#
# preselect
#

# # preselect the direction
# super + ctrl + {h,j,k,l}
# 	bspc node -p {west,south,north,east}

# # preselect the ratio
# super + ctrl + {1-9}
	# bspc node -o 0.{1-9}

# # cancel the preselection for the focused node
# super + ctrl + space
	# bspc node -p cancel

# # cancel the preselection for the focused desktop
# super + ctrl + shift + space
	# bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

# #
# # move/resize
# #

# # expand a window by moving one of its side outward
# alt + {h,j,k,l}
	# bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# # expand / shrink
# alt + {k,l,h,j}
	# bspc node -z {bottom 0 -20,left 20 0,left -20 0,bottom 0 20}

# # contract a window by moving one of its side inward
# alt + {h,j,k,l}
	# bspc node -z {right -20 0,top 0 20,}

# # move a floating window
# super + {Left,Down,Up,Right}
	# bspc node -v {-20 0,0 20,0 -20,20 0}
