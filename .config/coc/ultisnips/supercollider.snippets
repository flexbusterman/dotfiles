# SuperCollider snippets
# Snippet generator: SCNvim.sc
snippet A2B.ar
A2B.ar(${1:a: nil}, ${2: b: nil}, ${3: c: nil}, ${4: d: nil})
endsnippet

snippet A2K.kr
A2K.kr(${1:in: 0.0})
endsnippet

snippet AY.ar
AY.ar(${1:tonea: 1777}, ${2: toneb: 1666}, ${3: tonec: 1555}, ${4: noise: 1}, ${5: control: 7}, ${6: vola: 15}, ${7: volb: 15}, ${8: volc: 15}, ${9: envfreq: 4}, ${10: envstyle: 1}, ${11: chiptype: 0}, ${12: mul: 1}, ${13: add: 0})
endsnippet

snippet AY.categories
AY.categories(${1:})
endsnippet

snippet AY.freqtotone
AY.freqtotone(${1:freq: nil})
endsnippet

snippet AbsLayout.new
AbsLayout.new(${1:parent: nil})
endsnippet

snippet AbstractDispatcher.new
AbstractDispatcher.new(${1:})
endsnippet

snippet AbstractDispatcher.initClass
AbstractDispatcher.initClass(${1:})
endsnippet

snippet AbstractGroup.new
AbstractGroup.new(${1:target: nil}, ${2: addAction: addToHead})
endsnippet

snippet AbstractGroup.after
AbstractGroup.after(${1:aNode: nil})
endsnippet

snippet AbstractGroup.before
AbstractGroup.before(${1:aNode: nil})
endsnippet

snippet AbstractGroup.head
AbstractGroup.head(${1:aGroup: nil})
endsnippet

snippet AbstractGroup.tail
AbstractGroup.tail(${1:aGroup: nil})
endsnippet

snippet AbstractGroup.replace
AbstractGroup.replace(${1:nodeToReplace: nil})
endsnippet

snippet AbstractGroup.creationCmd
AbstractGroup.creationCmd(${1:})
endsnippet

snippet AbstractIn.isInputUGen
AbstractIn.isInputUGen(${1:})
endsnippet

snippet AbstractMDPlugin.clearMetadata
AbstractMDPlugin.clearMetadata(${1:path: nil})
endsnippet

snippet AbstractMDPlugin.writeMetadata
AbstractMDPlugin.writeMetadata(${1:metadata: nil}, ${2: synthdef: nil}, ${3: path: nil})
endsnippet

snippet AbstractMDPlugin.writeMetadataFile
AbstractMDPlugin.writeMetadataFile(${1:})
endsnippet

snippet AbstractMDPlugin.readMetadata
AbstractMDPlugin.readMetadata(${1:path: nil})
endsnippet

snippet AbstractMDPlugin.readMetadataFile
AbstractMDPlugin.readMetadataFile(${1:})
endsnippet

snippet AbstractMDPlugin.applyExtension
AbstractMDPlugin.applyExtension(${1:path: nil})
endsnippet

snippet AbstractMDPlugin.mdExtension
AbstractMDPlugin.mdExtension(${1:})
endsnippet

snippet AbstractNodeWatcher.new
AbstractNodeWatcher.new(${1:server: nil})
endsnippet

snippet AbstractOut.isOutputUGen
AbstractOut.isOutputUGen(${1:})
endsnippet

snippet AbstractOut.numFixedArgs
AbstractOut.numFixedArgs(${1:})
endsnippet

snippet AbstractPlayControl.new
AbstractPlayControl.new(${1:source: nil}, ${2: channelOffset: 0})
endsnippet

snippet AbstractPlayControl.initClass
AbstractPlayControl.initClass(${1:})
endsnippet

snippet AbstractResponderFunc.initClass
AbstractResponderFunc.initClass(${1:})
endsnippet

snippet AbstractResponderFunc.allFuncProxies
AbstractResponderFunc.allFuncProxies(${1:})
endsnippet

snippet AbstractResponderFunc.allEnabled
AbstractResponderFunc.allEnabled(${1:})
endsnippet

snippet AbstractResponderFunc.allDisabled
AbstractResponderFunc.allDisabled(${1:})
endsnippet

snippet AbstractServerAction.init
AbstractServerAction.init(${1:})
endsnippet

snippet AbstractServerAction.performFunction
AbstractServerAction.performFunction(${1:server: nil}, ${2: function: nil})
endsnippet

snippet AbstractServerAction.run
AbstractServerAction.run(${1:server: nil})
endsnippet

snippet AbstractServerAction.functionSelector
AbstractServerAction.functionSelector(${1:})
endsnippet

snippet AbstractServerAction.add
AbstractServerAction.add(${1:object: nil}, ${2: server: nil})
endsnippet

snippet AbstractServerAction.addToAll
AbstractServerAction.addToAll(${1:object: nil})
endsnippet

snippet AbstractServerAction.remove
AbstractServerAction.remove(${1:object: nil}, ${2: server: nil})
endsnippet

snippet AbstractServerAction.removeServer
AbstractServerAction.removeServer(${1:server: nil})
endsnippet

snippet AbstractSystemAction.init
AbstractSystemAction.init(${1:})
endsnippet

snippet AbstractSystemAction.add
AbstractSystemAction.add(${1:object: nil})
endsnippet

snippet AbstractSystemAction.remove
AbstractSystemAction.remove(${1:object: nil})
endsnippet

snippet AbstractSystemAction.removeAll
AbstractSystemAction.removeAll(${1:})
endsnippet

snippet AbstractSystemAction.objects
AbstractSystemAction.objects(${1:})
endsnippet

snippet AbstractSystemAction.objects_
AbstractSystemAction.objects_(${1:obj: nil})
endsnippet

snippet ActionFunc.new
ActionFunc.new(${1:type: nil}, ${2: action: nil}, ${3: extra: nil}, ${4: startVal: nil})
endsnippet

snippet ActionFunc.initClass
ActionFunc.initClass(${1:})
endsnippet

snippet ActionFuncList.new
ActionFuncList.new(${1:nodes: [  ]})
endsnippet

snippet Allpass1.ar
Allpass1.ar(${1:in: nil}, ${2: freq: 1200.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet Allpass2.ar
Allpass2.ar(${1:in: nil}, ${2: freq: 1200.0}, ${3: rq: 1.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet AmpComp.ir
AmpComp.ir(${1:freq: nil}, ${2: root: nil}, ${3: exp: 0.3333})
endsnippet

snippet AmpComp.ar
AmpComp.ar(${1:freq: nil}, ${2: root: nil}, ${3: exp: 0.3333})
endsnippet

snippet AmpComp.kr
AmpComp.kr(${1:freq: nil}, ${2: root: nil}, ${3: exp: 0.3333})
endsnippet

snippet AmpCompA.ir
AmpCompA.ir(${1:freq: 1000}, ${2: root: 0}, ${3: minAmp: 0.32}, ${4: rootAmp: 1.0})
endsnippet

snippet AmpCompA.ar
AmpCompA.ar(${1:freq: 1000}, ${2: root: 0}, ${3: minAmp: 0.32}, ${4: rootAmp: 1.0})
endsnippet

snippet AmpCompA.kr
AmpCompA.kr(${1:freq: 1000}, ${2: root: 0}, ${3: minAmp: 0.32}, ${4: rootAmp: 1.0})
endsnippet

snippet Amplitude.ar
Amplitude.ar(${1:in: 0.0}, ${2: attackTime: 0.01}, ${3: releaseTime: 0.01}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet Amplitude.kr
Amplitude.kr(${1:in: 0.0}, ${2: attackTime: 0.01}, ${3: releaseTime: 0.01}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet Amplitude.new
Amplitude.new(${1:in: nil})
endsnippet

snippet AmplitudeMod.ar
AmplitudeMod.ar(${1:in: 0.0}, ${2: attackTime: 0.01}, ${3: releaseTime: 0.01}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet AmplitudeMod.kr
AmplitudeMod.kr(${1:in: 0.0}, ${2: attackTime: 0.01}, ${3: releaseTime: 0.01}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet AnalogIn.ar
AnalogIn.ar(${1:analogPin: 0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet AnalogIn.kr
AnalogIn.kr(${1:analogPin: 0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet AnalogOut.ar
AnalogOut.ar(${1:analogPin: 0}, ${2: output: 0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet AnalogOut.kr
AnalogOut.kr(${1:analogPin: 0}, ${2: output: 0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet AnalyseEvents2.ar
AnalyseEvents2.ar(${1:in: nil}, ${2: bufnum: 0}, ${3: threshold: 0.34}, ${4: triggerid: 101}, ${5: circular: 0}, ${6: pitch: 0})
endsnippet

snippet AppClock.initClass
AppClock.initClass(${1:})
endsnippet

snippet AppClock.clear
AppClock.clear(${1:})
endsnippet

snippet AppClock.sched
AppClock.sched(${1:delta: nil}, ${2: item: nil})
endsnippet

snippet AppClock.tick
AppClock.tick(${1:})
endsnippet

snippet AppClock.prSchedNotify
AppClock.prSchedNotify(${1:})
endsnippet

snippet Archive.global
Archive.global(${1:})
endsnippet

snippet Archive.global_
Archive.global_(${1:obj: nil})
endsnippet

snippet Archive.initClass
Archive.initClass(${1:})
endsnippet

snippet Archive.read
Archive.read(${1:filename: nil})
endsnippet

snippet Archive.write
Archive.write(${1:filename: nil})
endsnippet

snippet ArneodoCoulletTresser.categories
ArneodoCoulletTresser.categories(${1:})
endsnippet

snippet ArneodoCoulletTresser.ar
ArneodoCoulletTresser.ar(${1:freq: 22050}, ${2: alpha: 1.5}, ${3: h: 0.05}, ${4: xi: 0.5}, ${5: yi: 0.5}, ${6: zi: 0.5}, ${7: mul: 1.0}, ${8: add: 0.0})
endsnippet

snippet Array.with
Array.with(${1:args: [  ]})
endsnippet

snippet Array.makeScaleMidi
Array.makeScaleMidi(${1:groundNote: 60}, ${2: type: major}, ${3: startNote: nil}, ${4: endNote: nil})
endsnippet

snippet Array.makeScale
Array.makeScale(${1:groundNote: C3}, ${2: type: major}, ${3: startNote: nil}, ${4: endNote: nil})
endsnippet

snippet Array.makeScaleName
Array.makeScaleName(${1:groundNote: C3}, ${2: type: major}, ${3: startNote: nil}, ${4: endNote: nil})
endsnippet

snippet Array.makeScaleCps
Array.makeScaleCps(${1:groundNote: 261.62556530114}, ${2: type: major}, ${3: startNote: nil}, ${4: endNote: nil})
endsnippet

snippet Array.fillNoteNames
Array.fillNoteNames(${1:startNote: C3}, ${2: endNote: B3}, ${3: step: 1})
endsnippet

snippet Array2D.new
Array2D.new(${1:rows: 1}, ${2: cols: 1})
endsnippet

snippet Array2D.fromArray
Array2D.fromArray(${1:rows: nil}, ${2: cols: nil}, ${3: array: nil})
endsnippet

snippet ArrayMax.ar
ArrayMax.ar(${1:array: nil})
endsnippet

snippet ArrayMax.kr
ArrayMax.kr(${1:array: nil})
endsnippet

snippet ArrayMax.categories
ArrayMax.categories(${1:})
endsnippet

snippet ArrayedCollection.newClear
ArrayedCollection.newClear(${1:indexedSize: 0})
endsnippet

snippet ArrayedCollection.iota
ArrayedCollection.iota(${1:sizes: [  ]})
endsnippet

snippet Association.new
Association.new(${1:key: nil}, ${2: value: nil})
endsnippet

snippet Atan2.ar
Atan2.ar(${1:a: 0}, ${2: b: 1})
endsnippet

snippet Atan2.kr
Atan2.kr(${1:a: 0}, ${2: b: 1})
endsnippet

snippet Atan2Table.new
Atan2Table.new(${1:})
endsnippet

snippet Atan2Table.createBuffer
Atan2Table.createBuffer(${1:})
endsnippet

snippet Atan2Table.scaleInput
Atan2Table.scaleInput(${1:input: nil})
endsnippet

snippet AtsAmp.ar
AtsAmp.ar(${1:atsbuffer: nil}, ${2: partialNum: 0}, ${3: filePointer: 0}, ${4: mul: 1}, ${5: add: 0})
endsnippet

snippet AtsAmp.kr
AtsAmp.kr(${1:atsbuffer: nil}, ${2: partialNum: 0}, ${3: filePointer: 0}, ${4: mul: 1}, ${5: add: 0})
endsnippet

snippet AtsBand.ar
AtsBand.ar(${1:atsbuffer: nil}, ${2: band: nil}, ${3: filePointer: 0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet AtsFile.new
AtsFile.new(${1:path: nil}, ${2: server: nil})
endsnippet

snippet AtsFile.load
AtsFile.load(${1:path: nil}, ${2: server: nil})
endsnippet

snippet AtsFreq.ar
AtsFreq.ar(${1:atsbuffer: nil}, ${2: partialNum: 0}, ${3: filePointer: 0}, ${4: mul: 1}, ${5: add: 0})
endsnippet

snippet AtsFreq.kr
AtsFreq.kr(${1:atsbuffer: nil}, ${2: partialNum: 0}, ${3: filePointer: 0}, ${4: mul: 1}, ${5: add: 0})
endsnippet

snippet AtsNoiSynth.ar
AtsNoiSynth.ar(${1:atsbuffer: nil}, ${2: numPartials: 0}, ${3: partialStart: 0}, ${4: partialSkip: 1}, ${5: filePointer: 0}, ${6: sinePct: 1.0}, ${7: noisePct: 1.0}, ${8: freqMul: 1.0}, ${9: freqAdd: 0.0}, ${10: numBands: 25}, ${11: bandStart: 0}, ${12: bandSkip: 1}, ${13: mul: 1.0}, ${14: add: 0.0})
endsnippet

snippet AtsNoise.ar
AtsNoise.ar(${1:atsbuffer: nil}, ${2: bandNum: 0}, ${3: filePointer: 0}, ${4: mul: 1}, ${5: add: 0})
endsnippet

snippet AtsNoise.kr
AtsNoise.kr(${1:atsbuffer: nil}, ${2: bandNum: 0}, ${3: filePointer: 0}, ${4: mul: 1}, ${5: add: 0})
endsnippet

snippet AtsParInfo.categories
AtsParInfo.categories(${1:})
endsnippet

snippet AtsParInfo.ar
AtsParInfo.ar(${1:atsbuffer: nil}, ${2: partialNum: 0}, ${3: filePointer: 0}, ${4: mul: 1}, ${5: add: 0})
endsnippet

snippet AtsParInfo.kr
AtsParInfo.kr(${1:atsbuffer: nil}, ${2: partialNum: 0}, ${3: filePointer: 0}, ${4: mul: 1}, ${5: add: 0})
endsnippet

snippet AtsPartial.ar
AtsPartial.ar(${1:atsbuffer: nil}, ${2: partial: nil}, ${3: filePointer: 0}, ${4: freqMul: 1.0}, ${5: freqAdd: 0.0}, ${6: mul: 1.0}, ${7: add: 0.0})
endsnippet

snippet AtsSynth.ar
AtsSynth.ar(${1:atsbuffer: nil}, ${2: numPartials: 0}, ${3: partialStart: 0}, ${4: partialSkip: 1}, ${5: filePointer: 0}, ${6: freqMul: 1.0}, ${7: freqAdd: 0.0}, ${8: mul: 1.0}, ${9: add: 0.0})
endsnippet

snippet AtsUGen.categories
AtsUGen.categories(${1:})
endsnippet

snippet AttackSlope.kr
AttackSlope.kr(${1:input: nil}, ${2: windowsize: 1024}, ${3: peakpicksize: 20}, ${4: leak: 0.999}, ${5: energythreshold: 0.01}, ${6: sumthreshold: 20}, ${7: mingap: 30}, ${8: numslopesaveraged: 10})
endsnippet

snippet AudioControl.names
AudioControl.names(${1:names: nil})
endsnippet

snippet AudioControl.ar
AudioControl.ar(${1:values: nil})
endsnippet

snippet AudioControl.isAudioControlUGen
AudioControl.isAudioControlUGen(${1:})
endsnippet

snippet AudioControl.isControlUGen
AudioControl.isControlUGen(${1:})
endsnippet

snippet AudioIn.ar
AudioIn.ar(${1:channel: 0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet AudioIn.channelOffset
AudioIn.channelOffset(${1:})
endsnippet

snippet AudioMSG.ar
AudioMSG.ar(${1:in: nil}, ${2: index: 0.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet AutoBackup.initClass
AutoBackup.initClass(${1:})
endsnippet

snippet AutoBackup.start
AutoBackup.start(${1:})
endsnippet

snippet AutoBackup.stop
AutoBackup.stop(${1:deleteAll: true})
endsnippet

snippet AutoBackup.deleteBackups
AutoBackup.deleteBackups(${1:})
endsnippet

snippet AutoBackup.cleanBackupFolder
AutoBackup.cleanBackupFolder(${1:})
endsnippet

snippet AutoBackup.show
AutoBackup.show(${1:})
endsnippet

snippet AutoTrack.kr
AutoTrack.kr(${1:in: nil}, ${2: lock: 0})
endsnippet

snippet AvailableFonts.initClass
AvailableFonts.initClass(${1:})
endsnippet

snippet AvailableFonts.getFonts
AvailableFonts.getFonts(${1:})
endsnippet

snippet AvailableFonts.includesName
AvailableFonts.includesName(${1:fontName: nil})
endsnippet

snippet AvailableFonts.includes
AvailableFonts.includes(${1:font: nil})
endsnippet

snippet AverageOutput.ar
AverageOutput.ar(${1:in: nil}, ${2: trig: 0.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet AverageOutput.kr
AverageOutput.kr(${1:in: nil}, ${2: trig: 0.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet AxialGradient.new
AxialGradient.new(${1:startPoint: nil}, ${2: endPoint: nil}, ${3: color0: nil}, ${4: color1: nil})
endsnippet

snippet B2A.ar
B2A.ar(${1:w: nil}, ${2: x: nil}, ${3: y: nil}, ${4: z: nil})
endsnippet

snippet B2Ster.ar
B2Ster.ar(${1:w: nil}, ${2: x: nil}, ${3: y: nil}, ${4: mul: 1}, ${5: add: 0})
endsnippet

snippet B2UHJ.ar
B2UHJ.ar(${1:w: nil}, ${2: x: nil}, ${3: y: nil})
endsnippet

snippet BAllPass.ar
BAllPass.ar(${1:in: nil}, ${2: freq: 1200.0}, ${3: rq: 1.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet BAllPass.sc
BAllPass.sc(${1:dummy: nil}, ${2: freq: 1200.0}, ${3: rq: 1.0})
endsnippet

snippet BAllPass.coeffs
BAllPass.coeffs(${1:sr: 44100}, ${2: freq: 1200.0}, ${3: rq: 1.0})
endsnippet

snippet BBandPass.ar
BBandPass.ar(${1:in: nil}, ${2: freq: 1200.0}, ${3: bw: 1.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet BBandPass.sc
BBandPass.sc(${1:dummy: nil}, ${2: freq: 1200.0}, ${3: bw: 1.0})
endsnippet

snippet BBandPass.coeffs
BBandPass.coeffs(${1:sr: 44100}, ${2: freq: 1200.0}, ${3: bw: 1.0})
endsnippet

snippet BBandStop.ar
BBandStop.ar(${1:in: nil}, ${2: freq: 1200.0}, ${3: bw: 1.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet BBandStop.sc
BBandStop.sc(${1:dummy: nil}, ${2: freq: 1200.0}, ${3: bw: 1.0})
endsnippet

snippet BBandStop.coeffs
BBandStop.coeffs(${1:sr: 44100}, ${2: freq: 1200.0}, ${3: bw: 1.0})
endsnippet

snippet BBlockerBuf.ar
BBlockerBuf.ar(${1:freq: nil}, ${2: bufnum: 0}, ${3: startpoint: 0})
endsnippet

snippet BBlockerProgram.new
BBlockerProgram.new(${1:program: nil})
endsnippet

snippet BBlockerProgram.find
BBlockerProgram.find(${1:identifier: nil})
endsnippet

snippet BBlockerProgram.descOf
BBlockerProgram.descOf(${1:key: nil})
endsnippet

snippet BBlockerProgram.printDescs
BBlockerProgram.printDescs(${1:})
endsnippet

snippet BBlockerProgram.descs
BBlockerProgram.descs(${1:})
endsnippet

snippet BBlockerProgram.initStates
BBlockerProgram.initStates(${1:})
endsnippet

snippet BF.ar
BF.ar(${1:sig: nil}, ${2: point: nil}, ${3: directivity: nil}, ${4: speakers: [  ]})
endsnippet

snippet BF.ar1
BF.ar1(${1:pointsource: nil}, ${2: directivity: nil}, ${3: speakers: [  ]})
endsnippet

snippet BF.asStereo
BF.asStereo(${1:sig: nil}, ${2: point: nil})
endsnippet

snippet BF.asUHJ
BF.asUHJ(${1:sig: nil}, ${2: point: nil})
endsnippet

snippet BF.asUHJ1
BF.asUHJ1(${1:sig: nil}, ${2: point: nil}, ${3: fftsize: nil}, ${4: numffts: nil})
endsnippet

snippet BFDecode.ar
BFDecode.ar(${1:sig: nil}, ${2: directivity: 1.0}, ${3: spkrs: [  ]})
endsnippet

snippet BFDecode.rect
BFDecode.rect(${1:sig: nil}, ${2: width: 4}, ${3: length: 7}, ${4: directivity: 1.0})
endsnippet

snippet BFDecode.asQuad
BFDecode.asQuad(${1:sig: nil})
endsnippet

snippet BFDecode.asStereo
BFDecode.asStereo(${1:sig: nil})
endsnippet

snippet BFDecode.asUHJ
BFDecode.asUHJ(${1:sig: nil})
endsnippet

snippet BFDecode.asUHJ1
BFDecode.asUHJ1(${1:sig: nil}, ${2: fftsize: nil}, ${3: numffts: nil})
endsnippet

snippet BFDecode.hexagon
BFDecode.hexagon(${1:sig: nil})
endsnippet

snippet BFDecode.surround
BFDecode.surround(${1:sig: nil})
endsnippet

snippet BFDecode.fiveDot1
BFDecode.fiveDot1(${1:sig: nil}, ${2: freq: 120})
endsnippet

snippet BFDecode1.ar
BFDecode1.ar(${1:w: nil}, ${2: x: nil}, ${3: y: nil}, ${4: z: nil}, ${5: azimuth: 0}, ${6: elevation: 0}, ${7: wComp: 0}, ${8: mul: 1}, ${9: add: 0})
endsnippet

snippet BFDecode1.ar1
BFDecode1.ar1(${1:w: nil}, ${2: x: nil}, ${3: y: nil}, ${4: z: nil}, ${5: azimuth: 0}, ${6: elevation: 0}, ${7: maxDist: 10}, ${8: distance: 10}, ${9: wComp: 0}, ${10: mul: 1}, ${11: add: 0}, ${12: scaleflag: 1})
endsnippet

snippet BFDecoder.categories
BFDecoder.categories(${1:})
endsnippet

snippet BFEncode.ar
BFEncode.ar(${1:sig: nil}, ${2: polar: nil})
endsnippet

snippet BFEncode.ar1
BFEncode.ar1(${1:sig: nil}, ${2: rho: nil}, ${3: theta: nil})
endsnippet

snippet BFEncode.ar2
BFEncode.ar2(${1:sig: nil}, ${2: x: nil}, ${3: y: nil})
endsnippet

snippet BFEncode.arDist
BFEncode.arDist(${1:sig: nil}, ${2: point: nil}, ${3: distScale: 1.0}, ${4: revScale: 0.1}, ${5: distmax: 60.0})
endsnippet

snippet BFEncode.woof
BFEncode.woof(${1:sig: nil}, ${2: point: nil}, ${3: distScale: 1.0}, ${4: revScale: 0.1}, ${5: revTime: 3.0}, ${6: hfDamp: 0.9}, ${7: distmax: 60.0})
endsnippet

snippet BFEncode1.ar
BFEncode1.ar(${1:in: nil}, ${2: azimuth: 0}, ${3: elevation: 0}, ${4: rho: 1}, ${5: gain: 1}, ${6: wComp: 0})
endsnippet

snippet BFEncode2.ar
BFEncode2.ar(${1:in: nil}, ${2: point_x: 1}, ${3: point_y: 1}, ${4: elevation: 0}, ${5: gain: 1}, ${6: wComp: 0})
endsnippet

snippet BFEncodeSter.ar
BFEncodeSter.ar(${1:l: nil}, ${2: r: nil}, ${3: azimuth: 0}, ${4: width: 1.5707963267949}, ${5: elevation: 0}, ${6: rho: 1}, ${7: gain: 1}, ${8: wComp: 0})
endsnippet

snippet BFFreeVerb.ar
BFFreeVerb.ar(${1:w: nil}, ${2: x: nil}, ${3: y: nil}, ${4: z: nil}, ${5: mix: 1.0}, ${6: room: 0.5}, ${7: damp: 0.5}, ${8: diffuse: 0.1}, ${9: mul: 1.0}, ${10: add: 0.0})
endsnippet

snippet BFGVerb.ar
BFGVerb.ar(${1:w: nil}, ${2: x: nil}, ${3: y: nil}, ${4: z: nil}, ${5: diffuse: 0.0}, ${6: roomsize: 10}, ${7: revtime: 3}, ${8: damping: 0.5}, ${9: inputbw: 0.5}, ${10: drylevel: 0.0}, ${11: earlyreflevel: 0.7}, ${12: taillevel: 0.5}, ${13: maxroomsize: 300}, ${14: mul: 1}, ${15: add: 0})
endsnippet

snippet BFManipulate.ar
BFManipulate.ar(${1:w: nil}, ${2: x: nil}, ${3: y: nil}, ${4: z: nil}, ${5: rotate: 0}, ${6: tilt: 0}, ${7: tumble: 0})
endsnippet

snippet BFPanner.categories
BFPanner.categories(${1:})
endsnippet

snippet BHPF.ar
BHPF.ar(${1:in: nil}, ${2: order: 4}, ${3: freq: 440}, ${4: mul: 1}, ${5: add: 0})
endsnippet

snippet BHiCut.initClass
BHiCut.initClass(${1:})
endsnippet

snippet BHiCut.filterClass
BHiCut.filterClass(${1:})
endsnippet

snippet BHiCut.coeffs
BHiCut.coeffs(${1:sr: nil}, ${2: freq: 1200}, ${3: order: 2})
endsnippet

snippet BHiCut.new1
BHiCut.new1(${1:rate: audio}, ${2: in: nil}, ${3: freq: nil}, ${4: order: 2}, ${5: maxOrder: 5})
endsnippet

snippet BHiCut.newFixed
BHiCut.newFixed(${1:rate: audio}, ${2: in: nil}, ${3: freq: nil}, ${4: order: 2})
endsnippet

snippet BHiCut.newVari
BHiCut.newVari(${1:rate: audio}, ${2: in: nil}, ${3: freq: nil}, ${4: order: 2}, ${5: maxOrder: 5})
endsnippet

snippet BHiCut.ar
BHiCut.ar(${1:in: nil}, ${2: freq: nil}, ${3: order: 2}, ${4: maxOrder: 5})
endsnippet

snippet BHiCut.kr
BHiCut.kr(${1:in: nil}, ${2: freq: nil}, ${3: order: 2}, ${4: maxOrder: 5})
endsnippet

snippet BHiCut.magResponse
BHiCut.magResponse(${1:freqs: 1000}, ${2: sr: 44100}, ${3: freq: 1200}, ${4: order: 2})
endsnippet

snippet BHiPass.ar
BHiPass.ar(${1:in: nil}, ${2: freq: 1200.0}, ${3: rq: 1.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet BHiPass.sc
BHiPass.sc(${1:dummy: nil}, ${2: freq: 1200.0}, ${3: rq: 1.0})
endsnippet

snippet BHiPass.coeffs
BHiPass.coeffs(${1:sr: 44100}, ${2: freq: 1200.0}, ${3: rq: 1.0})
endsnippet

snippet BHiPass4.ar
BHiPass4.ar(${1:in: nil}, ${2: freq: 1200.0}, ${3: rq: 1.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet BHiShelf.ar
BHiShelf.ar(${1:in: nil}, ${2: freq: 1200.0}, ${3: rs: 1.0}, ${4: db: 0.0}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet BHiShelf.sc
BHiShelf.sc(${1:dummy: nil}, ${2: freq: 120.0}, ${3: rs: 1.0}, ${4: db: 0.0})
endsnippet

snippet BHiShelf.coeffs
BHiShelf.coeffs(${1:sr: 44100}, ${2: freq: 120.0}, ${3: rs: 1.0}, ${4: db: 0.0})
endsnippet

snippet BLBufRd.ar
BLBufRd.ar(${1:bufnum: 0}, ${2: phase: 0}, ${3: ratio: 1})
endsnippet

snippet BLBufRd.kr
BLBufRd.kr(${1:bufnum: 0}, ${2: phase: 0}, ${3: ratio: 1})
endsnippet

snippet BLPF.ar
BLPF.ar(${1:in: nil}, ${2: order: 4}, ${3: freq: 440}, ${4: mul: 1}, ${5: add: 0})
endsnippet

snippet BLowCut.filterClass
BLowCut.filterClass(${1:})
endsnippet

snippet BLowPass.ar
BLowPass.ar(${1:in: nil}, ${2: freq: 1200.0}, ${3: rq: 1.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet BLowPass.sc
BLowPass.sc(${1:dummy: nil}, ${2: freq: 1200.0}, ${3: rq: 1.0})
endsnippet

snippet BLowPass.coeffs
BLowPass.coeffs(${1:sr: 44100}, ${2: freq: 1200.0}, ${3: rq: 1.0})
endsnippet

snippet BLowPass4.ar
BLowPass4.ar(${1:in: nil}, ${2: freq: 1200.0}, ${3: rq: 1.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet BLowShelf.ar
BLowShelf.ar(${1:in: nil}, ${2: freq: 1200.0}, ${3: rs: 1.0}, ${4: db: 0.0}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet BLowShelf.sc
BLowShelf.sc(${1:dummy: nil}, ${2: freq: 120.0}, ${3: rs: 1.0}, ${4: db: 0.0})
endsnippet

snippet BLowShelf.coeffs
BLowShelf.coeffs(${1:sr: 44100}, ${2: freq: 120.0}, ${3: rs: 1.0}, ${4: db: 0.0})
endsnippet

snippet BMoog.ar
BMoog.ar(${1:in: nil}, ${2: freq: 440.0}, ${3: q: 0.2}, ${4: mode: 0.0}, ${5: saturation: 0.95}, ${6: mul: 1.0}, ${7: add: 0.0})
endsnippet

snippet BPF.ar
BPF.ar(${1:in: 0.0}, ${2: freq: 440.0}, ${3: rq: 1.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet BPF.kr
BPF.kr(${1:in: 0.0}, ${2: freq: 440.0}, ${3: rq: 1.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet BPFStack.ar1
BPFStack.ar1(${1:in: nil}, ${2: vowel: nil}, ${3: freqMods: 1}, ${4: ampMods: 1}, ${5: widthMods: 1}, ${6: unfold: false})
endsnippet

snippet BPFStack.ar
BPFStack.ar(${1:in: nil}, ${2: vowel: nil}, ${3: freqMods: 1}, ${4: ampMods: 1}, ${5: widthMods: 1}, ${6: unfold: false})
endsnippet

snippet BPZ2.coeffs
BPZ2.coeffs(${1:})
endsnippet

snippet BPeakEQ.ar
BPeakEQ.ar(${1:in: nil}, ${2: freq: 1200.0}, ${3: rq: 1.0}, ${4: db: 0.0}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet BPeakEQ.sc
BPeakEQ.sc(${1:dummy: nil}, ${2: freq: 1200.0}, ${3: rq: 1.0}, ${4: db: 0.0})
endsnippet

snippet BPeakEQ.coeffs
BPeakEQ.coeffs(${1:sr: 44100}, ${2: freq: 1200.0}, ${3: rq: 1.0}, ${4: db: 0.0})
endsnippet

snippet BRZ2.coeffs
BRZ2.coeffs(${1:})
endsnippet

snippet Bag.new
Bag.new(${1:n: 4})
endsnippet

snippet Balance.ar
Balance.ar(${1:in: nil}, ${2: test: nil}, ${3: hp: 10}, ${4: stor: 0}, ${5: mul: 1}, ${6: add: 0})
endsnippet

snippet Balance2.ar
Balance2.ar(${1:left: nil}, ${2: right: nil}, ${3: pos: 0.0}, ${4: level: 1.0})
endsnippet

snippet Balance2.kr
Balance2.kr(${1:left: nil}, ${2: right: nil}, ${3: pos: 0.0}, ${4: level: 1.0})
endsnippet

snippet Ball.ar
Ball.ar(${1:in: 0.0}, ${2: g: 1}, ${3: damp: 0}, ${4: friction: 0.01})
endsnippet

snippet Ball.kr
Ball.kr(${1:in: 0.0}, ${2: g: 1}, ${3: damp: 0}, ${4: friction: 0.01})
endsnippet

snippet BasicMIDIWindow.addFaderAction
BasicMIDIWindow.addFaderAction(${1:n: 0}, ${2: action: nil})
endsnippet

snippet BasicMIDIWindow.addTreshAction
BasicMIDIWindow.addTreshAction(${1:n: 0}, ${2: val: 0.5}, ${3: up: nil}, ${4: down: nil})
endsnippet

snippet BasicMIDIWindow.midiRecorderAdd
BasicMIDIWindow.midiRecorderAdd(${1:i: nil}, ${2: val: nil})
endsnippet

snippet BasicMIDIWindow.playFile
BasicMIDIWindow.playFile(${1:file: nil}, ${2: doneAction: nil})
endsnippet

snippet BasicMIDIWindow.importFile
BasicMIDIWindow.importFile(${1:file: nil}, ${2: doBefore: nil})
endsnippet

snippet BasicMIDIWindow.playMIDIFile
BasicMIDIWindow.playMIDIFile(${1:path: nil})
endsnippet

snippet BasicMIDIWindow.close
BasicMIDIWindow.close(${1:})
endsnippet

snippet BasicMIDIWindow.resetActions
BasicMIDIWindow.resetActions(${1:})
endsnippet

snippet BasicMIDIWindow.new1
BasicMIDIWindow.new1(${1:nC: 16}, ${2: busOffset: 0}, ${3: initValues: nil}, ${4: historySize: 1}, ${5: maxMIDIVal: 127}, ${6: inAction: nil}, ${7: windowName: nil}, ${8: windowOffset: nil}, ${9: windowH: 290})
endsnippet

snippet BeatStatistics.kr
BeatStatistics.kr(${1:fft: nil}, ${2: leak: 0.995}, ${3: numpreviousbeats: 4})
endsnippet

snippet BeatTrack.kr
BeatTrack.kr(${1:chain: nil}, ${2: lock: 0})
endsnippet

snippet BeatTrack2.kr
BeatTrack2.kr(${1:busindex: nil}, ${2: numfeatures: nil}, ${3: windowsize: 2.0}, ${4: phaseaccuracy: 0.02}, ${5: lock: 0}, ${6: weightingscheme: nil})
endsnippet

snippet BelaScope.scope
BelaScope.scope(${1:channelOffset: nil}, ${2: signals: nil})
endsnippet

snippet BelaScope.monitorBus
BelaScope.monitorBus(${1:channelOffset: nil}, ${2: busindex: nil}, ${3: numChannels: nil}, ${4: target: nil}, ${5: rate: audio})
endsnippet

snippet BelaScope.prInputAsAudioRateUGens
BelaScope.prInputAsAudioRateUGens(${1:signals: nil})
endsnippet

snippet BelaScopeOut.ar
BelaScopeOut.ar(${1:offset: 0}, ${2: channelsArray: nil})
endsnippet

snippet BelaScopeOut.numFixedArgs
BelaScopeOut.numFixedArgs(${1:})
endsnippet

snippet BelaServerOptions.initClass
BelaServerOptions.initClass(${1:})
endsnippet

snippet BendResponder.init
BendResponder.init(${1:})
endsnippet

snippet BendResponder.initialized
BendResponder.initialized(${1:})
endsnippet

snippet BendResponder.responders
BendResponder.responders(${1:})
endsnippet

snippet BendResponder.add
BendResponder.add(${1:resp: nil})
endsnippet

snippet BendResponder.remove
BendResponder.remove(${1:resp: nil})
endsnippet

snippet BhobHiShelf.ar
BhobHiShelf.ar(${1:in: nil}, ${2: freq: nil}, ${3: amp: nil})
endsnippet

snippet BhobLoShelf.ar
BhobLoShelf.ar(${1:in: nil}, ${2: freq: nil}, ${3: amp: nil})
endsnippet

snippet BhobTone.ar
BhobTone.ar(${1:in: nil}, ${2: tone: nil})
endsnippet

snippet BiPanB2.ar
BiPanB2.ar(${1:inA: nil}, ${2: inB: nil}, ${3: azimuth: nil}, ${4: gain: 1})
endsnippet

snippet BiPanB2.kr
BiPanB2.kr(${1:inA: nil}, ${2: inB: nil}, ${3: azimuth: nil}, ${4: gain: 1})
endsnippet

snippet BinData.ar
BinData.ar(${1:buffer: nil}, ${2: bin: nil}, ${3: overlaps: 0.5})
endsnippet

snippet BinData.kr
BinData.kr(${1:buffer: nil}, ${2: bin: nil}, ${3: overlaps: 0.5})
endsnippet

snippet BinaryOpFunction.new
BinaryOpFunction.new(${1:selector: nil}, ${2: a: nil}, ${3: b: nil}, ${4: adverb: nil})
endsnippet

snippet BinaryOpPlug.new
BinaryOpPlug.new(${1:operator: nil}, ${2: a: nil}, ${3: b: nil})
endsnippet

snippet BinaryOpStream.new
BinaryOpStream.new(${1:operator: nil}, ${2: a: nil}, ${3: b: nil})
endsnippet

snippet BinaryOpUGen.new
BinaryOpUGen.new(${1:selector: nil}, ${2: a: nil}, ${3: b: nil})
endsnippet

snippet BinaryOpUGen.new1
BinaryOpUGen.new1(${1:rate: nil}, ${2: selector: nil}, ${3: a: nil}, ${4: b: nil})
endsnippet

snippet BinaryOpXStream.new
BinaryOpXStream.new(${1:operator: nil}, ${2: a: nil}, ${3: b: nil})
endsnippet

snippet BinauralDistance.new
BinauralDistance.new(${1:d: 1.4}, ${2: a: 0}, ${3: hr: 0.09})
endsnippet

snippet BinauralDistance.calcDelays
BinauralDistance.calcDelays(${1:l: 0}, ${2: r: 0}, ${3: speedOfSound: 334})
endsnippet

snippet BinauralDistance.calcDelaysNoDoppler
BinauralDistance.calcDelaysNoDoppler(${1:l: 0}, ${2: r: 0}, ${3: speedOfSound: 334})
endsnippet

snippet BinauralDistance.calcLevels
BinauralDistance.calcLevels(${1:l: 0}, ${2: r: 0}, ${3: ref: 0.5})
endsnippet

snippet Bjorklund.new
Bjorklund.new(${1:k: nil}, ${2: n: nil})
endsnippet

snippet Bjorklund.fromArray
Bjorklund.fromArray(${1:arr: nil})
endsnippet

snippet Bjorklund.prFromArray
Bjorklund.prFromArray(${1:arr: nil})
endsnippet

snippet Bjorklund.prSplit
Bjorklund.prSplit(${1:arr: nil})
endsnippet

snippet Bjorklund.prLace
Bjorklund.prLace(${1:a: nil}, ${2: b: nil})
endsnippet

snippet Bjorklund2.new
Bjorklund2.new(${1:k: nil}, ${2: n: nil})
endsnippet

snippet Blip.ar
Blip.ar(${1:freq: 440.0}, ${2: numharm: 200.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet Blip.kr
Blip.kr(${1:freq: 440.0}, ${2: numharm: 200.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet BlitB3.ar
BlitB3.ar(${1:freq: 440.0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet BlitB3D.ar
BlitB3D.ar(${1:freq: 440.0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet BlitB3Saw.ar
BlitB3Saw.ar(${1:freq: 440.0}, ${2: leak: 0.99}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet BlitB3Square.ar
BlitB3Square.ar(${1:freq: 440.0}, ${2: leak: 0.99}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet BlitB3Tri.ar
BlitB3Tri.ar(${1:freq: 440.0}, ${2: leak: 0.99}, ${3: leak2: 0.99}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet Boolean.new
Boolean.new(${1:})
endsnippet

snippet Boolean.newCopyArgs
Boolean.newCopyArgs(${1:})
endsnippet

snippet Breakcore.ar
Breakcore.ar(${1:bufnum: 0}, ${2: capturein: nil}, ${3: capturetrigger: nil}, ${4: duration: 0.1}, ${5: ampdropout: nil})
endsnippet

snippet Brusselator.ar
Brusselator.ar(${1:reset: 0}, ${2: rate: 0.01}, ${3: mu: 1.0}, ${4: gamma: 1.0}, ${5: initx: 0.5}, ${6: inity: 0.5}, ${7: mul: 1.0}, ${8: add: 0.0})
endsnippet

snippet BtoUHJ.ar
BtoUHJ.ar(${1:wsig: nil}, ${2: xsig: nil}, ${3: ysig: nil})
endsnippet

snippet BufCombN.ar
BufCombN.ar(${1:buf: 0}, ${2: in: 0.0}, ${3: delaytime: 0.2}, ${4: decaytime: 1.0}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet BufDelayN.ar
BufDelayN.ar(${1:buf: 0}, ${2: in: 0.0}, ${3: delaytime: 0.2}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet BufDelayN.kr
BufDelayN.kr(${1:buf: 0}, ${2: in: 0.0}, ${3: delaytime: 0.2}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet BufGrain.ar
BufGrain.ar(${1:trigger: 0}, ${2: dur: 1}, ${3: sndbuf: nil}, ${4: rate: 1}, ${5: pos: 0}, ${6: interp: 2}, ${7: mul: 1}, ${8: add: 0})
endsnippet

snippet BufGrainB.ar
BufGrainB.ar(${1:trigger: 0}, ${2: dur: 1}, ${3: sndbuf: nil}, ${4: rate: 1}, ${5: pos: 0}, ${6: envbuf: nil}, ${7: interp: 2}, ${8: mul: 1}, ${9: add: 0})
endsnippet

snippet BufGrainBBF.ar
BufGrainBBF.ar(${1:trigger: 0}, ${2: dur: 1}, ${3: sndbuf: nil}, ${4: rate: 1}, ${5: pos: 0}, ${6: envbuf: nil}, ${7: azimuth: 0}, ${8: elevation: 0}, ${9: rho: 1}, ${10: interp: 2}, ${11: wComp: 0}, ${12: mul: 1}, ${13: add: 0})
endsnippet

snippet BufGrainBF.ar
BufGrainBF.ar(${1:trigger: 0}, ${2: dur: 1}, ${3: sndbuf: nil}, ${4: rate: 1}, ${5: pos: 0}, ${6: azimuth: 0}, ${7: elevation: 0}, ${8: rho: 1}, ${9: interp: 2}, ${10: wComp: 0}, ${11: mul: 1}, ${12: add: 0})
endsnippet

snippet BufGrainI.ar
BufGrainI.ar(${1:trigger: 0}, ${2: dur: 1}, ${3: sndbuf: nil}, ${4: rate: 1}, ${5: pos: 0}, ${6: envbuf1: nil}, ${7: envbuf2: nil}, ${8: ifac: 0.5}, ${9: interp: 2}, ${10: mul: 1}, ${11: add: 0})
endsnippet

snippet BufGrainIBF.ar
BufGrainIBF.ar(${1:trigger: 0}, ${2: dur: 1}, ${3: sndbuf: nil}, ${4: rate: 1}, ${5: pos: 0}, ${6: envbuf1: nil}, ${7: envbuf2: nil}, ${8: ifac: 0.5}, ${9: azimuth: 0}, ${10: elevation: 0}, ${11: rho: 1}, ${12: interp: 2}, ${13: wComp: 0}, ${14: mul: 1}, ${15: add: 0})
endsnippet

snippet BufInfoUGenBase.kr
BufInfoUGenBase.kr(${1:bufnum: nil})
endsnippet

snippet BufInfoUGenBase.ir
BufInfoUGenBase.ir(${1:bufnum: nil})
endsnippet

snippet BufMax.kr
BufMax.kr(${1:bufnum: 0}, ${2: gate: 1})
endsnippet

snippet BufMax.categories
BufMax.categories(${1:})
endsnippet

snippet BufRd.ar
BufRd.ar(${1:numChannels: nil}, ${2: bufnum: 0}, ${3: phase: 0.0}, ${4: loop: 1.0}, ${5: interpolation: 2})
endsnippet

snippet BufRd.kr
BufRd.kr(${1:numChannels: nil}, ${2: bufnum: 0}, ${3: phase: 0.0}, ${4: loop: 1.0}, ${5: interpolation: 2})
endsnippet

snippet BufWr.ar
BufWr.ar(${1:inputArray: nil}, ${2: bufnum: 0}, ${3: phase: 0.0}, ${4: loop: 1.0})
endsnippet

snippet BufWr.kr
BufWr.kr(${1:inputArray: nil}, ${2: bufnum: 0}, ${3: phase: 0.0}, ${4: loop: 1.0})
endsnippet

snippet Buffer.initClass
Buffer.initClass(${1:})
endsnippet

snippet Buffer.new
Buffer.new(${1:server: nil}, ${2: numFrames: nil}, ${3: numChannels: nil}, ${4: bufnum: nil})
endsnippet

snippet Buffer.alloc
Buffer.alloc(${1:server: nil}, ${2: numFrames: nil}, ${3: numChannels: 1}, ${4: completionMessage: nil}, ${5: bufnum: nil})
endsnippet

snippet Buffer.allocConsecutive
Buffer.allocConsecutive(${1:numBufs: 1}, ${2: server: nil}, ${3: numFrames: nil}, ${4: numChannels: 1}, ${5: completionMessage: nil}, ${6: bufnum: nil})
endsnippet

snippet Buffer.read
Buffer.read(${1:server: nil}, ${2: path: nil}, ${3: startFrame: 0}, ${4: numFrames: -1}, ${5: action: nil}, ${6: bufnum: nil})
endsnippet

snippet Buffer.readChannel
Buffer.readChannel(${1:server: nil}, ${2: path: nil}, ${3: startFrame: 0}, ${4: numFrames: -1}, ${5: channels: nil}, ${6: action: nil}, ${7: bufnum: nil})
endsnippet

snippet Buffer.readNoUpdate
Buffer.readNoUpdate(${1:server: nil}, ${2: path: nil}, ${3: startFrame: 0}, ${4: numFrames: -1}, ${5: bufnum: nil}, ${6: completionMessage: nil})
endsnippet

snippet Buffer.cueSoundFile
Buffer.cueSoundFile(${1:server: nil}, ${2: path: nil}, ${3: startFrame: 0}, ${4: numChannels: 2}, ${5: bufferSize: 32768}, ${6: completionMessage: nil})
endsnippet

snippet Buffer.loadCollection
Buffer.loadCollection(${1:server: nil}, ${2: collection: nil}, ${3: numChannels: 1}, ${4: action: nil})
endsnippet

snippet Buffer.sendCollection
Buffer.sendCollection(${1:server: nil}, ${2: collection: nil}, ${3: numChannels: 1}, ${4: wait: -1}, ${5: action: nil})
endsnippet

snippet Buffer.freeAll
Buffer.freeAll(${1:server: nil})
endsnippet

snippet Buffer.initServerCache
Buffer.initServerCache(${1:server: nil})
endsnippet

snippet Buffer.clearServerCaches
Buffer.clearServerCaches(${1:server: nil})
endsnippet

snippet Buffer.cachedBuffersDo
Buffer.cachedBuffersDo(${1:server: nil}, ${2: func: nil})
endsnippet

snippet Buffer.cachedBufferAt
Buffer.cachedBufferAt(${1:server: nil}, ${2: bufnum: nil})
endsnippet

snippet Buffer.loadDialog
Buffer.loadDialog(${1:server: nil}, ${2: startFrame: 0}, ${3: numFrames: nil}, ${4: action: nil}, ${5: bufnum: nil})
endsnippet

snippet Buffer.readWithInfo
Buffer.readWithInfo(${1:server: nil}, ${2: path: nil}, ${3: startFrame: 0}, ${4: numFrames: -1}, ${5: onlyHeader: false}, ${6: onComplete: nil})
endsnippet

snippet Buffer.loadFunction
Buffer.loadFunction(${1:function: nil}, ${2: duration: nil}, ${3: bufnum: nil})
endsnippet

snippet Buffer.readDefault
Buffer.readDefault(${1:server: nil}, ${2: action: nil}, ${3: bufnum: nil})
endsnippet

snippet Buffer.readDefault44_1
Buffer.readDefault44_1(${1:server: nil}, ${2: action: nil}, ${3: bufnum: nil})
endsnippet

snippet Buffer.readMultiple
Buffer.readMultiple(${1:names: nil}, ${2: path: nil}, ${3: bufnumOffset: nil}, ${4: server: nil}, ${5: notify: true}, ${6: action: nil})
endsnippet

snippet Buffer.readDir
Buffer.readDir(${1:path: nil}, ${2: bufnumOffset: nil}, ${3: ext: wav}, ${4: server: nil}, ${5: notify: true}, ${6: nlevels: inf}, ${7: action: nil})
endsnippet

snippet Buffer.playDialog
Buffer.playDialog(${1:mul: 1}, ${2: rate: 1}, ${3: out: 0}, ${4: server: nil}, ${5: free: true}, ${6: startFrame: 0}, ${7: numFrames: nil}, ${8: bufnum: nil})
endsnippet

snippet Buffer.readPlay
Buffer.readPlay(${1:server: nil}, ${2: path: nil}, ${3: free: false}, ${4: startFrame: 0}, ${5: numFrames: nil}, ${6: bufnum: nil}, ${7: mul: 1}, ${8: rate: 1}, ${9: out: 0})
endsnippet

snippet BundleNetAddr.copyFrom
BundleNetAddr.copyFrom(${1:addr: nil}, ${2: bundle: nil})
endsnippet

snippet Bus.control
Bus.control(${1:server: nil}, ${2: numChannels: 1})
endsnippet

snippet Bus.audio
Bus.audio(${1:server: nil}, ${2: numChannels: 1})
endsnippet

snippet Bus.alloc
Bus.alloc(${1:rate: nil}, ${2: server: nil}, ${3: numChannels: 1})
endsnippet

snippet Bus.new
Bus.new(${1:rate: audio}, ${2: index: 0}, ${3: numChannels: 2}, ${4: server: nil})
endsnippet

snippet Bus.newFrom
Bus.newFrom(${1:bus: nil}, ${2: offset: nil}, ${3: numChannels: 1})
endsnippet

snippet BusPlug.new
BusPlug.new(${1:server: nil})
endsnippet

snippet BusPlug.for
BusPlug.for(${1:bus: nil})
endsnippet

snippet BusPlug.audio
BusPlug.audio(${1:server: nil}, ${2: numChannels: nil})
endsnippet

snippet BusPlug.control
BusPlug.control(${1:server: nil}, ${2: numChannels: nil})
endsnippet

snippet BusScopeSynth.new
BusScopeSynth.new(${1:server: nil})
endsnippet

snippet Button.qtClass
Button.qtClass(${1:})
endsnippet

snippet CCResponder.new
CCResponder.new(${1:function: nil}, ${2: src: nil}, ${3: chan: nil}, ${4: num: nil}, ${5: value: nil}, ${6: install: true}, ${7: swallowEvent: false})
endsnippet

snippet CCResponder.initialized
CCResponder.initialized(${1:})
endsnippet

snippet CCResponder.responders
CCResponder.responders(${1:})
endsnippet

snippet CCResponder.add
CCResponder.add(${1:resp: nil})
endsnippet

snippet CCResponder.remove
CCResponder.remove(${1:resp: nil})
endsnippet

snippet CCResponder.init
CCResponder.init(${1:})
endsnippet

snippet COsc.ar
COsc.ar(${1:bufnum: nil}, ${2: freq: 440.0}, ${3: beats: 0.5}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet COsc.kr
COsc.kr(${1:bufnum: nil}, ${2: freq: 440.0}, ${3: beats: 0.5}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet CQ_Diff.kr
CQ_Diff.kr(${1:in1: 0.0}, ${2: in2: 0.0}, ${3: databufnum: nil})
endsnippet

snippet Cepstrum.new
Cepstrum.new(${1:cepbuf: nil}, ${2: fftchain: nil})
endsnippet

snippet Changed.kr
Changed.kr(${1:input: nil}, ${2: threshold: 0})
endsnippet

snippet Changed.ar
Changed.ar(${1:input: nil}, ${2: threshold: 0})
endsnippet

snippet Char.new
Char.new(${1:})
endsnippet

snippet CheapVerb.ar
CheapVerb.ar(${1:in: nil}, ${2: decayTime: 1}, ${3: numDelays: 6}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet CheckBadValues.ar
CheckBadValues.ar(${1:in: 0.0}, ${2: id: 0}, ${3: post: 2})
endsnippet

snippet CheckBadValues.kr
CheckBadValues.kr(${1:in: 0.0}, ${2: id: 0}, ${3: post: 2})
endsnippet

snippet CheckBox.qtClass
CheckBox.qtClass(${1:})
endsnippet

snippet CheckBox.new
CheckBox.new(${1:parent: nil}, ${2: bounds: nil}, ${3: text: nil})
endsnippet

snippet Chromagram.kr
Chromagram.kr(${1:fft: nil}, ${2: fftsize: 2048}, ${3: n: 12}, ${4: tuningbase: 32.703195662575}, ${5: octaves: 8}, ${6: integrationflag: 0}, ${7: coeff: 0.9}, ${8: octaveratio: 2}, ${9: perframenormalize: 0})
endsnippet

snippet CircleRamp.ar
CircleRamp.ar(${1:in: 0.0}, ${2: lagTime: 0.1}, ${3: circmin: -180}, ${4: circmax: 180}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet CircleRamp.kr
CircleRamp.kr(${1:in: 0.0}, ${2: lagTime: 0.1}, ${3: circmin: -180}, ${4: circmax: 180}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet Class.initClassTree
Class.initClassTree(${1:aClass: nil})
endsnippet

snippet Class.allClasses
Class.allClasses(${1:})
endsnippet

snippet Class.findAllReferences
Class.findAllReferences(${1:aSymbol: nil})
endsnippet

snippet ClassBrowser.new
ClassBrowser.new(${1:class: nil})
endsnippet

snippet ClassBrowser.getClass
ClassBrowser.getClass(${1:method: nil})
endsnippet

snippet ClassBrowser.initGUI
ClassBrowser.initGUI(${1:})
endsnippet

snippet CleanupStream.new
CleanupStream.new(${1:stream: nil}, ${2: cleanup: nil})
endsnippet

snippet ClearBuf.new
ClearBuf.new(${1:buf: nil})
endsnippet

snippet Clipper32.ar
Clipper32.ar(${1:in: nil}, ${2: lo: -0.8}, ${3: hi: 0.8})
endsnippet

snippet Clipper4.ar
Clipper4.ar(${1:in: nil}, ${2: lo: -0.8}, ${3: hi: 0.8})
endsnippet

snippet Clipper8.ar
Clipper8.ar(${1:in: nil}, ${2: lo: -0.8}, ${3: hi: 0.8})
endsnippet

snippet Clock.play
Clock.play(${1:task: nil})
endsnippet

snippet Clock.seconds
Clock.seconds(${1:})
endsnippet

snippet Clock.beats
Clock.beats(${1:})
endsnippet

snippet Clock.beats2secs
Clock.beats2secs(${1:beats: nil})
endsnippet

snippet Clock.secs2beats
Clock.secs2beats(${1:secs: nil})
endsnippet

snippet Clock.beats2bars
Clock.beats2bars(${1:})
endsnippet

snippet Clock.bars2beats
Clock.bars2beats(${1:})
endsnippet

snippet Clock.timeToNextBeat
Clock.timeToNextBeat(${1:})
endsnippet

snippet Clock.nextTimeOnGrid
Clock.nextTimeOnGrid(${1:quant: 1}, ${2: phase: 0})
endsnippet

snippet Clockmus.kr
Clockmus.kr(${1:})
endsnippet

snippet Clockmus.categories
Clockmus.categories(${1:})
endsnippet

snippet CmdPeriod.doOnce
CmdPeriod.doOnce(${1:object: nil})
endsnippet

snippet CmdPeriod.run
CmdPeriod.run(${1:})
endsnippet

snippet CmdPeriod.hardRun
CmdPeriod.hardRun(${1:})
endsnippet

snippet CoinGate.ar
CoinGate.ar(${1:prob: nil}, ${2: in: nil})
endsnippet

snippet CoinGate.kr
CoinGate.kr(${1:prob: nil}, ${2: in: nil})
endsnippet

snippet ColPen.clear
ColPen.clear(${1:})
endsnippet

snippet ColPen.use
ColPen.use(${1:function: nil})
endsnippet

snippet ColPen.push
ColPen.push(${1:})
endsnippet

snippet ColPen.pop
ColPen.pop(${1:})
endsnippet

snippet ColPen.line
ColPen.line(${1:p1: nil}, ${2: p2: nil})
endsnippet

snippet ColPen.doesNotUnderstand
ColPen.doesNotUnderstand(${1:selector: nil}, ${2: args: [  ]})
endsnippet

snippet ColPen.respondsTo
ColPen.respondsTo(${1:aSymbol: nil})
endsnippet

snippet ColPen.draw
ColPen.draw(${1:penClass: nil}, ${2: clear: true}, ${3: inCmds: nil})
endsnippet

snippet ColPen.asCode
ColPen.asCode(${1:penClass: nil}, ${2: clear: true}, ${3: inCmds: nil}, ${4: indent: 0})
endsnippet

snippet ColPen.collectUse
ColPen.collectUse(${1:inCmds: nil})
endsnippet

snippet ColPen.asSVGGroup
ColPen.asSVGGroup(${1:clear: true}, ${2: inCmds: nil}, ${3: index: 0}, ${4: inTransform: nil})
endsnippet

snippet ColPen.asSVGFile
ColPen.asSVGFile(${1:path: nil}, ${2: clear: true})
endsnippet

snippet ColPen.asPostScript
ColPen.asPostScript(${1:clear: true}, ${2: pageSize: nil}, ${3: header: nil})
endsnippet

snippet ColPenGUI.initClass
ColPenGUI.initClass(${1:mustInitGUI: true})
endsnippet

snippet ColPenGUI.id
ColPenGUI.id(${1:})
endsnippet

snippet ColPenGUI.pen
ColPenGUI.pen(${1:})
endsnippet

snippet ColPenGUI.doesNotUnderstand
ColPenGUI.doesNotUnderstand(${1:selector: nil}, ${2: args: [  ]})
endsnippet

snippet CollStream.new
CollStream.new(${1:collection: nil})
endsnippet

snippet CollStream.on
CollStream.on(${1:aCollection: nil})
endsnippet

snippet Collection.newFrom
Collection.newFrom(${1:aCollection: nil})
endsnippet

snippet Collection.with
Collection.with(${1:args: [  ]})
endsnippet

snippet Collection.fill
Collection.fill(${1:size: nil}, ${2: function: nil})
endsnippet

snippet Collection.fill2D
Collection.fill2D(${1:rows: nil}, ${2: cols: nil}, ${3: function: nil})
endsnippet

snippet Collection.fill3D
Collection.fill3D(${1:planes: nil}, ${2: rows: nil}, ${3: cols: nil}, ${4: function: nil})
endsnippet

snippet Collection.fillND
Collection.fillND(${1:dimensions: nil}, ${2: function: nil}, ${3: args: [  ]})
endsnippet

snippet Color.new
Color.new(${1:red: 0.0}, ${2: green: 0.0}, ${3: blue: 0.0}, ${4: alpha: 1.0})
endsnippet

snippet Color.new255
Color.new255(${1:red: 0}, ${2: green: 0}, ${3: blue: 0}, ${4: alpha: 255})
endsnippet

snippet Color.fromArray
Color.fromArray(${1:array: nil})
endsnippet

snippet Color.black
Color.black(${1:})
endsnippet

snippet Color.white
Color.white(${1:})
endsnippet

snippet Color.red
Color.red(${1:val: 1.0}, ${2: alpha: 1.0})
endsnippet

snippet Color.green
Color.green(${1:val: 1.0}, ${2: alpha: 1.0})
endsnippet

snippet Color.blue
Color.blue(${1:val: 1.0}, ${2: alpha: 1.0})
endsnippet

snippet Color.cyan
Color.cyan(${1:val: 1.0}, ${2: alpha: 1.0})
endsnippet

snippet Color.magenta
Color.magenta(${1:val: 1.0}, ${2: alpha: 1.0})
endsnippet

snippet Color.yellow
Color.yellow(${1:val: 1.0}, ${2: alpha: 1.0})
endsnippet

snippet Color.clear
Color.clear(${1:})
endsnippet

snippet Color.grey
Color.grey(${1:grey: 0.5}, ${2: alpha: 1.0})
endsnippet

snippet Color.gray
Color.gray(${1:gray: 0.5}, ${2: alpha: 1.0})
endsnippet

snippet Color.rand
Color.rand(${1:lo: 0.3}, ${2: hi: 0.9})
endsnippet

snippet Color.hsv
Color.hsv(${1:hue: nil}, ${2: sat: nil}, ${3: val: nil}, ${4: alpha: 1})
endsnippet

snippet Color.fromHexString
Color.fromHexString(${1:string: nil})
endsnippet

snippet Color.newHex
Color.newHex(${1:hexName: 000000}, ${2: alpha: 255})
endsnippet

snippet Color.newName
Color.newName(${1:name: nil}, ${2: table: nil}, ${3: includeXWindows: false})
endsnippet

snippet Color.webNameIndex
Color.webNameIndex(${1:name: white}, ${2: table: nil})
endsnippet

snippet Color.sortedWebColors
Color.sortedWebColors(${1:index: nil}, ${2: table: nil})
endsnippet

snippet Color.web16
Color.web16(${1:name: nil}, ${2: alpha: 1.0})
endsnippet

snippet Color.web
Color.web(${1:name: nil}, ${2: alpha: 1.0})
endsnippet

snippet Color.xwindowsBW
Color.xwindowsBW(${1:name: nil}, ${2: alpha: 1.0}, ${3: includeGrayShades: true})
endsnippet

snippet Color.xwindows
Color.xwindows(${1:name: nil}, ${2: alpha: 1.0}, ${3: includeGrayShades: false})
endsnippet

snippet CombFormlet.ar
CombFormlet.ar(${1:in: 0.0}, ${2: freq: 440.0}, ${3: attacktime: 1.0}, ${4: decaytime: 1.0}, ${5: mul: 1.0}, ${6: add: 0.0}, ${7: minFreq: 20})
endsnippet

snippet CombLP.ar
CombLP.ar(${1:in: 0.0}, ${2: gate: 1.0}, ${3: maxdelaytime: 0.2}, ${4: delaytime: 0.2}, ${5: decaytime: 1.0}, ${6: coef: 0.5}, ${7: mul: 1.0}, ${8: add: 0.0})
endsnippet

snippet CombN.ar
CombN.ar(${1:in: 0.0}, ${2: maxdelaytime: 0.2}, ${3: delaytime: 0.2}, ${4: decaytime: 1.0}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet CombN.kr
CombN.kr(${1:in: 0.0}, ${2: maxdelaytime: 0.2}, ${3: delaytime: 0.2}, ${4: decaytime: 1.0}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet Compander.ar
Compander.ar(${1:in: 0.0}, ${2: control: 0.0}, ${3: thresh: 0.5}, ${4: slopeBelow: 1.0}, ${5: slopeAbove: 1.0}, ${6: clampTime: 0.01}, ${7: relaxTime: 0.1}, ${8: mul: 1.0}, ${9: add: 0.0})
endsnippet

snippet CompanderD.ar
CompanderD.ar(${1:in: 0.0}, ${2: thresh: 0.5}, ${3: slopeBelow: 1.0}, ${4: slopeAbove: 1.0}, ${5: clampTime: 0.01}, ${6: relaxTime: 0.01}, ${7: mul: 1.0}, ${8: add: 0.0})
endsnippet

snippet Complex.new
Complex.new(${1:real: nil}, ${2: imag: nil})
endsnippet

snippet ComplexRes.ar
ComplexRes.ar(${1:in: 0.0}, ${2: freq: 100.0}, ${3: decay: 0.2})
endsnippet

snippet Concat.ar
Concat.ar(${1:control: nil}, ${2: source: nil}, ${3: storesize: 1.0}, ${4: seektime: 1.0}, ${5: seekdur: 1.0}, ${6: matchlength: 0.05}, ${7: freezestore: 0}, ${8: zcr: 1.0}, ${9: lms: 1.0}, ${10: sc: 1.0}, ${11: st: 0.0}, ${12: randscore: 0.0}, ${13: mul: 1.0}, ${14: add: 0.0})
endsnippet

snippet Concat2.ar
Concat2.ar(${1:control: nil}, ${2: source: nil}, ${3: storesize: 1.0}, ${4: seektime: 1.0}, ${5: seekdur: 1.0}, ${6: matchlength: 0.05}, ${7: freezestore: 0}, ${8: zcr: 1.0}, ${9: lms: 1.0}, ${10: sc: 1.0}, ${11: st: 0.0}, ${12: randscore: 0.0}, ${13: threshold: 0.01}, ${14: mul: 1.0}, ${15: add: 0.0})
endsnippet

snippet CondVar.new
CondVar.new(${1:})
endsnippet

snippet Condition.new
Condition.new(${1:test: false})
endsnippet

snippet ContiguousBlock.new
ContiguousBlock.new(${1:start: nil}, ${2: size: nil})
endsnippet

snippet ContiguousBlockAllocator.new
ContiguousBlockAllocator.new(${1:size: nil}, ${2: pos: 0}, ${3: addrOffset: 0})
endsnippet

snippet Control.names
Control.names(${1:names: nil})
endsnippet

snippet Control.kr
Control.kr(${1:values: nil})
endsnippet

snippet Control.ir
Control.ir(${1:values: nil})
endsnippet

snippet Control.isControlUGen
Control.isControlUGen(${1:})
endsnippet

snippet ControlName.new
ControlName.new(${1:name: nil}, ${2: index: nil}, ${3: rate: nil}, ${4: defaultValue: nil}, ${5: argNum: nil}, ${6: lag: nil})
endsnippet

snippet ControlSpec.new
ControlSpec.new(${1:minval: 0.0}, ${2: maxval: 1.0}, ${3: warp: lin}, ${4: step: 0.0}, ${5: default: nil}, ${6: units: nil}, ${7: grid: nil})
endsnippet

snippet ControlSpec.newFrom
ControlSpec.newFrom(${1:similar: nil})
endsnippet

snippet ControlSpec.initClass
ControlSpec.initClass(${1:})
endsnippet

snippet Convolution.ar
Convolution.ar(${1:in: nil}, ${2: kernel: nil}, ${3: framesize: 512}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet Convolution2.ar
Convolution2.ar(${1:in: nil}, ${2: kernel: nil}, ${3: trigger: 0}, ${4: framesize: 2048}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet Convolution2L.ar
Convolution2L.ar(${1:in: nil}, ${2: kernel: nil}, ${3: trigger: 0}, ${4: framesize: 2048}, ${5: crossfade: 1}, ${6: mul: 1.0}, ${7: add: 0.0})
endsnippet

snippet Convolution3.ar
Convolution3.ar(${1:in: nil}, ${2: kernel: nil}, ${3: trigger: 0}, ${4: framesize: 2048}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet Convolution3.kr
Convolution3.kr(${1:in: nil}, ${2: kernel: nil}, ${3: trigger: 0}, ${4: framesize: 2048}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet CoverMe.initClass
CoverMe.initClass(${1:})
endsnippet

snippet CoverMe.start
CoverMe.start(${1:})
endsnippet

snippet CoverMe.stop
CoverMe.stop(${1:})
endsnippet

snippet CoverMe.showFiles
CoverMe.showFiles(${1:})
endsnippet

snippet Coyote.kr
Coyote.kr(${1:in: 0.0}, ${2: trackFall: 0.2}, ${3: slowLag: 0.2}, ${4: fastLag: 0.01}, ${5: fastMul: 0.5}, ${6: thresh: 0.05}, ${7: minDur: 0.1})
endsnippet

snippet Crackle.ar
Crackle.ar(${1:chaosParam: 1.5}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet Crackle.kr
Crackle.kr(${1:chaosParam: 1.5}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet Crest.kr
Crest.kr(${1:in: nil}, ${2: numsamps: 400}, ${3: gate: 1}, ${4: mul: 1}, ${5: add: 0})
endsnippet

snippet Crest.categories
Crest.categories(${1:})
endsnippet

snippet CrossoverDistortion.ar
CrossoverDistortion.ar(${1:in: nil}, ${2: amp: 0.5}, ${3: smooth: 0.5}, ${4: mul: 1.0}, ${5: add: 0})
endsnippet

snippet CurveWarp.new
CurveWarp.new(${1:spec: nil}, ${2: curve: -2})
endsnippet

snippet CuspN.ar
CuspN.ar(${1:freq: 22050}, ${2: a: 1}, ${3: b: 1.9}, ${4: xi: 0}, ${5: mul: 1}, ${6: add: 0})
endsnippet

snippet CustomViewAction.new
CustomViewAction.new(${1:view: nil}, ${2: function: nil})
endsnippet

snippet CustomViewAction.qtClass
CustomViewAction.qtClass(${1:})
endsnippet

snippet DC.ar
DC.ar(${1:in: 0.0})
endsnippet

snippet DC.kr
DC.kr(${1:in: 0.0})
endsnippet

snippet DFM1.ar
DFM1.ar(${1:in: nil}, ${2: freq: 1000.0}, ${3: res: 0.1}, ${4: inputgain: 1.0}, ${5: type: 0.0}, ${6: noiselevel: 0.0003}, ${7: mul: 1.0}, ${8: add: 0.0})
endsnippet

snippet DMX.new
DMX.new(${1:})
endsnippet

snippet DMXColor.initClass
DMXColor.initClass(${1:})
endsnippet

snippet DMXColor.get
DMXColor.get(${1:color: nil})
endsnippet

snippet DMXConsole.new
DMXConsole.new(${1:dmx: nil}, ${2: w: nil})
endsnippet

snippet DMXCue.initClass
DMXCue.initClass(${1:})
endsnippet

snippet DMXCue.new
DMXCue.new(${1:offset: nil}, ${2: maxch: nil})
endsnippet

snippet DMXGroup.new
DMXGroup.new(${1:name: nil})
endsnippet

snippet DMXGui.new
DMXGui.new(${1:dmx: nil}, ${2: w: nil})
endsnippet

snippet DMXLight.new
DMXLight.new(${1:name: nil})
endsnippet

snippet DMXMap.initClass
DMXMap.initClass(${1:})
endsnippet

snippet DMXMap.addMap
DMXMap.addMap(${1:name: nil})
endsnippet

snippet DMXMap.at
DMXMap.at(${1:name: nil})
endsnippet

snippet DMXMap.putItem
DMXMap.putItem(${1:name: nil}, ${2: itemName: nil}, ${3: value: nil})
endsnippet

snippet DMXSet.new
DMXSet.new(${1:name: nil})
endsnippet

snippet DMXSlider.new
DMXSlider.new(${1:dmx: nil}, ${2: parent: nil}, ${3: xoff: nil})
endsnippet

snippet DMXSubCue.new
DMXSubCue.new(${1:})
endsnippet

snippet DNoiseRing.new
DNoiseRing.new(${1:change: 0.5}, ${2: chance: 0.5}, ${3: shift: 1}, ${4: numBits: 8}, ${5: resetval: 0})
endsnippet

snippet DOMCDATASection.new
DOMCDATASection.new(${1:owner: nil}, ${2: cdata: nil})
endsnippet

snippet DOMComment.new
DOMComment.new(${1:owner: nil}, ${2: comment: nil})
endsnippet

snippet DOMDocument.new
DOMDocument.new(${1:filename: nil})
endsnippet

snippet DOMDocument.initStandardEntities
DOMDocument.initStandardEntities(${1:})
endsnippet

snippet DOMDocument.decodeStandardEntities
DOMDocument.decodeStandardEntities(${1:s: nil})
endsnippet

snippet DOMDocument.encodeStandardEntities
DOMDocument.encodeStandardEntities(${1:s: nil})
endsnippet

snippet DOMDocumentFragment.new
DOMDocumentFragment.new(${1:owner: nil})
endsnippet

snippet DOMElement.new
DOMElement.new(${1:owner: nil}, ${2: tagname: nil})
endsnippet

snippet DOMImplementation.instance
DOMImplementation.instance(${1:})
endsnippet

snippet DOMProcessingInstruction.new
DOMProcessingInstruction.new(${1:owner: nil}, ${2: target: nil}, ${3: data: nil})
endsnippet

snippet DOMText.new
DOMText.new(${1:owner: nil}, ${2: text: nil})
endsnippet

snippet DPW3Tri.ar
DPW3Tri.ar(${1:freq: 440.0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet DPW4Saw.ar
DPW4Saw.ar(${1:freq: 440.0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet DWGBowed.ar
DWGBowed.ar(${1:freq: 440}, ${2: velb: 0.5}, ${3: force: 1}, ${4: gate: 1}, ${5: pos: 0.14}, ${6: release: 0.1}, ${7: c1: 1}, ${8: c3: 3}, ${9: impZ: 0.55}, ${10: fB: 2})
endsnippet

snippet DWGBowedSimple.ar
DWGBowedSimple.ar(${1:freq: 440}, ${2: velb: 0.5}, ${3: force: 1}, ${4: gate: 1}, ${5: pos: 0.14}, ${6: release: 0.1}, ${7: c1: 1}, ${8: c3: 30})
endsnippet

snippet DWGBowedTor.ar
DWGBowedTor.ar(${1:freq: 440}, ${2: velb: 0.5}, ${3: force: 1}, ${4: gate: 1}, ${5: pos: 0.14}, ${6: release: 0.1}, ${7: c1: 1}, ${8: c3: 3}, ${9: impZ: 0.55}, ${10: fB: 2}, ${11: mistune: 5.2}, ${12: c1tor: 1}, ${13: c3tor: 3000}, ${14: iZtor: 1.8})
endsnippet

snippet DWGPlucked.ar
DWGPlucked.ar(${1:freq: 440}, ${2: amp: 0.5}, ${3: gate: 1}, ${4: pos: 0.14}, ${5: c1: 1}, ${6: c3: 30}, ${7: inp: 0}, ${8: release: 0.1})
endsnippet

snippet DWGPlucked2.ar
DWGPlucked2.ar(${1:freq: 440}, ${2: amp: 0.5}, ${3: gate: 1}, ${4: pos: 0.14}, ${5: c1: 1}, ${6: c3: 30}, ${7: inp: 0}, ${8: release: 0.1}, ${9: mistune: 1.008}, ${10: mp: 0.55}, ${11: gc: 0.01})
endsnippet

snippet DWGPluckedStiff.ar
DWGPluckedStiff.ar(${1:freq: 440}, ${2: amp: 0.5}, ${3: gate: 1}, ${4: pos: 0.14}, ${5: c1: 1}, ${6: c3: 30}, ${7: inp: 0}, ${8: release: 0.1}, ${9: fB: 2})
endsnippet

snippet DWGSoundBoard.ar
DWGSoundBoard.ar(${1:inp: 0}, ${2: c1: 20}, ${3: c3: 20}, ${4: mix: 0.8}, ${5: d1: 199}, ${6: d2: 211}, ${7: d3: 223}, ${8: d4: 227}, ${9: d5: 229}, ${10: d6: 233}, ${11: d7: 239}, ${12: d8: 241})
endsnippet

snippet Date.getDate
Date.getDate(${1:})
endsnippet

snippet Date.localtime
Date.localtime(${1:})
endsnippet

snippet Date.gmtime
Date.gmtime(${1:})
endsnippet

snippet Date.new
Date.new(${1:year: nil}, ${2: month: nil}, ${3: day: nil}, ${4: hour: nil}, ${5: minute: nil}, ${6: second: nil}, ${7: dayOfWeek: nil}, ${8: rawSeconds: nil})
endsnippet

snippet Date.seed
Date.seed(${1:})
endsnippet

snippet Date.fromSMPTE
Date.fromSMPTE(${1:smpte: nil}, ${2: daylightSavings: 1})
endsnippet

snippet Date.fromRawSeconds
Date.fromRawSeconds(${1:rawSeconds: 0}, ${2: daylightSavings: 1})
endsnippet

snippet Dbrown.new
Dbrown.new(${1:lo: 0.0}, ${2: hi: 1.0}, ${3: step: 0.01}, ${4: length: inf})
endsnippet

snippet Dbrown2.new
Dbrown2.new(${1:lo: nil}, ${2: hi: nil}, ${3: step: nil}, ${4: dist: nil}, ${5: length: inf})
endsnippet

snippet DbufTag.new
DbufTag.new(${1:bufnum: nil}, ${2: v: nil}, ${3: axiom: nil}, ${4: rules: nil}, ${5: recycle: 0}, ${6: mode: 0})
endsnippet

snippet DbufTag.convertRules
DbufTag.convertRules(${1:axiom: nil}, ${2: rules: nil})
endsnippet

snippet Dbufrd.new
Dbufrd.new(${1:bufnum: 0}, ${2: phase: 0.0}, ${3: loop: 1.0})
endsnippet

snippet Dbufwr.new
Dbufwr.new(${1:input: 0.0}, ${2: bufnum: 0}, ${3: phase: 0.0}, ${4: loop: 1.0})
endsnippet

snippet Dconst.new
Dconst.new(${1:sum: nil}, ${2: in: nil}, ${3: tolerance: 0.001})
endsnippet

snippet Ddup.new
Ddup.new(${1:n: nil}, ${2: in: nil})
endsnippet

snippet Decay.ar
Decay.ar(${1:in: 0.0}, ${2: decayTime: 1.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet Decay.kr
Decay.kr(${1:in: 0.0}, ${2: decayTime: 1.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet Decay2.ar
Decay2.ar(${1:in: 0.0}, ${2: attackTime: 0.01}, ${3: decayTime: 1.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet Decay2.kr
Decay2.kr(${1:in: 0.0}, ${2: attackTime: 0.01}, ${3: decayTime: 1.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet Decimator.ar
Decimator.ar(${1:in: nil}, ${2: rate: 44100.0}, ${3: bits: 24}, ${4: mul: 1.0}, ${5: add: 0})
endsnippet

snippet DecodeB2.ar
DecodeB2.ar(${1:numChans: nil}, ${2: w: nil}, ${3: x: nil}, ${4: y: nil}, ${5: orientation: 0.5})
endsnippet

snippet DecodeB2.kr
DecodeB2.kr(${1:numChans: nil}, ${2: w: nil}, ${3: x: nil}, ${4: y: nil}, ${5: orientation: 0.5})
endsnippet

snippet DeferredView.new
DeferredView.new(${1:view: nil})
endsnippet

snippet DegreeToKey.ar
DegreeToKey.ar(${1:bufnum: nil}, ${2: in: 0.0}, ${3: octave: 12.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet DegreeToKey.kr
DegreeToKey.kr(${1:bufnum: nil}, ${2: in: 0.0}, ${3: octave: 12.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet DelTapRd.ar
DelTapRd.ar(${1:buffer: nil}, ${2: phase: nil}, ${3: delTime: nil}, ${4: interp: 1}, ${5: mul: 1}, ${6: add: 0})
endsnippet

snippet DelTapRd.kr
DelTapRd.kr(${1:buffer: nil}, ${2: phase: nil}, ${3: delTime: nil}, ${4: interp: 1}, ${5: mul: 1}, ${6: add: 0})
endsnippet

snippet DelTapWr.ar
DelTapWr.ar(${1:buffer: nil}, ${2: in: nil})
endsnippet

snippet DelTapWr.kr
DelTapWr.kr(${1:buffer: nil}, ${2: in: nil})
endsnippet

snippet Delay1.ar
Delay1.ar(${1:in: 0.0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet Delay1.kr
Delay1.kr(${1:in: 0.0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet DelayN.ar
DelayN.ar(${1:in: 0.0}, ${2: maxdelaytime: 0.2}, ${3: delaytime: 0.2}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet DelayN.kr
DelayN.kr(${1:in: 0.0}, ${2: maxdelaytime: 0.2}, ${3: delaytime: 0.2}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet DelayWr.ar
DelayWr.ar(${1:bufnum: nil}, ${2: in: 0.0})
endsnippet

snippet Demand.ar
Demand.ar(${1:trig: nil}, ${2: reset: nil}, ${3: demandUGens: nil})
endsnippet

snippet Demand.kr
Demand.kr(${1:trig: nil}, ${2: reset: nil}, ${3: demandUGens: nil})
endsnippet

snippet DemandEnvGen.kr
DemandEnvGen.kr(${1:level: nil}, ${2: dur: nil}, ${3: shape: 1}, ${4: curve: 0}, ${5: gate: 1.0}, ${6: reset: 1.0}, ${7: levelScale: 1.0}, ${8: levelBias: 0.0}, ${9: timeScale: 1.0}, ${10: doneAction: 0})
endsnippet

snippet DemandEnvGen.ar
DemandEnvGen.ar(${1:level: nil}, ${2: dur: nil}, ${3: shape: 1}, ${4: curve: 0}, ${5: gate: 1.0}, ${6: reset: 1.0}, ${7: levelScale: 1.0}, ${8: levelBias: 0.0}, ${9: timeScale: 1.0}, ${10: doneAction: 0})
endsnippet

snippet DeprecatedError.new
DeprecatedError.new(${1:receiver: nil}, ${2: method: nil}, ${3: alternateMethod: nil}, ${4: class: nil})
endsnippet

snippet DetaBlockerBuf.new
DetaBlockerBuf.new(${1:bufnum: 0}, ${2: startpoint: 0})
endsnippet

snippet DetectSilence.ar
DetectSilence.ar(${1:in: 0.0}, ${2: amp: 0.0001}, ${3: time: 0.1}, ${4: doneAction: 0})
endsnippet

snippet DetectSilence.kr
DetectSilence.kr(${1:in: 0.0}, ${2: amp: 0.0001}, ${3: time: 0.1}, ${4: doneAction: 0})
endsnippet

snippet Dfsm.new
Dfsm.new(${1:rules: nil}, ${2: n: 1}, ${3: rgen: nil})
endsnippet

snippet Dfsm.convertRules
Dfsm.convertRules(${1:rules: nil})
endsnippet

snippet Dgauss.new
Dgauss.new(${1:lo: nil}, ${2: hi: nil}, ${3: length: inf})
endsnippet

snippet Dgeom.new
Dgeom.new(${1:start: 1}, ${2: grow: 2}, ${3: length: inf})
endsnippet

snippet Dialog.openPanel
Dialog.openPanel(${1:okFunc: nil}, ${2: cancelFunc: nil}, ${3: multipleSelection: false}, ${4: path: nil})
endsnippet

snippet Dialog.savePanel
Dialog.savePanel(${1:okFunc: nil}, ${2: cancelFunc: nil}, ${3: path: nil})
endsnippet

snippet Dialog.getPaths
Dialog.getPaths(${1:okFunc: nil}, ${2: cancelFunc: nil}, ${3: allowsMultiple: true})
endsnippet

snippet Dictionary.new
Dictionary.new(${1:n: 8})
endsnippet

snippet Dictionary.newFrom
Dictionary.newFrom(${1:aCollection: nil})
endsnippet

snippet DigitalIO.ar
DigitalIO.ar(${1:digitalPin: 0}, ${2: output: 0}, ${3: pinMode: 0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet DigitalIO.kr
DigitalIO.kr(${1:digitalPin: 0}, ${2: output: 0}, ${3: pinMode: 0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet DigitalIn.ar
DigitalIn.ar(${1:digitalPin: 0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet DigitalIn.kr
DigitalIn.kr(${1:digitalPin: 0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet DigitalOut.ar
DigitalOut.ar(${1:digitalPin: 0}, ${2: output: 0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet DigitalOut.kr
DigitalOut.kr(${1:digitalPin: 0}, ${2: output: 0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet DiodeRingMod.ar
DiodeRingMod.ar(${1:car: 0.0}, ${2: mod: 0.0})
endsnippet

snippet DirtEnvGen.ar
DirtEnvGen.ar(${1:env: nil}, ${2: begin: nil}, ${3: end: nil}, ${4: speed: nil}, ${5: sustain: nil}, ${6: endSpeed: nil})
endsnippet

snippet DirtEvent.new
DirtEvent.new(${1:orbit: nil}, ${2: modules: nil}, ${3: event: nil})
endsnippet

snippet DirtEventTypes.initClass
DirtEventTypes.initClass(${1:})
endsnippet

snippet DirtFreqScale.kr
DirtFreqScale.kr(${1:speed: 1}, ${2: accelerate: 0}, ${3: sustain: 1}, ${4: speedFreq: nil})
endsnippet

snippet DirtGateCutGroup.ar
DirtGateCutGroup.ar(${1:releaseTime: 0.02}, ${2: doneAction: 2})
endsnippet

snippet DirtModule.new
DirtModule.new(${1:name: nil}, ${2: func: nil}, ${3: test: nil})
endsnippet

snippet DirtOrbit.new
DirtOrbit.new(${1:dirt: nil}, ${2: outBus: nil}, ${3: orbitIndex: 0})
endsnippet

snippet DirtPan.initClass
DirtPan.initClass(${1:})
endsnippet

snippet DirtPan.ar
DirtPan.ar(${1:signal: nil}, ${2: numChannels: nil}, ${3: pan: 0.0}, ${4: mul: 1.0}, ${5: panningFunction: nil})
endsnippet

snippet DirtPan.defaultMixingFunction_
DirtPan.defaultMixingFunction_(${1:})
endsnippet

snippet DirtPanBalance2.ar
DirtPanBalance2.ar(${1:signals: nil}, ${2: span: 1}, ${3: pan: 0.0}, ${4: mul: 1})
endsnippet

snippet DirtPartTimeError.new
DirtPartTimeError.new(${1:timeout: 1}, ${2: what: nil})
endsnippet

snippet DirtPause.ar
DirtPause.ar(${1:signal: nil}, ${2: graceTime: 1}, ${3: pauseImmediately: 0})
endsnippet

snippet DirtPhase.ar
DirtPhase.ar(${1:begin: 0}, ${2: end: 1}, ${3: speed: 1}, ${4: sustain: 1}, ${5: endSpeed: nil})
endsnippet

snippet DirtRateScale.ar
DirtRateScale.ar(${1:speed: 1}, ${2: sustain: 1}, ${3: endSpeed: nil})
endsnippet

snippet DirtRemoteSoundfileInfo.new
DirtRemoteSoundfileInfo.new(${1:library: nil}, ${2: port: nil})
endsnippet

snippet DirtSoundLibrary.new
DirtSoundLibrary.new(${1:server: nil}, ${2: numChannels: nil})
endsnippet

snippet DirtSplay2.ar
DirtSplay2.ar(${1:signals: nil}, ${2: span: 1}, ${3: pan: 0.0}, ${4: mul: 1})
endsnippet

snippet DirtSplayAz.ar
DirtSplayAz.ar(${1:numChannels: nil}, ${2: signals: nil}, ${3: span: 1}, ${4: pan: 0.0}, ${5: mul: 1}, ${6: splay: 1}, ${7: width: 2}, ${8: orientation: 0})
endsnippet

snippet Disintegrator.ar
Disintegrator.ar(${1:in: nil}, ${2: probability: 0.5}, ${3: multiplier: 0.0}, ${4: mul: 1.0}, ${5: add: 0})
endsnippet

snippet DiskIn.ar
DiskIn.ar(${1:numChannels: nil}, ${2: bufnum: nil}, ${3: loop: 0})
endsnippet

snippet DiskOut.ar
DiskOut.ar(${1:bufnum: nil}, ${2: channelsArray: nil})
endsnippet

snippet DistToSource2D.new
DistToSource2D.new(${1:sourceX: 0}, ${2: sourceY: 0}, ${3: micX: 0}, ${4: micY: 0})
endsnippet

snippet DistToSource2D.stereo
DistToSource2D.stereo(${1:sourceX: 0}, ${2: sourceY: 0}, ${3: width: 0.3})
endsnippet

snippet DistToSource2D.quad
DistToSource2D.quad(${1:sourceX: 0}, ${2: sourceY: 0}, ${3: width: 0.3})
endsnippet

snippet Dneuromodule.new
Dneuromodule.new(${1:numChannels: nil}, ${2: theta: nil}, ${3: x: nil}, ${4: weights: nil})
endsnippet

snippet Dneuromodule.ar
Dneuromodule.ar(${1:dt: nil}, ${2: numChannels: nil}, ${3: theta: nil}, ${4: x: nil}, ${5: weights: nil})
endsnippet

snippet Dneuromodule.kr
Dneuromodule.kr(${1:dt: nil}, ${2: numChannels: nil}, ${3: theta: nil}, ${4: x: nil}, ${5: weights: nil})
endsnippet

snippet Document.new
Document.new(${1:path: nil}, ${2: dataptr: nil})
endsnippet

snippet Document.current
Document.current(${1:})
endsnippet

snippet Document.dir_
Document.dir_(${1:path: nil})
endsnippet

snippet DoesNotUnderstandError.new
DoesNotUnderstandError.new(${1:receiver: nil}, ${2: selector: nil}, ${3: args: nil})
endsnippet

snippet Done.kr
Done.kr(${1:src: nil})
endsnippet

snippet DoubleNestedAllpassN.ar
DoubleNestedAllpassN.ar(${1:in: nil}, ${2: maxdelay1: 0.0047}, ${3: delay1: 0.0047}, ${4: gain1: 0.15}, ${5: maxdelay2: 0.022}, ${6: delay2: 0.022}, ${7: gain2: 0.25}, ${8: maxdelay3: 0.0083}, ${9: delay3: 0.0083}, ${10: gain3: 0.3}, ${11: mul: 1.0}, ${12: add: 0.0})
endsnippet

snippet DoubleWell.ar
DoubleWell.ar(${1:reset: 0}, ${2: ratex: 0.01}, ${3: ratey: 0.01}, ${4: f: 1}, ${5: w: 0.001}, ${6: delta: 1}, ${7: initx: 0}, ${8: inity: 0}, ${9: mul: 1.0}, ${10: add: 0.0})
endsnippet

snippet DoubleWell2.ar
DoubleWell2.ar(${1:reset: 0}, ${2: ratex: 0.01}, ${3: ratey: 0.01}, ${4: f: 1}, ${5: w: 0.001}, ${6: delta: 1}, ${7: initx: 0}, ${8: inity: 0}, ${9: mul: 1.0}, ${10: add: 0.0})
endsnippet

snippet DoubleWell3.ar
DoubleWell3.ar(${1:reset: 0}, ${2: rate: 0.01}, ${3: f: 0}, ${4: delta: 0.25}, ${5: initx: 0}, ${6: inity: 0}, ${7: mul: 1.0}, ${8: add: 0.0})
endsnippet

snippet Download.new
Download.new(${1:requestedURL: nil}, ${2: localPath: nil}, ${3: finishedFunc: nil}, ${4: errorFunc: nil}, ${5: progressFunc: nil})
endsnippet

snippet Download.qtClass
Download.qtClass(${1:})
endsnippet

snippet Download.cancelAll
Download.cancelAll(${1:})
endsnippet

snippet Dpoll.new
Dpoll.new(${1:in: nil}, ${2: label: nil}, ${3: run: 1}, ${4: trigid: -1})
endsnippet

snippet Dpoll.new1
Dpoll.new1(${1:rate: nil}, ${2: in: nil}, ${3: label: nil}, ${4: run: nil}, ${5: trigid: nil})
endsnippet

snippet DragView.new
DragView.new(${1:parent: nil}, ${2: bounds: nil})
endsnippet

snippet DrawGrid.new
DrawGrid.new(${1:bounds: nil}, ${2: horzGrid: nil}, ${3: vertGrid: nil})
endsnippet

snippet DrawGrid.test
DrawGrid.test(${1:horzGrid: nil}, ${2: vertGrid: nil}, ${3: bounds: nil})
endsnippet

snippet DrawGridX.new
DrawGridX.new(${1:grid: nil})
endsnippet

snippet DrawIcon.new
DrawIcon.new(${1:name: nil}, ${2: rect: nil}, ${3: more: [  ]})
endsnippet

snippet DrawIcon.symbolArgs
DrawIcon.symbolArgs(${1:name: nil}, ${2: rect: nil})
endsnippet

snippet DrawIcon.names
DrawIcon.names(${1:})
endsnippet

snippet DrawIcon.initClass
DrawIcon.initClass(${1:})
endsnippet

snippet Dreset.new
Dreset.new(${1:in: nil}, ${2: reset: 0.0})
endsnippet

snippet DriveNoise.ar
DriveNoise.ar(${1:in: nil}, ${2: amount: 1}, ${3: multi: 5})
endsnippet

snippet DrumTrack.kr
DrumTrack.kr(${1:in: nil}, ${2: lock: 0}, ${3: dynleak: 0.0}, ${4: tempowt: 0.0}, ${5: phasewt: 0.0}, ${6: basswt: 0.0}, ${7: patternwt: 1.0}, ${8: prior: nil}, ${9: kicksensitivity: 1.0}, ${10: snaresensitivity: 1.0}, ${11: debugmode: 0})
endsnippet

snippet Dseries.new
Dseries.new(${1:start: 1}, ${2: step: 1}, ${3: length: inf})
endsnippet

snippet Dstutter.initClass
Dstutter.initClass(${1:})
endsnippet

snippet Dstutter.new
Dstutter.new(${1:n: nil}, ${2: in: nil})
endsnippet

snippet Dswitch1.new
Dswitch1.new(${1:list: nil}, ${2: index: nil})
endsnippet

snippet Dtag.new
Dtag.new(${1:bufsize: nil}, ${2: v: nil}, ${3: axiom: nil}, ${4: rules: nil}, ${5: recycle: 0}, ${6: mode: 0})
endsnippet

snippet Dunique.new
Dunique.new(${1:source: nil}, ${2: maxBufferSize: 1024}, ${3: protected: true})
endsnippet

snippet Dust.ar
Dust.ar(${1:density: 0.0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet Dust.kr
Dust.kr(${1:density: 0.0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet Dust2.ar
Dust2.ar(${1:density: 0.0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet Dust2.kr
Dust2.kr(${1:density: 0.0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet Duty.ar
Duty.ar(${1:dur: 1.0}, ${2: reset: 0.0}, ${3: level: 1.0}, ${4: doneAction: 0})
endsnippet

snippet Duty.kr
Duty.kr(${1:dur: 1.0}, ${2: reset: 0.0}, ${3: level: 1.0}, ${4: doneAction: 0})
endsnippet

snippet Dwhite.new
Dwhite.new(${1:lo: 0.0}, ${2: hi: 1.0}, ${3: length: inf})
endsnippet

snippet Dwrand.new
Dwrand.new(${1:list: nil}, ${2: weights: nil}, ${3: repeats: 1})
endsnippet

snippet DynKlang.ar
DynKlang.ar(${1:specificationsArrayRef: nil}, ${2: freqscale: 1.0}, ${3: freqoffset: 0.0})
endsnippet

snippet DynKlang.kr
DynKlang.kr(${1:specificationsArrayRef: nil}, ${2: freqscale: 1.0}, ${3: freqoffset: 0.0})
endsnippet

snippet DynKlang.new1
DynKlang.new1(${1:rate: nil}, ${2: specificationsArrayRef: nil}, ${3: freqscale: 1.0}, ${4: freqoffset: 0.0})
endsnippet

snippet DynKlank.ar
DynKlank.ar(${1:specificationsArrayRef: nil}, ${2: input: nil}, ${3: freqscale: 1.0}, ${4: freqoffset: 0.0}, ${5: decayscale: 1.0})
endsnippet

snippet DynKlank.kr
DynKlank.kr(${1:specificationsArrayRef: nil}, ${2: input: nil}, ${3: freqscale: 1.0}, ${4: freqoffset: 0.0}, ${5: decayscale: 1.0})
endsnippet

snippet DynKlank.new1
DynKlank.new1(${1:rate: nil}, ${2: specificationsArrayRef: nil}, ${3: input: nil}, ${4: freqscale: 1.0}, ${5: freqoffset: 0.0}, ${6: decayscale: 1.0})
endsnippet

snippet EM.new
EM.new(${1:pairs: [  ]})
endsnippet

snippet EM.with
EM.with(${1:args: [  ]})
endsnippet

snippet EZControlSpecEditor.new
EZControlSpecEditor.new(${1:parent: nil}, ${2: bounds: nil}, ${3: label: Mn/Mx/Wp/Stp}, ${4: controlSpec: nil}, ${5: labelWidth: 100}, ${6: labelHeight: 20}, ${7: layout: horz}, ${8: gap: nil}, ${9: margin: nil})
endsnippet

snippet EZKnob.new
EZKnob.new(${1:parent: nil}, ${2: bounds: nil}, ${3: label: nil}, ${4: controlSpec: nil}, ${5: action: nil}, ${6: initVal: nil}, ${7: initAction: false}, ${8: labelWidth: 60}, ${9: knobSize: nil}, ${10: unitWidth: 0}, ${11: labelHeight: 20}, ${12: layout: vert}, ${13: gap: nil}, ${14: margin: nil})
endsnippet

snippet EZLists.new
EZLists.new(${1:parentView: nil}, ${2: bounds: nil}, ${3: label: nil}, ${4: items: nil}, ${5: globalAction: nil}, ${6: initVal: 0}, ${7: initAction: false}, ${8: labelWidth: nil}, ${9: labelHeight: 20}, ${10: layout: nil}, ${11: gap: nil}, ${12: margin: nil})
endsnippet

snippet EZNumber.new
EZNumber.new(${1:parent: nil}, ${2: bounds: nil}, ${3: label: nil}, ${4: controlSpec: nil}, ${5: action: nil}, ${6: initVal: nil}, ${7: initAction: false}, ${8: labelWidth: 60}, ${9: numberWidth: nil}, ${10: unitWidth: 0}, ${11: labelHeight: 20}, ${12: layout: horz}, ${13: gap: nil}, ${14: margin: nil})
endsnippet

snippet EZRanger.new
EZRanger.new(${1:parent: nil}, ${2: bounds: nil}, ${3: label: nil}, ${4: controlSpec: nil}, ${5: action: nil}, ${6: initVal: nil}, ${7: initAction: false}, ${8: labelWidth: 60}, ${9: numberWidth: 45}, ${10: unitWidth: 0}, ${11: labelHeight: 20}, ${12: layout: horz}, ${13: gap: nil}, ${14: margin: nil})
endsnippet

snippet EZScroller.new
EZScroller.new(${1:w: nil}, ${2: bounds: nil}, ${3: maxItems: nil}, ${4: numItems: nil}, ${5: action: nil}, ${6: initVal: 0})
endsnippet

snippet EZSlider.new
EZSlider.new(${1:parent: nil}, ${2: bounds: nil}, ${3: label: nil}, ${4: controlSpec: nil}, ${5: action: nil}, ${6: initVal: nil}, ${7: initAction: false}, ${8: labelWidth: 60}, ${9: numberWidth: 45}, ${10: unitWidth: 0}, ${11: labelHeight: 20}, ${12: layout: horz}, ${13: gap: nil}, ${14: margin: nil})
endsnippet

snippet EZText.new
EZText.new(${1:parent: nil}, ${2: bounds: nil}, ${3: label: nil}, ${4: action: nil}, ${5: initVal: nil}, ${6: initAction: false}, ${7: labelWidth: 60}, ${8: textWidth: nil}, ${9: labelHeight: 20}, ${10: layout: horz}, ${11: gap: nil}, ${12: margin: nil})
endsnippet

snippet EmbedOnce.new
EmbedOnce.new(${1:stream: nil}, ${2: cleanup: nil})
endsnippet

snippet EntTecDMXUSBPro.new
EntTecDMXUSBPro.new(${1:port: nil})
endsnippet

snippet Env.new
Env.new(${1:levels: [ 0}, ${2: 1}, ${3: 0 ]}, ${4: times: [ 1}, ${5: 1 ]}, ${6: curve: lin}, ${7: releaseNode: nil}, ${8: loopNode: nil}, ${9: offset: 0})
endsnippet

snippet Env.newClear
Env.newClear(${1:numSegments: 8}, ${2: numChannels: 1})
endsnippet

snippet Env.initClass
Env.initClass(${1:})
endsnippet

snippet Env.triangle
Env.triangle(${1:dur: 1.0}, ${2: level: 1.0})
endsnippet

snippet Env.sine
Env.sine(${1:dur: 1.0}, ${2: level: 1.0})
endsnippet

snippet Env.perc
Env.perc(${1:attackTime: 0.01}, ${2: releaseTime: 1.0}, ${3: level: 1.0}, ${4: curve: -4.0})
endsnippet

snippet Env.linen
Env.linen(${1:attackTime: 0.01}, ${2: sustainTime: 1.0}, ${3: releaseTime: 1.0}, ${4: level: 1.0}, ${5: curve: lin})
endsnippet

snippet Env.xyc
Env.xyc(${1:xyc: nil})
endsnippet

snippet Env.pairs
Env.pairs(${1:pairs: nil}, ${2: curve: nil})
endsnippet

snippet Env.step
Env.step(${1:levels: [ 0}, ${2: 1 ]}, ${3: times: [ 1}, ${4: 1 ]}, ${5: releaseNode: nil}, ${6: loopNode: nil}, ${7: offset: 0})
endsnippet

snippet Env.cutoff
Env.cutoff(${1:releaseTime: 0.1}, ${2: level: 1.0}, ${3: curve: lin})
endsnippet

snippet Env.dadsr
Env.dadsr(${1:delayTime: 0.1}, ${2: attackTime: 0.01}, ${3: decayTime: 0.3}, ${4: sustainLevel: 0.5}, ${5: releaseTime: 1.0}, ${6: peakLevel: 1.0}, ${7: curve: -4.0}, ${8: bias: 0.0})
endsnippet

snippet Env.adsr
Env.adsr(${1:attackTime: 0.01}, ${2: decayTime: 0.3}, ${3: sustainLevel: 0.5}, ${4: releaseTime: 1.0}, ${5: peakLevel: 1.0}, ${6: curve: -4.0}, ${7: bias: 0.0})
endsnippet

snippet Env.asr
Env.asr(${1:attackTime: 0.01}, ${2: sustainLevel: 1.0}, ${3: releaseTime: 1.0}, ${4: curve: -4.0})
endsnippet

snippet Env.circle
Env.circle(${1:levels: nil}, ${2: times: nil}, ${3: curve: lin})
endsnippet

snippet Env.shapeNumber
Env.shapeNumber(${1:shapeName: nil})
endsnippet

snippet Env.fromSVGPolyLine
Env.fromSVGPolyLine(${1:polyline: nil}, ${2: min: -1}, ${3: max: 1}, ${4: duration: 1})
endsnippet

snippet EnvDetect.ar
EnvDetect.ar(${1:in: nil}, ${2: attack: 100}, ${3: release: 0})
endsnippet

snippet EnvFollow.ar
EnvFollow.ar(${1:input: nil}, ${2: decaycoeff: 0.99}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet EnvFollow.kr
EnvFollow.kr(${1:input: nil}, ${2: decaycoeff: 0.99}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet EnvGate.new
EnvGate.new(${1:i_level: 1}, ${2: gate: nil}, ${3: fadeTime: nil}, ${4: doneAction: 2}, ${5: curve: sin})
endsnippet

snippet EnvGen.ar
EnvGen.ar(${1:envelope: nil}, ${2: gate: 1.0}, ${3: levelScale: 1.0}, ${4: levelBias: 0.0}, ${5: timeScale: 1.0}, ${6: doneAction: 0})
endsnippet

snippet EnvGen.kr
EnvGen.kr(${1:envelope: nil}, ${2: gate: 1.0}, ${3: levelScale: 1.0}, ${4: levelBias: 0.0}, ${5: timeScale: 1.0}, ${6: doneAction: 0})
endsnippet

snippet EnvGen.convertEnv
EnvGen.convertEnv(${1:env: nil})
endsnippet

snippet EnvGen.new1
EnvGen.new1(${1:rate: nil}, ${2: gate: nil}, ${3: levelScale: nil}, ${4: levelBias: nil}, ${5: timeScale: nil}, ${6: doneAction: nil}, ${7: envArray: nil})
endsnippet

snippet EnvelopeView.qtClass
EnvelopeView.qtClass(${1:})
endsnippet

snippet EnvirGui.new
EnvirGui.new(${1:object: nil}, ${2: numItems: 8}, ${3: parent: nil}, ${4: bounds: nil}, ${5: makeSkip: true}, ${6: options: [  ]})
endsnippet

snippet Environment.make
Environment.make(${1:function: nil})
endsnippet

snippet Environment.use
Environment.use(${1:function: nil})
endsnippet

snippet Environment.pop
Environment.pop(${1:})
endsnippet

snippet Environment.push
Environment.push(${1:envir: nil})
endsnippet

snippet EnvironmentRedirect.new
EnvironmentRedirect.new(${1:envir: nil})
endsnippet

snippet EnvironmentRedirect.make
EnvironmentRedirect.make(${1:function: nil})
endsnippet

snippet EnvironmentRedirect.use
EnvironmentRedirect.use(${1:function: nil})
endsnippet

snippet EnvironmentRedirect.newFrom
EnvironmentRedirect.newFrom(${1:aCollection: nil})
endsnippet

snippet EnvironmentRedirect.push
EnvironmentRedirect.push(${1:})
endsnippet

snippet EnvironmentRedirect.pop
EnvironmentRedirect.pop(${1:})
endsnippet

snippet Event.new
Event.new(${1:n: 8}, ${2: proto: nil}, ${3: parent: nil}, ${4: know: true})
endsnippet

snippet Event.default
Event.default(${1:})
endsnippet

snippet Event.silent
Event.silent(${1:dur: 1.0}, ${2: inEvent: nil})
endsnippet

snippet Event.addEventType
Event.addEventType(${1:type: nil}, ${2: func: nil}, ${3: parentEvent: nil})
endsnippet

snippet Event.addParentType
Event.addParentType(${1:type: nil}, ${2: parentEvent: nil})
endsnippet

snippet Event.removeEventType
Event.removeEventType(${1:type: nil})
endsnippet

snippet Event.removeParentType
Event.removeParentType(${1:type: nil})
endsnippet

snippet Event.parentTypes
Event.parentTypes(${1:})
endsnippet

snippet Event.eventTypes
Event.eventTypes(${1:})
endsnippet

snippet Event.initClass
Event.initClass(${1:})
endsnippet

snippet Event.makeDefaultSynthDef
Event.makeDefaultSynthDef(${1:})
endsnippet

snippet Event.makeParentEvents
Event.makeParentEvents(${1:})
endsnippet

snippet Event.checkIDs
Event.checkIDs(${1:id: nil}, ${2: server: nil})
endsnippet

snippet EventPatternProxy.defaultValue
EventPatternProxy.defaultValue(${1:})
endsnippet

snippet EventPatternProxy.parallelise
EventPatternProxy.parallelise(${1:list: nil})
endsnippet

snippet EventStreamCleanup.new
EventStreamCleanup.new(${1:})
endsnippet

snippet EventStreamPlayer.new
EventStreamPlayer.new(${1:stream: nil}, ${2: event: nil})
endsnippet

snippet EventTypesWithCleanup.initClass
EventTypesWithCleanup.initClass(${1:})
endsnippet

snippet EventTypesWithCleanup.cleanup
EventTypesWithCleanup.cleanup(${1:ev: nil}, ${2: flag: true})
endsnippet

snippet Exception.new
Exception.new(${1:what: nil})
endsnippet

snippet Executor.new
Executor.new(${1:})
endsnippet

snippet ExpRand.new
ExpRand.new(${1:lo: 0.01}, ${2: hi: 1.0})
endsnippet

snippet ExpandView.new
ExpandView.new(${1:parent: nil}, ${2: bigBounds: nil}, ${3: smallBounds: nil}, ${4: collapsed: true})
endsnippet

snippet FBSineN.ar
FBSineN.ar(${1:freq: 22050}, ${2: im: 1}, ${3: fb: 0.1}, ${4: a: 1.1}, ${5: c: 0.5}, ${6: xi: 0.1}, ${7: yi: 0.1}, ${8: mul: 1}, ${9: add: 0})
endsnippet

snippet FFT.new
FFT.new(${1:buffer: nil}, ${2: in: 0.0}, ${3: hop: 0.5}, ${4: wintype: 0}, ${5: active: 1}, ${6: winsize: 0})
endsnippet

snippet FFTCentroid.kr
FFTCentroid.kr(${1:buffer: nil})
endsnippet

snippet FFTComplexDev.kr
FFTComplexDev.kr(${1:buffer: nil}, ${2: rectify: 0}, ${3: powthresh: 0.1})
endsnippet

snippet FFTComplexDev.categories
FFTComplexDev.categories(${1:})
endsnippet

snippet FFTCrest.kr
FFTCrest.kr(${1:buffer: nil}, ${2: freqlo: 0}, ${3: freqhi: 50000})
endsnippet

snippet FFTCrest.categories
FFTCrest.categories(${1:})
endsnippet

snippet FFTDiffMags.kr
FFTDiffMags.kr(${1:bufferA: nil}, ${2: bufferB: nil})
endsnippet

snippet FFTDiffMags.categories
FFTDiffMags.categories(${1:})
endsnippet

snippet FFTFlux.kr
FFTFlux.kr(${1:buffer: nil}, ${2: normalise: 1})
endsnippet

snippet FFTFlux.categories
FFTFlux.categories(${1:})
endsnippet

snippet FFTFluxPos.kr
FFTFluxPos.kr(${1:buffer: nil}, ${2: normalise: 1})
endsnippet

snippet FFTFluxPos.categories
FFTFluxPos.categories(${1:})
endsnippet

snippet FFTMKL.kr
FFTMKL.kr(${1:buffer: nil}, ${2: epsilon: 1e-06})
endsnippet

snippet FFTMKL.categories
FFTMKL.categories(${1:})
endsnippet

snippet FFTPeak.kr
FFTPeak.kr(${1:buffer: nil}, ${2: freqlo: 0}, ${3: freqhi: 50000})
endsnippet

snippet FFTPeak.categories
FFTPeak.categories(${1:})
endsnippet

snippet FFTPhaseDev.kr
FFTPhaseDev.kr(${1:buffer: nil}, ${2: weight: 0}, ${3: powthresh: 0.1})
endsnippet

snippet FFTPhaseDev.categories
FFTPhaseDev.categories(${1:})
endsnippet

snippet FFTPower.kr
FFTPower.kr(${1:buffer: nil}, ${2: square: true})
endsnippet

snippet FFTPower.categories
FFTPower.categories(${1:})
endsnippet

snippet FFTSlope.kr
FFTSlope.kr(${1:buffer: nil})
endsnippet

snippet FFTSlope.categories
FFTSlope.categories(${1:})
endsnippet

snippet FFTSpread.kr
FFTSpread.kr(${1:buffer: nil}, ${2: centroid: nil})
endsnippet

snippet FFTSpread.categories
FFTSpread.categories(${1:})
endsnippet

snippet FFTSubbandFlatness.kr
FFTSubbandFlatness.kr(${1:chain: nil}, ${2: cutfreqs: nil})
endsnippet

snippet FFTSubbandFlatness.categories
FFTSubbandFlatness.categories(${1:})
endsnippet

snippet FFTSubbandFlux.kr
FFTSubbandFlux.kr(${1:chain: nil}, ${2: cutfreqs: nil}, ${3: posonly: 0})
endsnippet

snippet FFTSubbandFlux.categories
FFTSubbandFlux.categories(${1:})
endsnippet

snippet FFTSubbandPower.kr
FFTSubbandPower.kr(${1:chain: nil}, ${2: cutfreqs: nil}, ${3: square: 1}, ${4: scalemode: 1})
endsnippet

snippet FFTSubbandPower.categories
FFTSubbandPower.categories(${1:})
endsnippet

snippet FFTTrigger.new
FFTTrigger.new(${1:buffer: nil}, ${2: hop: 0.5}, ${3: polar: 0.0})
endsnippet

snippet FM7.numOperators
FM7.numOperators(${1:})
endsnippet

snippet FM7.numControls
FM7.numControls(${1:})
endsnippet

snippet FM7.controlArraySize
FM7.controlArraySize(${1:})
endsnippet

snippet FM7.modArraySize
FM7.modArraySize(${1:})
endsnippet

snippet FM7.numRequiredInputs
FM7.numRequiredInputs(${1:})
endsnippet

snippet FM7.controlMatrix
FM7.controlMatrix(${1:args: [  ]})
endsnippet

snippet FM7.modMatrix
FM7.modMatrix(${1:args: [  ]})
endsnippet

snippet FM7.algoSpec
FM7.algoSpec(${1:algo: nil}, ${2: feedback: 0.0})
endsnippet

snippet FM7.ar
FM7.ar(${1:ctlMatrix: nil}, ${2: modMatrix: nil})
endsnippet

snippet FM7.arAlgo
FM7.arAlgo(${1:algo: 0}, ${2: ctlMatrix: nil}, ${3: feedback: 0.0})
endsnippet

snippet FMGrain.ar
FMGrain.ar(${1:trigger: 0}, ${2: dur: 1}, ${3: carfreq: 440}, ${4: modfreq: 200}, ${5: index: 1}, ${6: mul: 1}, ${7: add: 0})
endsnippet

snippet FMGrainB.ar
FMGrainB.ar(${1:trigger: 0}, ${2: dur: 1}, ${3: carfreq: 440}, ${4: modfreq: 200}, ${5: index: 1}, ${6: envbuf: nil}, ${7: mul: 1}, ${8: add: 0})
endsnippet

snippet FMGrainBBF.ar
FMGrainBBF.ar(${1:trigger: 0}, ${2: dur: 1}, ${3: carfreq: 440}, ${4: modfreq: 200}, ${5: index: 1}, ${6: envbuf: nil}, ${7: azimuth: 0}, ${8: elevation: 0}, ${9: rho: 1}, ${10: wComp: 0}, ${11: mul: 1}, ${12: add: 0})
endsnippet

snippet FMGrainBF.ar
FMGrainBF.ar(${1:trigger: 0}, ${2: dur: 1}, ${3: carfreq: 440}, ${4: modfreq: 200}, ${5: index: 1}, ${6: azimuth: 0}, ${7: elevation: 0}, ${8: rho: 1}, ${9: wComp: 0}, ${10: mul: 1}, ${11: add: 0})
endsnippet

snippet FMGrainI.ar
FMGrainI.ar(${1:trigger: 0}, ${2: dur: 1}, ${3: carfreq: 440}, ${4: modfreq: 200}, ${5: index: 1}, ${6: envbuf1: nil}, ${7: envbuf2: nil}, ${8: ifac: 0.5}, ${9: mul: 1}, ${10: add: 0})
endsnippet

snippet FMGrainIBF.ar
FMGrainIBF.ar(${1:trigger: 0}, ${2: dur: 1}, ${3: carfreq: 440}, ${4: modfreq: 200}, ${5: index: 1}, ${6: envbuf1: nil}, ${7: envbuf2: nil}, ${8: ifac: 0.5}, ${9: azimuth: 0}, ${10: elevation: 0}, ${11: rho: 1}, ${12: wComp: 0}, ${13: mul: 1}, ${14: add: 0})
endsnippet

snippet FMHDecode1.ar
FMHDecode1.ar(${1:w: nil}, ${2: x: nil}, ${3: y: nil}, ${4: z: nil}, ${5: r: nil}, ${6: s: nil}, ${7: t: nil}, ${8: u: nil}, ${9: v: nil}, ${10: azimuth: 0}, ${11: elevation: 0}, ${12: mul: 1}, ${13: add: 0})
endsnippet

snippet FMHDecode1.ar1
FMHDecode1.ar1(${1:w: nil}, ${2: x: nil}, ${3: y: nil}, ${4: z: nil}, ${5: r: nil}, ${6: s: nil}, ${7: t: nil}, ${8: u: nil}, ${9: v: nil}, ${10: azimuth: 0}, ${11: elevation: 0}, ${12: maxDist: 10}, ${13: distance: 10}, ${14: mul: 1}, ${15: add: 0}, ${16: scaleflag: 1})
endsnippet

snippet FMHDecode1.stereo
FMHDecode1.stereo(${1:w: nil}, ${2: y: nil}, ${3: mul: 1}, ${4: add: 0})
endsnippet

snippet FMHDecode1.square
FMHDecode1.square(${1:w: nil}, ${2: x: nil}, ${3: y: nil}, ${4: v: nil}, ${5: mul: 1}, ${6: add: 0})
endsnippet

snippet FMHDecode1.quad
FMHDecode1.quad(${1:w: nil}, ${2: x: nil}, ${3: y: nil}, ${4: v: nil}, ${5: mul: 1}, ${6: add: 0})
endsnippet

snippet FMHDecode1.pentagon
FMHDecode1.pentagon(${1:w: nil}, ${2: x: nil}, ${3: y: nil}, ${4: u: nil}, ${5: v: nil}, ${6: mul: 1}, ${7: add: 0})
endsnippet

snippet FMHDecode1.hexagon
FMHDecode1.hexagon(${1:w: nil}, ${2: x: nil}, ${3: y: nil}, ${4: u: nil}, ${5: v: nil}, ${6: mul: 1}, ${7: add: 0})
endsnippet

snippet FMHDecode1.octagon1
FMHDecode1.octagon1(${1:w: nil}, ${2: x: nil}, ${3: y: nil}, ${4: u: nil}, ${5: v: nil}, ${6: mul: 1}, ${7: add: 0})
endsnippet

snippet FMHDecode1.octagon2
FMHDecode1.octagon2(${1:w: nil}, ${2: x: nil}, ${3: y: nil}, ${4: u: nil}, ${5: v: nil}, ${6: mul: 1}, ${7: add: 0})
endsnippet

snippet FMHDecode1.cube
FMHDecode1.cube(${1:w: nil}, ${2: x: nil}, ${3: y: nil}, ${4: z: nil}, ${5: s: nil}, ${6: t: nil}, ${7: v: nil}, ${8: mul: 1}, ${9: add: 0})
endsnippet

snippet FMHDecode1.doubleHex
FMHDecode1.doubleHex(${1:w: nil}, ${2: x: nil}, ${3: y: nil}, ${4: z: nil}, ${5: s: nil}, ${6: t: nil}, ${7: u: nil}, ${8: v: nil}, ${9: mul: 1}, ${10: add: 0})
endsnippet

snippet FMHDecode1.dodecahedron
FMHDecode1.dodecahedron(${1:w: nil}, ${2: x: nil}, ${3: y: nil}, ${4: z: nil}, ${5: r: nil}, ${6: s: nil}, ${7: t: nil}, ${8: u: nil}, ${9: v: nil}, ${10: mul: 1}, ${11: add: 0})
endsnippet

snippet FMHEncode0.ar
FMHEncode0.ar(${1:in: nil}, ${2: azimuth: 0}, ${3: elevation: 0}, ${4: gain: 1})
endsnippet

snippet FMHEncode1.ar
FMHEncode1.ar(${1:in: nil}, ${2: azimuth: 0}, ${3: elevation: 0}, ${4: rho: 1}, ${5: gain: 1}, ${6: wComp: 0})
endsnippet

snippet FMHEncode2.ar
FMHEncode2.ar(${1:in: nil}, ${2: point_x: 0}, ${3: point_y: 0}, ${4: elevation: 0}, ${5: gain: 1}, ${6: wComp: 0})
endsnippet

snippet FOS.ar
FOS.ar(${1:in: 0.0}, ${2: a0: 0.0}, ${3: a1: 0.0}, ${4: b1: 0.0}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet FOS.kr
FOS.kr(${1:in: 0.0}, ${2: a0: 0.0}, ${3: a1: 0.0}, ${4: b1: 0.0}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet FOS.coeffs
FOS.coeffs(${1:sr: 44100}, ${2: a0: 0.0}, ${3: a1: 0.0}, ${4: b1: 0.0})
endsnippet

snippet FSinOsc.ar
FSinOsc.ar(${1:freq: 440.0}, ${2: iphase: 0.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet FSinOsc.kr
FSinOsc.kr(${1:freq: 440.0}, ${2: iphase: 0.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet Fdef.initClass
Fdef.initClass(${1:})
endsnippet

snippet Fdef.new
Fdef.new(${1:key: nil}, ${2: val: nil})
endsnippet

snippet FeatureSave.kr
FeatureSave.kr(${1:features: nil}, ${2: trig: nil})
endsnippet

snippet Feedback.ar
Feedback.ar(${1:in: nil}, ${2: feedbackpct: 1}, ${3: delayTime: 0.1}, ${4: bufnum: -1}, ${5: mul: 1})
endsnippet

snippet Fhn2DN.ar
Fhn2DN.ar(${1:minfreq: 11025}, ${2: maxfreq: 22050}, ${3: urate: 0.1}, ${4: wrate: 0.1}, ${5: b0: 0.6}, ${6: b1: 0.8}, ${7: i: 0.0}, ${8: u0: 0.0}, ${9: w0: 0.0}, ${10: mul: 1.0}, ${11: add: 0.0})
endsnippet

snippet Fhn2DN.kr
Fhn2DN.kr(${1:minfreq: 40}, ${2: maxfreq: 100}, ${3: urate: 0.1}, ${4: wrate: 0.1}, ${5: b0: 0.6}, ${6: b1: 0.8}, ${7: i: 0.0}, ${8: u0: 0.0}, ${9: w0: 0.0}, ${10: mul: 1.0}, ${11: add: 0.0})
endsnippet

snippet FhnTrig.ar
FhnTrig.ar(${1:minfreq: 4}, ${2: maxfreq: 10}, ${3: urate: 0.1}, ${4: wrate: 0.1}, ${5: b0: 0.6}, ${6: b1: 0.8}, ${7: i: 0.0}, ${8: u0: 0.0}, ${9: w0: 0.0}, ${10: mul: 1.0}, ${11: add: 0.0})
endsnippet

snippet FhnTrig.kr
FhnTrig.kr(${1:minfreq: 4}, ${2: maxfreq: 10}, ${3: urate: 0.1}, ${4: wrate: 0.1}, ${5: b0: 0.6}, ${6: b1: 0.8}, ${7: i: 0.0}, ${8: u0: 0.0}, ${9: w0: 0.0}, ${10: mul: 1.0}, ${11: add: 0.0})
endsnippet

snippet File.initClass
File.initClass(${1:})
endsnippet

snippet File.new
File.new(${1:pathName: nil}, ${2: mode: nil})
endsnippet

snippet File.open
File.open(${1:pathName: nil}, ${2: mode: nil})
endsnippet

snippet File.use
File.use(${1:pathName: nil}, ${2: mode: nil}, ${3: function: nil})
endsnippet

snippet File.readAllString
File.readAllString(${1:pathName: nil})
endsnippet

snippet File.readAllSignal
File.readAllSignal(${1:pathName: nil})
endsnippet

snippet File.readAllStringHTML
File.readAllStringHTML(${1:pathName: nil})
endsnippet

snippet File.readAllStringRTF
File.readAllStringRTF(${1:pathName: nil})
endsnippet

snippet File.delete
File.delete(${1:pathName: nil})
endsnippet

snippet File.deleteAll
File.deleteAll(${1:pathName: nil})
endsnippet

snippet File.mtime
File.mtime(${1:pathName: nil})
endsnippet

snippet File.exists
File.exists(${1:pathName: nil})
endsnippet

snippet File.existsCaseSensitive
File.existsCaseSensitive(${1:pathName: nil})
endsnippet

snippet File.realpath
File.realpath(${1:pathName: nil})
endsnippet

snippet File.mkdir
File.mkdir(${1:pathName: nil})
endsnippet

snippet File.copy
File.copy(${1:pathNameFrom: nil}, ${2: pathNameTo: nil})
endsnippet

snippet File.type
File.type(${1:pathName: nil})
endsnippet

snippet File.prType
File.prType(${1:pathName: nil})
endsnippet

snippet File.fileSize
File.fileSize(${1:pathName: nil})
endsnippet

snippet File.getcwd
File.getcwd(${1:})
endsnippet

snippet File.prGetcwd
File.prGetcwd(${1:string: nil})
endsnippet

snippet File.openDialogs
File.openDialogs(${1:})
endsnippet

snippet File.openDialog
File.openDialog(${1:prompt: nil}, ${2: successFunc: nil}, ${3: cancelFunc: nil})
endsnippet

snippet File.saveDialog
File.saveDialog(${1:prompt: nil}, ${2: defaultName: nil}, ${3: successFunc: nil}, ${4: cancelFunc: nil})
endsnippet

snippet File.tgzSC
File.tgzSC(${1:})
endsnippet

snippet File.makeDir
File.makeDir(${1:dir: })
endsnippet

snippet File.checkDo
File.checkDo(${1:pathName: nil}, ${2: function: nil}, ${3: overwrite: false}, ${4: ask: true}, ${5: mode: w}, ${6: doneAction: nil})
endsnippet

snippet File.isWesleyanBuild
File.isWesleyanBuild(${1:})
endsnippet

snippet File.getBuildDate
File.getBuildDate(${1:})
endsnippet

snippet FileDialog.qtClass
FileDialog.qtClass(${1:})
endsnippet

snippet FileDialog.new
FileDialog.new(${1:okFunc: nil}, ${2: cancelFunc: nil}, ${3: fileMode: 1}, ${4: acceptMode: 0}, ${5: stripResult: false}, ${6: path: nil})
endsnippet

snippet FileReader.new
FileReader.new(${1:pathOrFile: nil}, ${2: skipEmptyLines: false}, ${3: skipBlanks: false}, ${4: delimiter: nil})
endsnippet

snippet FileReader.read
FileReader.read(${1:path: nil}, ${2: skipEmptyLines: false}, ${3: skipBlanks: false}, ${4: func: nil}, ${5: delimiter: nil}, ${6: startRow: 0}, ${7: skipSize: 0})
endsnippet

snippet FileReader.readInterpret
FileReader.readInterpret(${1:path: nil}, ${2: skipEmptyLines: false}, ${3: skipBlanks: false}, ${4: delimiter: nil}, ${5: startRow: 0}, ${6: skipSize: 0})
endsnippet

snippet FileSystem.new
FileSystem.new(${1:location: nil}, ${2: projectName: nil}, ${3: fileSystemType: nil}, ${4: check: true})
endsnippet

snippet FileSystemType.new
FileSystemType.new(${1:subFolders: nil})
endsnippet

snippet FileSystemType.fromPath
FileSystemType.fromPath(${1:path: nil})
endsnippet

snippet FileSystemType.initClass
FileSystemType.initClass(${1:})
endsnippet

snippet Filter.scopeResponse
Filter.scopeResponse(${1:server: nil}, ${2: freqMode: 1}, ${3: label: nil}, ${4: args: nil})
endsnippet

snippet Filter.coeffs
Filter.coeffs(${1:})
endsnippet

snippet Filter.magResponse
Filter.magResponse(${1:freqs: 1000}, ${2: sr: 44100}, ${3: rest: [  ]})
endsnippet

snippet Filter.magResponse2
Filter.magResponse2(${1:freqs: nil}, ${2: sr: nil}, ${3: ma: nil}, ${4: ar: nil})
endsnippet

snippet Filter.magResponse5
Filter.magResponse5(${1:freqs: nil}, ${2: sr: nil}, ${3: ma: nil}, ${4: ar: nil})
endsnippet

snippet Filter.magResponseN
Filter.magResponseN(${1:freqs: nil}, ${2: sr: nil}, ${3: ma: nil}, ${4: ar: nil}, ${5: size: nil})
endsnippet

snippet FilterPattern.new
FilterPattern.new(${1:pattern: nil})
endsnippet

snippet FincoSprottL.ar
FincoSprottL.ar(${1:freq: 22050}, ${2: a: 2.45}, ${3: h: 0.05}, ${4: xi: 0}, ${5: yi: 0}, ${6: zi: 0}, ${7: mul: 1.0}, ${8: add: 0.0})
endsnippet

snippet FincoSprottL.categories
FincoSprottL.categories(${1:})
endsnippet

snippet FincoSprottM.ar
FincoSprottM.ar(${1:freq: 22050}, ${2: a: -7}, ${3: b: 4}, ${4: h: 0.05}, ${5: xi: 0}, ${6: yi: 0}, ${7: zi: 0}, ${8: mul: 1.0}, ${9: add: 0.0})
endsnippet

snippet FincoSprottM.categories
FincoSprottM.categories(${1:})
endsnippet

snippet FincoSprottS.ar
FincoSprottS.ar(${1:freq: 22050}, ${2: a: 8}, ${3: b: 2}, ${4: h: 0.05}, ${5: xi: 0}, ${6: yi: 0}, ${7: zi: 0}, ${8: mul: 1.0}, ${9: add: 0.0})
endsnippet

snippet FincoSprottS.categories
FincoSprottS.categories(${1:})
endsnippet

snippet FirstPrivateBus.ir
FirstPrivateBus.ir(${1:})
endsnippet

snippet FitzHughNagumo.ar
FitzHughNagumo.ar(${1:reset: 0}, ${2: rateu: 0.01}, ${3: ratew: 0.01}, ${4: b0: 1}, ${5: b1: 1}, ${6: initu: 0}, ${7: initw: 0}, ${8: mul: 1.0}, ${9: add: 0.0})
endsnippet

snippet Float.from32Bits
Float.from32Bits(${1:word: nil})
endsnippet

snippet Float.from64Bits
Float.from64Bits(${1:hiWord: nil}, ${2: loWord: nil})
endsnippet

snippet FlowLayout.new
FlowLayout.new(${1:bounds: nil}, ${2: margin: nil}, ${3: gap: nil})
endsnippet

snippet FlowVar.new
FlowVar.new(${1:inVal: unbound})
endsnippet

snippet FlowView.layout
FlowView.layout(${1:f: nil}, ${2: bounds: nil})
endsnippet

snippet FlowView.viewClass
FlowView.viewClass(${1:})
endsnippet

snippet FlowView.new
FlowView.new(${1:parent: nil}, ${2: bounds: nil}, ${3: margin: nil}, ${4: gap: nil}, ${5: windowTitle: })
endsnippet

snippet FlowViewLayout.new
FlowViewLayout.new(${1:bounds: nil}, ${2: margin: nil}, ${3: gap: nil})
endsnippet

snippet FolderLibrary.new
FolderLibrary.new(${1:baseName: ~/scwork}, ${2: contents: nil})
endsnippet

snippet FolderLibraryElement.new
FolderLibraryElement.new(${1:name: New}, ${2: contents: nil}, ${3: type: folder})
endsnippet

snippet FolderLibraryElement.newFromPath
FolderLibraryElement.newFromPath(${1:path: New/New})
endsnippet

snippet Font.initClass
Font.initClass(${1:})
endsnippet

snippet Font.new
Font.new(${1:name: nil}, ${2: size: nil}, ${3: bold: false}, ${4: italic: false}, ${5: usePointSize: false})
endsnippet

snippet Font.availableFonts
Font.availableFonts(${1:})
endsnippet

snippet Font.antiAliasing_
Font.antiAliasing_(${1:flag: nil})
endsnippet

snippet Font.smoothing_
Font.smoothing_(${1:flag: nil})
endsnippet

snippet Font.default
Font.default(${1:})
endsnippet

snippet Font.default_
Font.default_(${1:font: nil})
endsnippet

snippet Font.setDefault
Font.setDefault(${1:font: nil}, ${2: class: nil})
endsnippet

snippet Font.monospace
Font.monospace(${1:size: nil}, ${2: bold: false}, ${3: italic: false}, ${4: usePointSize: false})
endsnippet

snippet Font.serif
Font.serif(${1:size: nil}, ${2: bold: false}, ${3: italic: false}, ${4: usePointSize: false})
endsnippet

snippet Font.sansSerif
Font.sansSerif(${1:size: nil}, ${2: bold: false}, ${3: italic: false}, ${4: usePointSize: false})
endsnippet

snippet Font.prSetDefault
Font.prSetDefault(${1:font: nil}, ${2: className: nil})
endsnippet

snippet Font.prDefaultFamilyForStyle
Font.prDefaultFamilyForStyle(${1:style: -1})
endsnippet

snippet Formant.ar
Formant.ar(${1:fundfreq: 440.0}, ${2: formfreq: 1760.0}, ${3: bwfreq: 880.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet FormantTable.initClass
FormantTable.initClass(${1:})
endsnippet

snippet FormantTable.keys
FormantTable.keys(${1:})
endsnippet

snippet FormantTable.get
FormantTable.get(${1:preset: nil})
endsnippet

snippet FormantTable.at
FormantTable.at(${1:preset: nil})
endsnippet

snippet FormantTable.rand
FormantTable.rand(${1:})
endsnippet

snippet Formants.ar1
Formants.ar1(${1:baseFreq: 100}, ${2: vowel: nil}, ${3: freqMods: 1}, ${4: ampMods: 1}, ${5: widthMods: 1}, ${6: unfold: false})
endsnippet

snippet Formants.ar
Formants.ar(${1:baseFreq: 100}, ${2: vowel: nil}, ${3: freqMods: 1}, ${4: ampMods: 1}, ${5: widthMods: 1}, ${6: unfold: false})
endsnippet

snippet Formatter.initClass
Formatter.initClass(${1:})
endsnippet

snippet Formatter.new
Formatter.new(${1:dict: nil})
endsnippet

snippet Formlet.ar
Formlet.ar(${1:in: 0.0}, ${2: freq: 440.0}, ${3: attacktime: 1.0}, ${4: decaytime: 1.0}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet Formlet.kr
Formlet.kr(${1:in: 0.0}, ${2: freq: 440.0}, ${3: attacktime: 1.0}, ${4: decaytime: 1.0}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet FrameCompare.kr
FrameCompare.kr(${1:buffer1: nil}, ${2: buffer2: nil}, ${3: wAmount: 0.5})
endsnippet

snippet Free.kr
Free.kr(${1:trig: nil}, ${2: id: nil})
endsnippet

snippet FreeSelf.kr
FreeSelf.kr(${1:in: nil})
endsnippet

snippet FreeSelfWhenDone.kr
FreeSelfWhenDone.kr(${1:src: nil})
endsnippet

snippet FreeVerb.ar
FreeVerb.ar(${1:in: nil}, ${2: mix: 0.33}, ${3: room: 0.5}, ${4: damp: 0.5}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet FreeVerb1.ar
FreeVerb1.ar(${1:in: nil}, ${2: revTime: 3}, ${3: hfDamping: 0.995}, ${4: numTaps: 10}, ${5: numCombs: 8}, ${6: numAllpasses: 4}, ${7: tapScale: 1}, ${8: combScale: 1}, ${9: allpassScale: 1})
endsnippet

snippet FreeVerb2.ar
FreeVerb2.ar(${1:in: nil}, ${2: in2: nil}, ${3: mix: 0.33}, ${4: room: 0.5}, ${5: damp: 0.5}, ${6: mul: 1.0}, ${7: add: 0.0})
endsnippet

snippet FreqScope.new
FreqScope.new(${1:width: 522}, ${2: height: 300}, ${3: busNum: 0}, ${4: scopeColor: nil}, ${5: bgColor: nil}, ${6: server: nil})
endsnippet

snippet FreqScopeView.initClass
FreqScopeView.initClass(${1:})
endsnippet

snippet FreqScopeView.new
FreqScopeView.new(${1:parent: nil}, ${2: bounds: nil}, ${3: server: nil})
endsnippet

snippet FreqScopeView.initSynthDefs
FreqScopeView.initSynthDefs(${1:})
endsnippet

snippet FreqScopeView.response
FreqScopeView.response(${1:parent: nil}, ${2: bounds: nil}, ${3: bus1: nil}, ${4: bus2: nil}, ${5: freqMode: 1})
endsnippet

snippet FreqShift.ar
FreqShift.ar(${1:in: nil}, ${2: freq: 0.0}, ${3: phase: 0.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet Friction.ar
Friction.ar(${1:in: nil}, ${2: friction: 0.5}, ${3: spring: 0.414}, ${4: damp: 0.313}, ${5: mass: 0.1}, ${6: beltmass: 1}, ${7: mul: 1}, ${8: add: 0})
endsnippet

snippet Friction.kr
Friction.kr(${1:in: nil}, ${2: friction: 0.5}, ${3: spring: 0.414}, ${4: damp: 0.313}, ${5: mass: 0.1}, ${6: beltmass: 1}, ${7: mul: 1}, ${8: add: 0})
endsnippet

snippet Friction.categories
Friction.categories(${1:})
endsnippet

snippet FuncFilterPattern.new
FuncFilterPattern.new(${1:func: nil}, ${2: pattern: nil})
endsnippet

snippet FuncStream.new
FuncStream.new(${1:nextFunc: nil}, ${2: resetFunc: nil})
endsnippet

snippet FuncStreamAsRoutine.new
FuncStreamAsRoutine.new(${1:nextFunc: nil}, ${2: resetFunc: nil})
endsnippet

snippet Function.new
Function.new(${1:})
endsnippet

snippet FunctionList.new
FunctionList.new(${1:functions: nil})
endsnippet

snippet GUI.new
GUI.new(${1:key: nil})
endsnippet

snippet GUI.makeGUI
GUI.makeGUI(${1:key: nil}, ${2: args: nil}, ${3: properties: nil})
endsnippet

snippet GUI.initClass
GUI.initClass(${1:})
endsnippet

snippet GUI.swing
GUI.swing(${1:})
endsnippet

snippet GUI.qt
GUI.qt(${1:})
endsnippet

snippet GUI.fromID
GUI.fromID(${1:id: nil})
endsnippet

snippet GUI.current
GUI.current(${1:})
endsnippet

snippet GUI.get
GUI.get(${1:id: nil})
endsnippet

snippet GUI.set
GUI.set(${1:aScheme: nil})
endsnippet

snippet GUI.use
GUI.use(${1:aScheme: nil}, ${2: func: nil})
endsnippet

snippet GUI.useID
GUI.useID(${1:id: nil}, ${2: func: nil})
endsnippet

snippet GUI.add
GUI.add(${1:aScheme: nil})
endsnippet

snippet GUI.doesNotUnderstand
GUI.doesNotUnderstand(${1:selector: nil}, ${2: args: [  ]})
endsnippet

snippet GUI.setSkin
GUI.setSkin(${1:skinName: nil})
endsnippet

snippet GVerb.ar
GVerb.ar(${1:in: nil}, ${2: roomsize: 10}, ${3: revtime: 3}, ${4: damping: 0.5}, ${5: inputbw: 0.5}, ${6: spread: 15}, ${7: drylevel: 1}, ${8: earlyreflevel: 0.7}, ${9: taillevel: 0.5}, ${10: maxroomsize: 300}, ${11: mul: 1}, ${12: add: 0})
endsnippet

snippet Gammatone.ar
Gammatone.ar(${1:input: nil}, ${2: centrefrequency: 440.0}, ${3: bandwidth: 200.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet GaussClass.kr
GaussClass.kr(${1:in: nil}, ${2: bufnum: 0}, ${3: gate: 0})
endsnippet

snippet GaussClass.categories
GaussClass.categories(${1:})
endsnippet

snippet GaussClass.classesToFloatArray
GaussClass.classesToFloatArray(${1:arr: nil})
endsnippet

snippet GaussTrig.ar
GaussTrig.ar(${1:freq: 440.0}, ${2: dev: 0.3}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet GaussTrig.kr
GaussTrig.kr(${1:freq: 440.0}, ${2: dev: 0.3}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet Gbman2DN.ar
Gbman2DN.ar(${1:minfreq: 11025}, ${2: maxfreq: 22050}, ${3: x0: 1.2}, ${4: y0: 2.1}, ${5: mul: 1}, ${6: add: 0.0})
endsnippet

snippet Gbman2DN.kr
Gbman2DN.kr(${1:minfreq: 40}, ${2: maxfreq: 100}, ${3: x0: 1.2}, ${4: y0: 2.1}, ${5: mul: 1}, ${6: add: 0.0})
endsnippet

snippet GbmanN.ar
GbmanN.ar(${1:freq: 22050}, ${2: xi: 1.2}, ${3: yi: 2.1}, ${4: mul: 1}, ${5: add: 0})
endsnippet

snippet GbmanTrig.ar
GbmanTrig.ar(${1:minfreq: 5}, ${2: maxfreq: 10}, ${3: x0: 1.2}, ${4: y0: 2.1}, ${5: mul: 1}, ${6: add: 0.0})
endsnippet

snippet GbmanTrig.kr
GbmanTrig.kr(${1:minfreq: 5}, ${2: maxfreq: 10}, ${3: x0: 1.2}, ${4: y0: 2.1}, ${5: mul: 1}, ${6: add: 0.0})
endsnippet

snippet Gendy1.ar
Gendy1.ar(${1:ampdist: 1}, ${2: durdist: 1}, ${3: adparam: 1.0}, ${4: ddparam: 1.0}, ${5: minfreq: 440}, ${6: maxfreq: 660}, ${7: ampscale: 0.5}, ${8: durscale: 0.5}, ${9: initCPs: 12}, ${10: knum: nil}, ${11: mul: 1.0}, ${12: add: 0.0})
endsnippet

snippet Gendy1.kr
Gendy1.kr(${1:ampdist: 1}, ${2: durdist: 1}, ${3: adparam: 1.0}, ${4: ddparam: 1.0}, ${5: minfreq: 20}, ${6: maxfreq: 1000}, ${7: ampscale: 0.5}, ${8: durscale: 0.5}, ${9: initCPs: 12}, ${10: knum: nil}, ${11: mul: 1.0}, ${12: add: 0.0})
endsnippet

snippet Gendy2.ar
Gendy2.ar(${1:ampdist: 1}, ${2: durdist: 1}, ${3: adparam: 1.0}, ${4: ddparam: 1.0}, ${5: minfreq: 440}, ${6: maxfreq: 660}, ${7: ampscale: 0.5}, ${8: durscale: 0.5}, ${9: initCPs: 12}, ${10: knum: nil}, ${11: a: 1.17}, ${12: c: 0.31}, ${13: mul: 1.0}, ${14: add: 0.0})
endsnippet

snippet Gendy2.kr
Gendy2.kr(${1:ampdist: 1}, ${2: durdist: 1}, ${3: adparam: 1.0}, ${4: ddparam: 1.0}, ${5: minfreq: 20}, ${6: maxfreq: 1000}, ${7: ampscale: 0.5}, ${8: durscale: 0.5}, ${9: initCPs: 12}, ${10: knum: nil}, ${11: a: 1.17}, ${12: c: 0.31}, ${13: mul: 1.0}, ${14: add: 0.0})
endsnippet

snippet Gendy3.ar
Gendy3.ar(${1:ampdist: 1}, ${2: durdist: 1}, ${3: adparam: 1.0}, ${4: ddparam: 1.0}, ${5: freq: 440}, ${6: ampscale: 0.5}, ${7: durscale: 0.5}, ${8: initCPs: 12}, ${9: knum: nil}, ${10: mul: 1.0}, ${11: add: 0.0})
endsnippet

snippet Gendy3.kr
Gendy3.kr(${1:ampdist: 1}, ${2: durdist: 1}, ${3: adparam: 1.0}, ${4: ddparam: 1.0}, ${5: freq: 440}, ${6: ampscale: 0.5}, ${7: durscale: 0.5}, ${8: initCPs: 12}, ${9: knum: nil}, ${10: mul: 1.0}, ${11: add: 0.0})
endsnippet

snippet Gendy4.ar
Gendy4.ar(${1:ampdist: 1}, ${2: durdist: 1}, ${3: adparam: 1.0}, ${4: ddparam: 1.0}, ${5: minfreq: 440}, ${6: maxfreq: 660}, ${7: ampscale: 0.5}, ${8: durscale: 0.5}, ${9: initCPs: 12}, ${10: knum: nil}, ${11: mul: 1.0}, ${12: add: 0.0})
endsnippet

snippet Gendy4.kr
Gendy4.kr(${1:ampdist: 1}, ${2: durdist: 1}, ${3: adparam: 1.0}, ${4: ddparam: 1.0}, ${5: minfreq: 20}, ${6: maxfreq: 1000}, ${7: ampscale: 0.5}, ${8: durscale: 0.5}, ${9: initCPs: 12}, ${10: knum: nil}, ${11: mul: 1.0}, ${12: add: 0.0})
endsnippet

snippet Getenv.new
Getenv.new(${1:key: nil}, ${2: defaultval: 0})
endsnippet

snippet Getenv.new1
Getenv.new1(${1:rate: nil}, ${2: key: nil}, ${3: defaultval: nil})
endsnippet

snippet Getenv.categories
Getenv.categories(${1:})
endsnippet

snippet Git.isGit
Git.isGit(${1:localPath: nil})
endsnippet

snippet Git.new
Git.new(${1:localPath: nil})
endsnippet

snippet Git.checkForGit
Git.checkForGit(${1:})
endsnippet

snippet GlitchBPF.ar
GlitchBPF.ar(${1:in: 0.0}, ${2: freq: 440.0}, ${3: rq: 1.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet GlitchBPF.kr
GlitchBPF.kr(${1:in: 0.0}, ${2: freq: 440.0}, ${3: rq: 1.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet GlitchHPF.ar
GlitchHPF.ar(${1:in: 0.0}, ${2: freq: 440.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet GlitchHPF.kr
GlitchHPF.kr(${1:in: 0.0}, ${2: freq: 440.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet GlitchRHPF.ar
GlitchRHPF.ar(${1:in: 0.0}, ${2: freq: 440.0}, ${3: rq: 1.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet GlitchRHPF.kr
GlitchRHPF.kr(${1:in: 0.0}, ${2: freq: 440.0}, ${3: rq: 1.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet GlobalDirtEffect.new
GlobalDirtEffect.new(${1:name: nil}, ${2: paramNames: nil}, ${3: numChannels: nil})
endsnippet

snippet Goertzel.kr
Goertzel.kr(${1:in: 0.0}, ${2: bufsize: 1024}, ${3: freq: nil}, ${4: hop: 1})
endsnippet

snippet Gradient.new
Gradient.new(${1:color1: nil}, ${2: color2: nil}, ${3: direction: h}, ${4: steps: 64})
endsnippet

snippet GrainBuf.ar
GrainBuf.ar(${1:numChannels: 1}, ${2: trigger: 0}, ${3: dur: 1}, ${4: sndbuf: nil}, ${5: rate: 1}, ${6: pos: 0}, ${7: interp: 2}, ${8: pan: 0}, ${9: envbufnum: -1}, ${10: maxGrains: 512}, ${11: mul: 1}, ${12: add: 0})
endsnippet

snippet GrainBufJ.ar
GrainBufJ.ar(${1:numChannels: 1}, ${2: trigger: 0}, ${3: dur: 1}, ${4: sndbuf: nil}, ${5: rate: 1}, ${6: pos: 0}, ${7: loop: 0}, ${8: interp: 2}, ${9: grainAmp: 1}, ${10: pan: 0}, ${11: envbufnum: -1}, ${12: maxGrains: 512}, ${13: mul: 1}, ${14: add: 0})
endsnippet

snippet GrainFM.ar
GrainFM.ar(${1:numChannels: 1}, ${2: trigger: 0}, ${3: dur: 1}, ${4: carfreq: 440}, ${5: modfreq: 200}, ${6: index: 1}, ${7: pan: 0}, ${8: envbufnum: -1}, ${9: maxGrains: 512}, ${10: mul: 1}, ${11: add: 0})
endsnippet

snippet GrainFMJ.ar
GrainFMJ.ar(${1:numChannels: 1}, ${2: trigger: 0}, ${3: dur: 1}, ${4: carfreq: 440}, ${5: modfreq: 200}, ${6: index: 1}, ${7: grainAmp: 1}, ${8: pan: 0}, ${9: envbufnum: -1}, ${10: maxGrains: 512}, ${11: mul: 1}, ${12: add: 0})
endsnippet

snippet GrainIn.ar
GrainIn.ar(${1:numChannels: 1}, ${2: trigger: 0}, ${3: dur: 1}, ${4: in: nil}, ${5: pan: 0}, ${6: envbufnum: -1}, ${7: maxGrains: 512}, ${8: mul: 1}, ${9: add: 0})
endsnippet

snippet GrainInJ.ar
GrainInJ.ar(${1:numChannels: 1}, ${2: trigger: 0}, ${3: dur: 1}, ${4: in: nil}, ${5: grainAmp: 1}, ${6: pan: 0}, ${7: envbufnum: -1}, ${8: maxGrains: 512}, ${9: mul: 1}, ${10: add: 0})
endsnippet

snippet GrainSin.ar
GrainSin.ar(${1:numChannels: 1}, ${2: trigger: 0}, ${3: dur: 1}, ${4: freq: 440}, ${5: pan: 0}, ${6: envbufnum: -1}, ${7: maxGrains: 512}, ${8: mul: 1}, ${9: add: 0})
endsnippet

snippet GrainSinJ.ar
GrainSinJ.ar(${1:numChannels: 1}, ${2: trigger: 0}, ${3: dur: 1}, ${4: freq: 440}, ${5: grainAmp: 1}, ${6: pan: 0}, ${7: envbufnum: -1}, ${8: maxGrains: 512}, ${9: mul: 1}, ${10: add: 0})
endsnippet

snippet GraphBuilder.wrapOut
GraphBuilder.wrapOut(${1:name: nil}, ${2: func: nil}, ${3: rates: nil}, ${4: prependArgs: nil}, ${5: outClass: Out}, ${6: fadeTime: nil})
endsnippet

snippet GraphBuilder.makeFadeEnv
GraphBuilder.makeFadeEnv(${1:fadeTime: 0.02})
endsnippet

snippet GravityGrid.ar
GravityGrid.ar(${1:reset: 0}, ${2: rate: 0.1}, ${3: newx: 0.0}, ${4: newy: 0.0}, ${5: bufnum: nil}, ${6: mul: 1.0}, ${7: add: 0.0})
endsnippet

snippet GravityGrid2.ar
GravityGrid2.ar(${1:reset: 0}, ${2: rate: 0.1}, ${3: newx: 0.0}, ${4: newy: 0.0}, ${5: bufnum: nil}, ${6: mul: 1.0}, ${7: add: 0.0})
endsnippet

snippet Greyhole.ar
Greyhole.ar(${1:in: nil}, ${2: delayTime: 2.0}, ${3: damp: 0.0}, ${4: size: 1.0}, ${5: diff: 0.707}, ${6: feedback: 0.9}, ${7: modDepth: 0.1}, ${8: modFreq: 2.0})
endsnippet

snippet GreyholeRaw.ar
GreyholeRaw.ar(${1:in1: nil}, ${2: in2: nil}, ${3: damping: 0.0}, ${4: delaytime: 2.0}, ${5: diffusion: 0.5}, ${6: feedback: 0.9}, ${7: moddepth: 0.1}, ${8: modfreq: 2.0}, ${9: size: 1.0})
endsnippet

snippet GridLayout.new
GridLayout.new(${1:})
endsnippet

snippet GridLayout.qtClass
GridLayout.qtClass(${1:})
endsnippet

snippet GridLayout.parse
GridLayout.parse(${1:in: nil}, ${2: row: nil}, ${3: col: nil})
endsnippet

snippet GridLayout.rows
GridLayout.rows(${1:rows: [  ]})
endsnippet

snippet GridLayout.columns
GridLayout.columns(${1:cols: [  ]})
endsnippet

snippet GridLines.new
GridLines.new(${1:spec: nil})
endsnippet

snippet Group.creationCmd
Group.creationCmd(${1:})
endsnippet

snippet HID.initClass
HID.initClass(${1:})
endsnippet

snippet HID.addRecvFunc
HID.addRecvFunc(${1:function: nil})
endsnippet

snippet HID.removeRecvFunc
HID.removeRecvFunc(${1:function: nil})
endsnippet

snippet HID.addDevFunc
HID.addDevFunc(${1:function: nil})
endsnippet

snippet HID.removeDevFunc
HID.removeDevFunc(${1:function: nil})
endsnippet

snippet HID.action_
HID.action_(${1:function: nil})
endsnippet

snippet HID.deviceAction_
HID.deviceAction_(${1:function: nil})
endsnippet

snippet HID.findAvailable
HID.findAvailable(${1:})
endsnippet

snippet HID.openAt
HID.openAt(${1:index: nil})
endsnippet

snippet HID.open
HID.open(${1:vendorID: nil}, ${2: productID: nil}, ${3: path: nil})
endsnippet

snippet HID.mergeUsageDict
HID.mergeUsageDict(${1:dev: nil})
endsnippet

snippet HID.removeUsageDict
HID.removeUsageDict(${1:dev: nil})
endsnippet

snippet HID.openPath
HID.openPath(${1:path: nil})
endsnippet

snippet HID.initializeHID
HID.initializeHID(${1:})
endsnippet

snippet HID.closeAll
HID.closeAll(${1:})
endsnippet

snippet HID.findBy
HID.findBy(${1:vendorID: nil}, ${2: productID: nil}, ${3: path: nil}, ${4: serial: nil}, ${5: releaseNumber: nil})
endsnippet

snippet HID.doPrAction
HID.doPrAction(${1:value: nil}, ${2: physValue: nil}, ${3: rawValue: nil}, ${4: arrayValue: nil}, ${5: usage: nil}, ${6: page: nil}, ${7: elid: nil}, ${8: devid: nil})
endsnippet

snippet HID.prInitHID
HID.prInitHID(${1:})
endsnippet

snippet HID.prCloseAll
HID.prCloseAll(${1:})
endsnippet

snippet HID.prOpenDevice
HID.prOpenDevice(${1:vendorID: nil}, ${2: productID: nil}, ${3: path: nil})
endsnippet

snippet HID.prCloseDevice
HID.prCloseDevice(${1:joyid: nil})
endsnippet

snippet HID.prGetDeviceInfo
HID.prGetDeviceInfo(${1:joyid: nil})
endsnippet

snippet HID.prGetNumberOfCollections
HID.prGetNumberOfCollections(${1:joyid: nil})
endsnippet

snippet HID.prGetCollectionInfo
HID.prGetCollectionInfo(${1:joyid: nil}, ${2: colid: nil})
endsnippet

snippet HID.prGetNumberOfElements
HID.prGetNumberOfElements(${1:joyid: nil})
endsnippet

snippet HID.prGetElementInfo
HID.prGetElementInfo(${1:joyid: nil}, ${2: elid: nil})
endsnippet

snippet HID.prSetElementOutput
HID.prSetElementOutput(${1:joyid: nil}, ${2: elid: nil}, ${3: value: nil})
endsnippet

snippet HID.prSetElementRepeat
HID.prSetElementRepeat(${1:joyid: nil}, ${2: elid: nil}, ${3: value: nil})
endsnippet

snippet HID.prbuildDeviceList
HID.prbuildDeviceList(${1:})
endsnippet

snippet HID.prHIDDeviceClosed
HID.prHIDDeviceClosed(${1:devid: nil})
endsnippet

snippet HID.prHIDElementData
HID.prHIDElementData(${1:devid: nil}, ${2: elid: nil}, ${3: page: nil}, ${4: usage: nil}, ${5: rawValue: nil}, ${6: value: nil}, ${7: physValue: nil}, ${8: arrayValue: nil})
endsnippet

snippet HID.prHIDDeviceData
HID.prHIDDeviceData(${1:devid: nil}, ${2: numelements: nil})
endsnippet

snippet HID.new
HID.new(${1:args: [  ]})
endsnippet

snippet HID.basicNew
HID.basicNew(${1:id: nil})
endsnippet

snippet HID.postAvailable
HID.postAvailable(${1:})
endsnippet

snippet HID.postAvailableUsages
HID.postAvailableUsages(${1:})
endsnippet

snippet HIDCollection.new
HIDCollection.new(${1:args: [  ]})
endsnippet

snippet HIDElement.new
HIDElement.new(${1:args: [  ]})
endsnippet

snippet HIDElementProto.new
HIDElementProto.new(${1:})
endsnippet

snippet HIDElementProto.newType
HIDElementProto.newType(${1:uName: nil}, ${2: pName: nil})
endsnippet

snippet HIDElementProto.newTypeID
HIDElementProto.newTypeID(${1:uID: nil}, ${2: pID: nil})
endsnippet

snippet HIDElementProto.newFromDict
HIDElementProto.newFromDict(${1:dict: nil})
endsnippet

snippet HIDElementProtoDispatcher.new
HIDElementProtoDispatcher.new(${1:})
endsnippet

snippet HIDFunc.initClass
HIDFunc.initClass(${1:})
endsnippet

snippet HIDFunc.usage
HIDFunc.usage(${1:func: nil}, ${2: elUsageName: nil}, ${3: devUsageName: nil}, ${4: deviceInfo: nil}, ${5: argTemplate: nil}, ${6: argTemplateType: nil}, ${7: dispatcher: nil})
endsnippet

snippet HIDFunc.usageID
HIDFunc.usageID(${1:func: nil}, ${2: elUsageID: nil}, ${3: elPageID: nil}, ${4: deviceName: nil}, ${5: deviceInfo: nil}, ${6: argTemplate: nil}, ${7: argTemplateType: nil}, ${8: dispatcher: nil})
endsnippet

snippet HIDFunc.device
HIDFunc.device(${1:func: nil}, ${2: elUsageName: nil}, ${3: deviceName: nil}, ${4: deviceInfo: nil}, ${5: argTemplate: nil}, ${6: argTemplateType: nil}, ${7: dispatcher: nil})
endsnippet

snippet HIDFunc.proto
HIDFunc.proto(${1:func: nil}, ${2: protoElement: nil}, ${3: deviceInfo: nil}, ${4: argTemplate: nil}, ${5: argTemplateType: nil}, ${6: dispatcher: nil})
endsnippet

snippet HIDFunc.element
HIDFunc.element(${1:func: nil}, ${2: elID: nil}, ${3: deviceName: nil}, ${4: deviceInfo: nil}, ${5: argTemplate: nil}, ${6: argTemplateType: nil}, ${7: dispatcher: nil})
endsnippet

snippet HIDFunc.trace
HIDFunc.trace(${1:bool: true})
endsnippet

snippet HIDFunc.cmdPeriod
HIDFunc.cmdPeriod(${1:})
endsnippet

snippet HIDFuncDeviceProtoMatcher.new
HIDFuncDeviceProtoMatcher.new(${1:srcID: nil}, ${2: func: nil})
endsnippet

snippet HIDFuncElementProtoMatcher.new
HIDFuncElementProtoMatcher.new(${1:elProto: nil}, ${2: func: nil})
endsnippet

snippet HIDInfo.new
HIDInfo.new(${1:args: [  ]})
endsnippet

snippet HIDProto.new
HIDProto.new(${1:})
endsnippet

snippet HIDProto.newType
HIDProto.newType(${1:uName: nil}, ${2: pName: nil})
endsnippet

snippet HIDProto.newProduct
HIDProto.newProduct(${1:pName: nil}, ${2: vName: nil})
endsnippet

snippet HIDProto.newFromDict
HIDProto.newFromDict(${1:dict: nil})
endsnippet

snippet HIDRawValueMatcher.new
HIDRawValueMatcher.new(${1:argTemplate: nil}, ${2: func: nil})
endsnippet

snippet HIDUsage.initClass
HIDUsage.initClass(${1:})
endsnippet

snippet HIDUsage.getUsageDescription
HIDUsage.getUsageDescription(${1:usagePage: nil}, ${2: usage: nil})
endsnippet

snippet HIDUsage.idsToName
HIDUsage.idsToName(${1:page: nil}, ${2: usage: nil})
endsnippet

snippet HIDUsage.getUsageIds
HIDUsage.getUsageIds(${1:usageName: nil})
endsnippet

snippet HIDUsage.readHUTFile
HIDUsage.readHUTFile(${1:yamlfile: nil})
endsnippet

snippet HIDUsageDispatcher.new
HIDUsageDispatcher.new(${1:})
endsnippet

snippet HIDValueMatcher.new
HIDValueMatcher.new(${1:argTemplate: nil}, ${2: func: nil})
endsnippet

snippet HIDdef.initClass
HIDdef.initClass(${1:})
endsnippet

snippet HIDdef.new
HIDdef.new(${1:key: nil}, ${2: func: nil})
endsnippet

snippet HIDdef.usage
HIDdef.usage(${1:key: nil}, ${2: func: nil}, ${3: elUsageName: nil}, ${4: devUsageName: nil}, ${5: deviceInfo: nil}, ${6: argTemplate: nil}, ${7: argTemplateType: nil}, ${8: dispatcher: nil})
endsnippet

snippet HIDdef.usageID
HIDdef.usageID(${1:key: nil}, ${2: func: nil}, ${3: elUsageID: nil}, ${4: elPageID: nil}, ${5: deviceName: nil}, ${6: deviceInfo: nil}, ${7: argTemplate: nil}, ${8: argTemplateType: nil}, ${9: dispatcher: nil})
endsnippet

snippet HIDdef.device
HIDdef.device(${1:key: nil}, ${2: func: nil}, ${3: elUsageName: nil}, ${4: deviceName: nil}, ${5: deviceInfo: nil}, ${6: argTemplate: nil}, ${7: argTemplateType: nil}, ${8: dispatcher: nil})
endsnippet

snippet HIDdef.proto
HIDdef.proto(${1:key: nil}, ${2: func: nil}, ${3: protoElement: nil}, ${4: deviceInfo: nil}, ${5: argTemplate: nil}, ${6: argTemplateType: nil}, ${7: dispatcher: nil})
endsnippet

snippet HIDdef.element
HIDdef.element(${1:key: nil}, ${2: func: nil}, ${3: elID: nil}, ${4: deviceName: nil}, ${5: deviceInfo: nil}, ${6: argTemplate: nil}, ${7: argTemplateType: nil}, ${8: dispatcher: nil})
endsnippet

snippet HIDdef.freeAll
HIDdef.freeAll(${1:})
endsnippet

snippet HLayout.qtClass
HLayout.qtClass(${1:})
endsnippet

snippet HLayoutView.qtClass
HLayoutView.qtClass(${1:})
endsnippet

snippet HOAAzimuthRotator1.ar
HOAAzimuthRotator1.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: azimuth: 0.0})
endsnippet

snippet HOAAzimuthRotator1.kr
HOAAzimuthRotator1.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: azimuth: 0.0})
endsnippet

snippet HOAAzimuthRotator10.ar
HOAAzimuthRotator10.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: in37: nil}, ${38: in38: nil}, ${39: in39: nil}, ${40: in40: nil}, ${41: in41: nil}, ${42: in42: nil}, ${43: in43: nil}, ${44: in44: nil}, ${45: in45: nil}, ${46: in46: nil}, ${47: in47: nil}, ${48: in48: nil}, ${49: in49: nil}, ${50: in50: nil}, ${51: in51: nil}, ${52: in52: nil}, ${53: in53: nil}, ${54: in54: nil}, ${55: in55: nil}, ${56: in56: nil}, ${57: in57: nil}, ${58: in58: nil}, ${59: in59: nil}, ${60: in60: nil}, ${61: in61: nil}, ${62: in62: nil}, ${63: in63: nil}, ${64: in64: nil}, ${65: in65: nil}, ${66: in66: nil}, ${67: in67: nil}, ${68: in68: nil}, ${69: in69: nil}, ${70: in70: nil}, ${71: in71: nil}, ${72: in72: nil}, ${73: in73: nil}, ${74: in74: nil}, ${75: in75: nil}, ${76: in76: nil}, ${77: in77: nil}, ${78: in78: nil}, ${79: in79: nil}, ${80: in80: nil}, ${81: in81: nil}, ${82: in82: nil}, ${83: in83: nil}, ${84: in84: nil}, ${85: in85: nil}, ${86: in86: nil}, ${87: in87: nil}, ${88: in88: nil}, ${89: in89: nil}, ${90: in90: nil}, ${91: in91: nil}, ${92: in92: nil}, ${93: in93: nil}, ${94: in94: nil}, ${95: in95: nil}, ${96: in96: nil}, ${97: in97: nil}, ${98: in98: nil}, ${99: in99: nil}, ${100: in100: nil}, ${101: in101: nil}, ${102: in102: nil}, ${103: in103: nil}, ${104: in104: nil}, ${105: in105: nil}, ${106: in106: nil}, ${107: in107: nil}, ${108: in108: nil}, ${109: in109: nil}, ${110: in110: nil}, ${111: in111: nil}, ${112: in112: nil}, ${113: in113: nil}, ${114: in114: nil}, ${115: in115: nil}, ${116: in116: nil}, ${117: in117: nil}, ${118: in118: nil}, ${119: in119: nil}, ${120: in120: nil}, ${121: in121: nil}, ${122: azimuth: 0.0})
endsnippet

snippet HOAAzimuthRotator10.kr
HOAAzimuthRotator10.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: in37: nil}, ${38: in38: nil}, ${39: in39: nil}, ${40: in40: nil}, ${41: in41: nil}, ${42: in42: nil}, ${43: in43: nil}, ${44: in44: nil}, ${45: in45: nil}, ${46: in46: nil}, ${47: in47: nil}, ${48: in48: nil}, ${49: in49: nil}, ${50: in50: nil}, ${51: in51: nil}, ${52: in52: nil}, ${53: in53: nil}, ${54: in54: nil}, ${55: in55: nil}, ${56: in56: nil}, ${57: in57: nil}, ${58: in58: nil}, ${59: in59: nil}, ${60: in60: nil}, ${61: in61: nil}, ${62: in62: nil}, ${63: in63: nil}, ${64: in64: nil}, ${65: in65: nil}, ${66: in66: nil}, ${67: in67: nil}, ${68: in68: nil}, ${69: in69: nil}, ${70: in70: nil}, ${71: in71: nil}, ${72: in72: nil}, ${73: in73: nil}, ${74: in74: nil}, ${75: in75: nil}, ${76: in76: nil}, ${77: in77: nil}, ${78: in78: nil}, ${79: in79: nil}, ${80: in80: nil}, ${81: in81: nil}, ${82: in82: nil}, ${83: in83: nil}, ${84: in84: nil}, ${85: in85: nil}, ${86: in86: nil}, ${87: in87: nil}, ${88: in88: nil}, ${89: in89: nil}, ${90: in90: nil}, ${91: in91: nil}, ${92: in92: nil}, ${93: in93: nil}, ${94: in94: nil}, ${95: in95: nil}, ${96: in96: nil}, ${97: in97: nil}, ${98: in98: nil}, ${99: in99: nil}, ${100: in100: nil}, ${101: in101: nil}, ${102: in102: nil}, ${103: in103: nil}, ${104: in104: nil}, ${105: in105: nil}, ${106: in106: nil}, ${107: in107: nil}, ${108: in108: nil}, ${109: in109: nil}, ${110: in110: nil}, ${111: in111: nil}, ${112: in112: nil}, ${113: in113: nil}, ${114: in114: nil}, ${115: in115: nil}, ${116: in116: nil}, ${117: in117: nil}, ${118: in118: nil}, ${119: in119: nil}, ${120: in120: nil}, ${121: in121: nil}, ${122: azimuth: 0.0})
endsnippet

snippet HOAAzimuthRotator2.ar
HOAAzimuthRotator2.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: azimuth: 0.0})
endsnippet

snippet HOAAzimuthRotator2.kr
HOAAzimuthRotator2.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: azimuth: 0.0})
endsnippet

snippet HOAAzimuthRotator3.ar
HOAAzimuthRotator3.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: azimuth: 0.0})
endsnippet

snippet HOAAzimuthRotator3.kr
HOAAzimuthRotator3.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: azimuth: 0.0})
endsnippet

snippet HOAAzimuthRotator4.ar
HOAAzimuthRotator4.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: azimuth: 0.0})
endsnippet

snippet HOAAzimuthRotator4.kr
HOAAzimuthRotator4.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: azimuth: 0.0})
endsnippet

snippet HOAAzimuthRotator5.ar
HOAAzimuthRotator5.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: azimuth: 0.0})
endsnippet

snippet HOAAzimuthRotator5.kr
HOAAzimuthRotator5.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: azimuth: 0.0})
endsnippet

snippet HOAAzimuthRotator6.ar
HOAAzimuthRotator6.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: in37: nil}, ${38: in38: nil}, ${39: in39: nil}, ${40: in40: nil}, ${41: in41: nil}, ${42: in42: nil}, ${43: in43: nil}, ${44: in44: nil}, ${45: in45: nil}, ${46: in46: nil}, ${47: in47: nil}, ${48: in48: nil}, ${49: in49: nil}, ${50: azimuth: 0.0})
endsnippet

snippet HOAAzimuthRotator6.kr
HOAAzimuthRotator6.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: in37: nil}, ${38: in38: nil}, ${39: in39: nil}, ${40: in40: nil}, ${41: in41: nil}, ${42: in42: nil}, ${43: in43: nil}, ${44: in44: nil}, ${45: in45: nil}, ${46: in46: nil}, ${47: in47: nil}, ${48: in48: nil}, ${49: in49: nil}, ${50: azimuth: 0.0})
endsnippet

snippet HOAAzimuthRotator7.ar
HOAAzimuthRotator7.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: in37: nil}, ${38: in38: nil}, ${39: in39: nil}, ${40: in40: nil}, ${41: in41: nil}, ${42: in42: nil}, ${43: in43: nil}, ${44: in44: nil}, ${45: in45: nil}, ${46: in46: nil}, ${47: in47: nil}, ${48: in48: nil}, ${49: in49: nil}, ${50: in50: nil}, ${51: in51: nil}, ${52: in52: nil}, ${53: in53: nil}, ${54: in54: nil}, ${55: in55: nil}, ${56: in56: nil}, ${57: in57: nil}, ${58: in58: nil}, ${59: in59: nil}, ${60: in60: nil}, ${61: in61: nil}, ${62: in62: nil}, ${63: in63: nil}, ${64: in64: nil}, ${65: azimuth: 0.0})
endsnippet

snippet HOAAzimuthRotator7.kr
HOAAzimuthRotator7.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: in37: nil}, ${38: in38: nil}, ${39: in39: nil}, ${40: in40: nil}, ${41: in41: nil}, ${42: in42: nil}, ${43: in43: nil}, ${44: in44: nil}, ${45: in45: nil}, ${46: in46: nil}, ${47: in47: nil}, ${48: in48: nil}, ${49: in49: nil}, ${50: in50: nil}, ${51: in51: nil}, ${52: in52: nil}, ${53: in53: nil}, ${54: in54: nil}, ${55: in55: nil}, ${56: in56: nil}, ${57: in57: nil}, ${58: in58: nil}, ${59: in59: nil}, ${60: in60: nil}, ${61: in61: nil}, ${62: in62: nil}, ${63: in63: nil}, ${64: in64: nil}, ${65: azimuth: 0.0})
endsnippet

snippet HOAAzimuthRotator8.ar
HOAAzimuthRotator8.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: in37: nil}, ${38: in38: nil}, ${39: in39: nil}, ${40: in40: nil}, ${41: in41: nil}, ${42: in42: nil}, ${43: in43: nil}, ${44: in44: nil}, ${45: in45: nil}, ${46: in46: nil}, ${47: in47: nil}, ${48: in48: nil}, ${49: in49: nil}, ${50: in50: nil}, ${51: in51: nil}, ${52: in52: nil}, ${53: in53: nil}, ${54: in54: nil}, ${55: in55: nil}, ${56: in56: nil}, ${57: in57: nil}, ${58: in58: nil}, ${59: in59: nil}, ${60: in60: nil}, ${61: in61: nil}, ${62: in62: nil}, ${63: in63: nil}, ${64: in64: nil}, ${65: in65: nil}, ${66: in66: nil}, ${67: in67: nil}, ${68: in68: nil}, ${69: in69: nil}, ${70: in70: nil}, ${71: in71: nil}, ${72: in72: nil}, ${73: in73: nil}, ${74: in74: nil}, ${75: in75: nil}, ${76: in76: nil}, ${77: in77: nil}, ${78: in78: nil}, ${79: in79: nil}, ${80: in80: nil}, ${81: in81: nil}, ${82: azimuth: 0.0})
endsnippet

snippet HOAAzimuthRotator8.kr
HOAAzimuthRotator8.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: in37: nil}, ${38: in38: nil}, ${39: in39: nil}, ${40: in40: nil}, ${41: in41: nil}, ${42: in42: nil}, ${43: in43: nil}, ${44: in44: nil}, ${45: in45: nil}, ${46: in46: nil}, ${47: in47: nil}, ${48: in48: nil}, ${49: in49: nil}, ${50: in50: nil}, ${51: in51: nil}, ${52: in52: nil}, ${53: in53: nil}, ${54: in54: nil}, ${55: in55: nil}, ${56: in56: nil}, ${57: in57: nil}, ${58: in58: nil}, ${59: in59: nil}, ${60: in60: nil}, ${61: in61: nil}, ${62: in62: nil}, ${63: in63: nil}, ${64: in64: nil}, ${65: in65: nil}, ${66: in66: nil}, ${67: in67: nil}, ${68: in68: nil}, ${69: in69: nil}, ${70: in70: nil}, ${71: in71: nil}, ${72: in72: nil}, ${73: in73: nil}, ${74: in74: nil}, ${75: in75: nil}, ${76: in76: nil}, ${77: in77: nil}, ${78: in78: nil}, ${79: in79: nil}, ${80: in80: nil}, ${81: in81: nil}, ${82: azimuth: 0.0})
endsnippet

snippet HOAAzimuthRotator9.ar
HOAAzimuthRotator9.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: in37: nil}, ${38: in38: nil}, ${39: in39: nil}, ${40: in40: nil}, ${41: in41: nil}, ${42: in42: nil}, ${43: in43: nil}, ${44: in44: nil}, ${45: in45: nil}, ${46: in46: nil}, ${47: in47: nil}, ${48: in48: nil}, ${49: in49: nil}, ${50: in50: nil}, ${51: in51: nil}, ${52: in52: nil}, ${53: in53: nil}, ${54: in54: nil}, ${55: in55: nil}, ${56: in56: nil}, ${57: in57: nil}, ${58: in58: nil}, ${59: in59: nil}, ${60: in60: nil}, ${61: in61: nil}, ${62: in62: nil}, ${63: in63: nil}, ${64: in64: nil}, ${65: in65: nil}, ${66: in66: nil}, ${67: in67: nil}, ${68: in68: nil}, ${69: in69: nil}, ${70: in70: nil}, ${71: in71: nil}, ${72: in72: nil}, ${73: in73: nil}, ${74: in74: nil}, ${75: in75: nil}, ${76: in76: nil}, ${77: in77: nil}, ${78: in78: nil}, ${79: in79: nil}, ${80: in80: nil}, ${81: in81: nil}, ${82: in82: nil}, ${83: in83: nil}, ${84: in84: nil}, ${85: in85: nil}, ${86: in86: nil}, ${87: in87: nil}, ${88: in88: nil}, ${89: in89: nil}, ${90: in90: nil}, ${91: in91: nil}, ${92: in92: nil}, ${93: in93: nil}, ${94: in94: nil}, ${95: in95: nil}, ${96: in96: nil}, ${97: in97: nil}, ${98: in98: nil}, ${99: in99: nil}, ${100: in100: nil}, ${101: azimuth: 0.0})
endsnippet

snippet HOAAzimuthRotator9.kr
HOAAzimuthRotator9.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: in37: nil}, ${38: in38: nil}, ${39: in39: nil}, ${40: in40: nil}, ${41: in41: nil}, ${42: in42: nil}, ${43: in43: nil}, ${44: in44: nil}, ${45: in45: nil}, ${46: in46: nil}, ${47: in47: nil}, ${48: in48: nil}, ${49: in49: nil}, ${50: in50: nil}, ${51: in51: nil}, ${52: in52: nil}, ${53: in53: nil}, ${54: in54: nil}, ${55: in55: nil}, ${56: in56: nil}, ${57: in57: nil}, ${58: in58: nil}, ${59: in59: nil}, ${60: in60: nil}, ${61: in61: nil}, ${62: in62: nil}, ${63: in63: nil}, ${64: in64: nil}, ${65: in65: nil}, ${66: in66: nil}, ${67: in67: nil}, ${68: in68: nil}, ${69: in69: nil}, ${70: in70: nil}, ${71: in71: nil}, ${72: in72: nil}, ${73: in73: nil}, ${74: in74: nil}, ${75: in75: nil}, ${76: in76: nil}, ${77: in77: nil}, ${78: in78: nil}, ${79: in79: nil}, ${80: in80: nil}, ${81: in81: nil}, ${82: in82: nil}, ${83: in83: nil}, ${84: in84: nil}, ${85: in85: nil}, ${86: in86: nil}, ${87: in87: nil}, ${88: in88: nil}, ${89: in89: nil}, ${90: in90: nil}, ${91: in91: nil}, ${92: in92: nil}, ${93: in93: nil}, ${94: in94: nil}, ${95: in95: nil}, ${96: in96: nil}, ${97: in97: nil}, ${98: in98: nil}, ${99: in99: nil}, ${100: in100: nil}, ${101: azimuth: 0.0})
endsnippet

snippet HOABeamDirac2HOA1.ar
HOABeamDirac2HOA1.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: on: 0.0}, ${6: crossfade: 1.0}, ${7: gain: 0.0}, ${8: azimuth: 0.0}, ${9: elevation: 0.0}, ${10: timer_manual: 0.0}, ${11: focus: 0.0})
endsnippet

snippet HOABeamDirac2HOA1.kr
HOABeamDirac2HOA1.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: on: 0.0}, ${6: crossfade: 1.0}, ${7: gain: 0.0}, ${8: azimuth: 0.0}, ${9: elevation: 0.0}, ${10: timer_manual: 0.0}, ${11: focus: 0.0})
endsnippet

snippet HOABeamDirac2HOA10.ar
HOABeamDirac2HOA10.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: in37: nil}, ${38: in38: nil}, ${39: in39: nil}, ${40: in40: nil}, ${41: in41: nil}, ${42: in42: nil}, ${43: in43: nil}, ${44: in44: nil}, ${45: in45: nil}, ${46: in46: nil}, ${47: in47: nil}, ${48: in48: nil}, ${49: in49: nil}, ${50: in50: nil}, ${51: in51: nil}, ${52: in52: nil}, ${53: in53: nil}, ${54: in54: nil}, ${55: in55: nil}, ${56: in56: nil}, ${57: in57: nil}, ${58: in58: nil}, ${59: in59: nil}, ${60: in60: nil}, ${61: in61: nil}, ${62: in62: nil}, ${63: in63: nil}, ${64: in64: nil}, ${65: in65: nil}, ${66: in66: nil}, ${67: in67: nil}, ${68: in68: nil}, ${69: in69: nil}, ${70: in70: nil}, ${71: in71: nil}, ${72: in72: nil}, ${73: in73: nil}, ${74: in74: nil}, ${75: in75: nil}, ${76: in76: nil}, ${77: in77: nil}, ${78: in78: nil}, ${79: in79: nil}, ${80: in80: nil}, ${81: in81: nil}, ${82: in82: nil}, ${83: in83: nil}, ${84: in84: nil}, ${85: in85: nil}, ${86: in86: nil}, ${87: in87: nil}, ${88: in88: nil}, ${89: in89: nil}, ${90: in90: nil}, ${91: in91: nil}, ${92: in92: nil}, ${93: in93: nil}, ${94: in94: nil}, ${95: in95: nil}, ${96: in96: nil}, ${97: in97: nil}, ${98: in98: nil}, ${99: in99: nil}, ${100: in100: nil}, ${101: in101: nil}, ${102: in102: nil}, ${103: in103: nil}, ${104: in104: nil}, ${105: in105: nil}, ${106: in106: nil}, ${107: in107: nil}, ${108: in108: nil}, ${109: in109: nil}, ${110: in110: nil}, ${111: in111: nil}, ${112: in112: nil}, ${113: in113: nil}, ${114: in114: nil}, ${115: in115: nil}, ${116: in116: nil}, ${117: in117: nil}, ${118: in118: nil}, ${119: in119: nil}, ${120: in120: nil}, ${121: in121: nil}, ${122: on: 0.0}, ${123: crossfade: 1.0}, ${124: gain: 0.0}, ${125: azimuth: 0.0}, ${126: elevation: 0.0}, ${127: timer_manual: 0.0}, ${128: focus: 0.0})
endsnippet

snippet HOABeamDirac2HOA10.kr
HOABeamDirac2HOA10.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: in37: nil}, ${38: in38: nil}, ${39: in39: nil}, ${40: in40: nil}, ${41: in41: nil}, ${42: in42: nil}, ${43: in43: nil}, ${44: in44: nil}, ${45: in45: nil}, ${46: in46: nil}, ${47: in47: nil}, ${48: in48: nil}, ${49: in49: nil}, ${50: in50: nil}, ${51: in51: nil}, ${52: in52: nil}, ${53: in53: nil}, ${54: in54: nil}, ${55: in55: nil}, ${56: in56: nil}, ${57: in57: nil}, ${58: in58: nil}, ${59: in59: nil}, ${60: in60: nil}, ${61: in61: nil}, ${62: in62: nil}, ${63: in63: nil}, ${64: in64: nil}, ${65: in65: nil}, ${66: in66: nil}, ${67: in67: nil}, ${68: in68: nil}, ${69: in69: nil}, ${70: in70: nil}, ${71: in71: nil}, ${72: in72: nil}, ${73: in73: nil}, ${74: in74: nil}, ${75: in75: nil}, ${76: in76: nil}, ${77: in77: nil}, ${78: in78: nil}, ${79: in79: nil}, ${80: in80: nil}, ${81: in81: nil}, ${82: in82: nil}, ${83: in83: nil}, ${84: in84: nil}, ${85: in85: nil}, ${86: in86: nil}, ${87: in87: nil}, ${88: in88: nil}, ${89: in89: nil}, ${90: in90: nil}, ${91: in91: nil}, ${92: in92: nil}, ${93: in93: nil}, ${94: in94: nil}, ${95: in95: nil}, ${96: in96: nil}, ${97: in97: nil}, ${98: in98: nil}, ${99: in99: nil}, ${100: in100: nil}, ${101: in101: nil}, ${102: in102: nil}, ${103: in103: nil}, ${104: in104: nil}, ${105: in105: nil}, ${106: in106: nil}, ${107: in107: nil}, ${108: in108: nil}, ${109: in109: nil}, ${110: in110: nil}, ${111: in111: nil}, ${112: in112: nil}, ${113: in113: nil}, ${114: in114: nil}, ${115: in115: nil}, ${116: in116: nil}, ${117: in117: nil}, ${118: in118: nil}, ${119: in119: nil}, ${120: in120: nil}, ${121: in121: nil}, ${122: on: 0.0}, ${123: crossfade: 1.0}, ${124: gain: 0.0}, ${125: azimuth: 0.0}, ${126: elevation: 0.0}, ${127: timer_manual: 0.0}, ${128: focus: 0.0})
endsnippet

snippet HOABeamDirac2HOA2.ar
HOABeamDirac2HOA2.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: on: 0.0}, ${11: crossfade: 1.0}, ${12: gain: 0.0}, ${13: azimuth: 0.0}, ${14: elevation: 0.0}, ${15: timer_manual: 0.0}, ${16: focus: 0.0})
endsnippet

snippet HOABeamDirac2HOA2.kr
HOABeamDirac2HOA2.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: on: 0.0}, ${11: crossfade: 1.0}, ${12: gain: 0.0}, ${13: azimuth: 0.0}, ${14: elevation: 0.0}, ${15: timer_manual: 0.0}, ${16: focus: 0.0})
endsnippet

snippet HOABeamDirac2HOA3.ar
HOABeamDirac2HOA3.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: on: 0.0}, ${18: crossfade: 1.0}, ${19: gain: 0.0}, ${20: azimuth: 0.0}, ${21: elevation: 0.0}, ${22: timer_manual: 0.0}, ${23: focus: 0.0})
endsnippet

snippet HOABeamDirac2HOA3.kr
HOABeamDirac2HOA3.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: on: 0.0}, ${18: crossfade: 1.0}, ${19: gain: 0.0}, ${20: azimuth: 0.0}, ${21: elevation: 0.0}, ${22: timer_manual: 0.0}, ${23: focus: 0.0})
endsnippet

snippet HOABeamDirac2HOA4.ar
HOABeamDirac2HOA4.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: on: 0.0}, ${27: crossfade: 1.0}, ${28: gain: 0.0}, ${29: azimuth: 0.0}, ${30: elevation: 0.0}, ${31: timer_manual: 0.0}, ${32: focus: 0.0})
endsnippet

snippet HOABeamDirac2HOA4.kr
HOABeamDirac2HOA4.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: on: 0.0}, ${27: crossfade: 1.0}, ${28: gain: 0.0}, ${29: azimuth: 0.0}, ${30: elevation: 0.0}, ${31: timer_manual: 0.0}, ${32: focus: 0.0})
endsnippet

snippet HOABeamDirac2HOA5.ar
HOABeamDirac2HOA5.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: on: 0.0}, ${38: crossfade: 1.0}, ${39: gain: 0.0}, ${40: azimuth: 0.0}, ${41: elevation: 0.0}, ${42: timer_manual: 0.0}, ${43: focus: 0.0})
endsnippet

snippet HOABeamDirac2HOA5.kr
HOABeamDirac2HOA5.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: on: 0.0}, ${38: crossfade: 1.0}, ${39: gain: 0.0}, ${40: azimuth: 0.0}, ${41: elevation: 0.0}, ${42: timer_manual: 0.0}, ${43: focus: 0.0})
endsnippet

snippet HOABeamDirac2HOA6.ar
HOABeamDirac2HOA6.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: in37: nil}, ${38: in38: nil}, ${39: in39: nil}, ${40: in40: nil}, ${41: in41: nil}, ${42: in42: nil}, ${43: in43: nil}, ${44: in44: nil}, ${45: in45: nil}, ${46: in46: nil}, ${47: in47: nil}, ${48: in48: nil}, ${49: in49: nil}, ${50: on: 0.0}, ${51: crossfade: 1.0}, ${52: gain: 0.0}, ${53: azimuth: 0.0}, ${54: elevation: 0.0}, ${55: timer_manual: 0.0}, ${56: focus: 0.0})
endsnippet

snippet HOABeamDirac2HOA6.kr
HOABeamDirac2HOA6.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: in37: nil}, ${38: in38: nil}, ${39: in39: nil}, ${40: in40: nil}, ${41: in41: nil}, ${42: in42: nil}, ${43: in43: nil}, ${44: in44: nil}, ${45: in45: nil}, ${46: in46: nil}, ${47: in47: nil}, ${48: in48: nil}, ${49: in49: nil}, ${50: on: 0.0}, ${51: crossfade: 1.0}, ${52: gain: 0.0}, ${53: azimuth: 0.0}, ${54: elevation: 0.0}, ${55: timer_manual: 0.0}, ${56: focus: 0.0})
endsnippet

snippet HOABeamDirac2HOA7.ar
HOABeamDirac2HOA7.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: in37: nil}, ${38: in38: nil}, ${39: in39: nil}, ${40: in40: nil}, ${41: in41: nil}, ${42: in42: nil}, ${43: in43: nil}, ${44: in44: nil}, ${45: in45: nil}, ${46: in46: nil}, ${47: in47: nil}, ${48: in48: nil}, ${49: in49: nil}, ${50: in50: nil}, ${51: in51: nil}, ${52: in52: nil}, ${53: in53: nil}, ${54: in54: nil}, ${55: in55: nil}, ${56: in56: nil}, ${57: in57: nil}, ${58: in58: nil}, ${59: in59: nil}, ${60: in60: nil}, ${61: in61: nil}, ${62: in62: nil}, ${63: in63: nil}, ${64: in64: nil}, ${65: on: 0.0}, ${66: crossfade: 1.0}, ${67: gain: 0.0}, ${68: azimuth: 0.0}, ${69: elevation: 0.0}, ${70: timer_manual: 0.0}, ${71: focus: 0.0})
endsnippet

snippet HOABeamDirac2HOA7.kr
HOABeamDirac2HOA7.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: in37: nil}, ${38: in38: nil}, ${39: in39: nil}, ${40: in40: nil}, ${41: in41: nil}, ${42: in42: nil}, ${43: in43: nil}, ${44: in44: nil}, ${45: in45: nil}, ${46: in46: nil}, ${47: in47: nil}, ${48: in48: nil}, ${49: in49: nil}, ${50: in50: nil}, ${51: in51: nil}, ${52: in52: nil}, ${53: in53: nil}, ${54: in54: nil}, ${55: in55: nil}, ${56: in56: nil}, ${57: in57: nil}, ${58: in58: nil}, ${59: in59: nil}, ${60: in60: nil}, ${61: in61: nil}, ${62: in62: nil}, ${63: in63: nil}, ${64: in64: nil}, ${65: on: 0.0}, ${66: crossfade: 1.0}, ${67: gain: 0.0}, ${68: azimuth: 0.0}, ${69: elevation: 0.0}, ${70: timer_manual: 0.0}, ${71: focus: 0.0})
endsnippet

snippet HOABeamDirac2HOA8.ar
HOABeamDirac2HOA8.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: in37: nil}, ${38: in38: nil}, ${39: in39: nil}, ${40: in40: nil}, ${41: in41: nil}, ${42: in42: nil}, ${43: in43: nil}, ${44: in44: nil}, ${45: in45: nil}, ${46: in46: nil}, ${47: in47: nil}, ${48: in48: nil}, ${49: in49: nil}, ${50: in50: nil}, ${51: in51: nil}, ${52: in52: nil}, ${53: in53: nil}, ${54: in54: nil}, ${55: in55: nil}, ${56: in56: nil}, ${57: in57: nil}, ${58: in58: nil}, ${59: in59: nil}, ${60: in60: nil}, ${61: in61: nil}, ${62: in62: nil}, ${63: in63: nil}, ${64: in64: nil}, ${65: in65: nil}, ${66: in66: nil}, ${67: in67: nil}, ${68: in68: nil}, ${69: in69: nil}, ${70: in70: nil}, ${71: in71: nil}, ${72: in72: nil}, ${73: in73: nil}, ${74: in74: nil}, ${75: in75: nil}, ${76: in76: nil}, ${77: in77: nil}, ${78: in78: nil}, ${79: in79: nil}, ${80: in80: nil}, ${81: in81: nil}, ${82: on: 0.0}, ${83: crossfade: 1.0}, ${84: gain: 0.0}, ${85: azimuth: 0.0}, ${86: elevation: 0.0}, ${87: timer_manual: 0.0}, ${88: focus: 0.0})
endsnippet

snippet HOABeamDirac2HOA8.kr
HOABeamDirac2HOA8.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: in37: nil}, ${38: in38: nil}, ${39: in39: nil}, ${40: in40: nil}, ${41: in41: nil}, ${42: in42: nil}, ${43: in43: nil}, ${44: in44: nil}, ${45: in45: nil}, ${46: in46: nil}, ${47: in47: nil}, ${48: in48: nil}, ${49: in49: nil}, ${50: in50: nil}, ${51: in51: nil}, ${52: in52: nil}, ${53: in53: nil}, ${54: in54: nil}, ${55: in55: nil}, ${56: in56: nil}, ${57: in57: nil}, ${58: in58: nil}, ${59: in59: nil}, ${60: in60: nil}, ${61: in61: nil}, ${62: in62: nil}, ${63: in63: nil}, ${64: in64: nil}, ${65: in65: nil}, ${66: in66: nil}, ${67: in67: nil}, ${68: in68: nil}, ${69: in69: nil}, ${70: in70: nil}, ${71: in71: nil}, ${72: in72: nil}, ${73: in73: nil}, ${74: in74: nil}, ${75: in75: nil}, ${76: in76: nil}, ${77: in77: nil}, ${78: in78: nil}, ${79: in79: nil}, ${80: in80: nil}, ${81: in81: nil}, ${82: on: 0.0}, ${83: crossfade: 1.0}, ${84: gain: 0.0}, ${85: azimuth: 0.0}, ${86: elevation: 0.0}, ${87: timer_manual: 0.0}, ${88: focus: 0.0})
endsnippet

snippet HOABeamDirac2HOA9.ar
HOABeamDirac2HOA9.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: in37: nil}, ${38: in38: nil}, ${39: in39: nil}, ${40: in40: nil}, ${41: in41: nil}, ${42: in42: nil}, ${43: in43: nil}, ${44: in44: nil}, ${45: in45: nil}, ${46: in46: nil}, ${47: in47: nil}, ${48: in48: nil}, ${49: in49: nil}, ${50: in50: nil}, ${51: in51: nil}, ${52: in52: nil}, ${53: in53: nil}, ${54: in54: nil}, ${55: in55: nil}, ${56: in56: nil}, ${57: in57: nil}, ${58: in58: nil}, ${59: in59: nil}, ${60: in60: nil}, ${61: in61: nil}, ${62: in62: nil}, ${63: in63: nil}, ${64: in64: nil}, ${65: in65: nil}, ${66: in66: nil}, ${67: in67: nil}, ${68: in68: nil}, ${69: in69: nil}, ${70: in70: nil}, ${71: in71: nil}, ${72: in72: nil}, ${73: in73: nil}, ${74: in74: nil}, ${75: in75: nil}, ${76: in76: nil}, ${77: in77: nil}, ${78: in78: nil}, ${79: in79: nil}, ${80: in80: nil}, ${81: in81: nil}, ${82: in82: nil}, ${83: in83: nil}, ${84: in84: nil}, ${85: in85: nil}, ${86: in86: nil}, ${87: in87: nil}, ${88: in88: nil}, ${89: in89: nil}, ${90: in90: nil}, ${91: in91: nil}, ${92: in92: nil}, ${93: in93: nil}, ${94: in94: nil}, ${95: in95: nil}, ${96: in96: nil}, ${97: in97: nil}, ${98: in98: nil}, ${99: in99: nil}, ${100: in100: nil}, ${101: on: 0.0}, ${102: crossfade: 1.0}, ${103: gain: 0.0}, ${104: azimuth: 0.0}, ${105: elevation: 0.0}, ${106: timer_manual: 0.0}, ${107: focus: 0.0})
endsnippet

snippet HOABeamDirac2HOA9.kr
HOABeamDirac2HOA9.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: in37: nil}, ${38: in38: nil}, ${39: in39: nil}, ${40: in40: nil}, ${41: in41: nil}, ${42: in42: nil}, ${43: in43: nil}, ${44: in44: nil}, ${45: in45: nil}, ${46: in46: nil}, ${47: in47: nil}, ${48: in48: nil}, ${49: in49: nil}, ${50: in50: nil}, ${51: in51: nil}, ${52: in52: nil}, ${53: in53: nil}, ${54: in54: nil}, ${55: in55: nil}, ${56: in56: nil}, ${57: in57: nil}, ${58: in58: nil}, ${59: in59: nil}, ${60: in60: nil}, ${61: in61: nil}, ${62: in62: nil}, ${63: in63: nil}, ${64: in64: nil}, ${65: in65: nil}, ${66: in66: nil}, ${67: in67: nil}, ${68: in68: nil}, ${69: in69: nil}, ${70: in70: nil}, ${71: in71: nil}, ${72: in72: nil}, ${73: in73: nil}, ${74: in74: nil}, ${75: in75: nil}, ${76: in76: nil}, ${77: in77: nil}, ${78: in78: nil}, ${79: in79: nil}, ${80: in80: nil}, ${81: in81: nil}, ${82: in82: nil}, ${83: in83: nil}, ${84: in84: nil}, ${85: in85: nil}, ${86: in86: nil}, ${87: in87: nil}, ${88: in88: nil}, ${89: in89: nil}, ${90: in90: nil}, ${91: in91: nil}, ${92: in92: nil}, ${93: in93: nil}, ${94: in94: nil}, ${95: in95: nil}, ${96: in96: nil}, ${97: in97: nil}, ${98: in98: nil}, ${99: in99: nil}, ${100: in100: nil}, ${101: on: 0.0}, ${102: crossfade: 1.0}, ${103: gain: 0.0}, ${104: azimuth: 0.0}, ${105: elevation: 0.0}, ${106: timer_manual: 0.0}, ${107: focus: 0.0})
endsnippet

snippet HOABeamHCardio2HOA1.ar
HOABeamHCardio2HOA1.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: azimuth: 0.0}, ${6: elevation: 0.0}, ${7: int_float: 0.0}, ${8: order: 0.0})
endsnippet

snippet HOABeamHCardio2HOA1.kr
HOABeamHCardio2HOA1.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: azimuth: 0.0}, ${6: elevation: 0.0}, ${7: int_float: 0.0}, ${8: order: 0.0})
endsnippet

snippet HOABeamHCardio2HOA2.ar
HOABeamHCardio2HOA2.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: azimuth: 0.0}, ${11: elevation: 0.0}, ${12: int_float: 0.0}, ${13: order: 0.0})
endsnippet

snippet HOABeamHCardio2HOA2.kr
HOABeamHCardio2HOA2.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: azimuth: 0.0}, ${11: elevation: 0.0}, ${12: int_float: 0.0}, ${13: order: 0.0})
endsnippet

snippet HOABeamHCardio2HOA3.ar
HOABeamHCardio2HOA3.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: azimuth: 0.0}, ${18: elevation: 0.0}, ${19: int_float: 0.0}, ${20: order: 0.0})
endsnippet

snippet HOABeamHCardio2HOA3.kr
HOABeamHCardio2HOA3.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: azimuth: 0.0}, ${18: elevation: 0.0}, ${19: int_float: 0.0}, ${20: order: 0.0})
endsnippet

snippet HOABeamHCardio2Mono1.ar
HOABeamHCardio2Mono1.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: int_float: 0.0}, ${6: order: 0.0}, ${7: output_gain: 0.0}, ${8: azimuth: 0.0}, ${9: elevation: 0.0})
endsnippet

snippet HOABeamHCardio2Mono1.kr
HOABeamHCardio2Mono1.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: int_float: 0.0}, ${6: order: 0.0}, ${7: output_gain: 0.0}, ${8: azimuth: 0.0}, ${9: elevation: 0.0})
endsnippet

snippet HOABeamHCardio2Mono2.ar
HOABeamHCardio2Mono2.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: int_float: 0.0}, ${11: order: 0.0}, ${12: output_gain: 0.0}, ${13: azimuth: 0.0}, ${14: elevation: 0.0})
endsnippet

snippet HOABeamHCardio2Mono2.kr
HOABeamHCardio2Mono2.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: int_float: 0.0}, ${11: order: 0.0}, ${12: output_gain: 0.0}, ${13: azimuth: 0.0}, ${14: elevation: 0.0})
endsnippet

snippet HOABeamHCardio2Mono3.ar
HOABeamHCardio2Mono3.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: int_float: 0.0}, ${18: order: 0.0}, ${19: output_gain: 0.0}, ${20: azimuth: 0.0}, ${21: elevation: 0.0})
endsnippet

snippet HOABeamHCardio2Mono3.kr
HOABeamHCardio2Mono3.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: int_float: 0.0}, ${18: order: 0.0}, ${19: output_gain: 0.0}, ${20: azimuth: 0.0}, ${21: elevation: 0.0})
endsnippet

snippet HOAConverterAcnN3d2AcnSn3d1.ar
HOAConverterAcnN3d2AcnSn3d1.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil})
endsnippet

snippet HOAConverterAcnN3d2AcnSn3d1.kr
HOAConverterAcnN3d2AcnSn3d1.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil})
endsnippet

snippet HOAConverterAcnN3d2AcnSn3d10.ar
HOAConverterAcnN3d2AcnSn3d10.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: in37: nil}, ${38: in38: nil}, ${39: in39: nil}, ${40: in40: nil}, ${41: in41: nil}, ${42: in42: nil}, ${43: in43: nil}, ${44: in44: nil}, ${45: in45: nil}, ${46: in46: nil}, ${47: in47: nil}, ${48: in48: nil}, ${49: in49: nil}, ${50: in50: nil}, ${51: in51: nil}, ${52: in52: nil}, ${53: in53: nil}, ${54: in54: nil}, ${55: in55: nil}, ${56: in56: nil}, ${57: in57: nil}, ${58: in58: nil}, ${59: in59: nil}, ${60: in60: nil}, ${61: in61: nil}, ${62: in62: nil}, ${63: in63: nil}, ${64: in64: nil}, ${65: in65: nil}, ${66: in66: nil}, ${67: in67: nil}, ${68: in68: nil}, ${69: in69: nil}, ${70: in70: nil}, ${71: in71: nil}, ${72: in72: nil}, ${73: in73: nil}, ${74: in74: nil}, ${75: in75: nil}, ${76: in76: nil}, ${77: in77: nil}, ${78: in78: nil}, ${79: in79: nil}, ${80: in80: nil}, ${81: in81: nil}, ${82: in82: nil}, ${83: in83: nil}, ${84: in84: nil}, ${85: in85: nil}, ${86: in86: nil}, ${87: in87: nil}, ${88: in88: nil}, ${89: in89: nil}, ${90: in90: nil}, ${91: in91: nil}, ${92: in92: nil}, ${93: in93: nil}, ${94: in94: nil}, ${95: in95: nil}, ${96: in96: nil}, ${97: in97: nil}, ${98: in98: nil}, ${99: in99: nil}, ${100: in100: nil}, ${101: in101: nil}, ${102: in102: nil}, ${103: in103: nil}, ${104: in104: nil}, ${105: in105: nil}, ${106: in106: nil}, ${107: in107: nil}, ${108: in108: nil}, ${109: in109: nil}, ${110: in110: nil}, ${111: in111: nil}, ${112: in112: nil}, ${113: in113: nil}, ${114: in114: nil}, ${115: in115: nil}, ${116: in116: nil}, ${117: in117: nil}, ${118: in118: nil}, ${119: in119: nil}, ${120: in120: nil}, ${121: in121: nil})
endsnippet

snippet HOAConverterAcnN3d2AcnSn3d10.kr
HOAConverterAcnN3d2AcnSn3d10.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: in37: nil}, ${38: in38: nil}, ${39: in39: nil}, ${40: in40: nil}, ${41: in41: nil}, ${42: in42: nil}, ${43: in43: nil}, ${44: in44: nil}, ${45: in45: nil}, ${46: in46: nil}, ${47: in47: nil}, ${48: in48: nil}, ${49: in49: nil}, ${50: in50: nil}, ${51: in51: nil}, ${52: in52: nil}, ${53: in53: nil}, ${54: in54: nil}, ${55: in55: nil}, ${56: in56: nil}, ${57: in57: nil}, ${58: in58: nil}, ${59: in59: nil}, ${60: in60: nil}, ${61: in61: nil}, ${62: in62: nil}, ${63: in63: nil}, ${64: in64: nil}, ${65: in65: nil}, ${66: in66: nil}, ${67: in67: nil}, ${68: in68: nil}, ${69: in69: nil}, ${70: in70: nil}, ${71: in71: nil}, ${72: in72: nil}, ${73: in73: nil}, ${74: in74: nil}, ${75: in75: nil}, ${76: in76: nil}, ${77: in77: nil}, ${78: in78: nil}, ${79: in79: nil}, ${80: in80: nil}, ${81: in81: nil}, ${82: in82: nil}, ${83: in83: nil}, ${84: in84: nil}, ${85: in85: nil}, ${86: in86: nil}, ${87: in87: nil}, ${88: in88: nil}, ${89: in89: nil}, ${90: in90: nil}, ${91: in91: nil}, ${92: in92: nil}, ${93: in93: nil}, ${94: in94: nil}, ${95: in95: nil}, ${96: in96: nil}, ${97: in97: nil}, ${98: in98: nil}, ${99: in99: nil}, ${100: in100: nil}, ${101: in101: nil}, ${102: in102: nil}, ${103: in103: nil}, ${104: in104: nil}, ${105: in105: nil}, ${106: in106: nil}, ${107: in107: nil}, ${108: in108: nil}, ${109: in109: nil}, ${110: in110: nil}, ${111: in111: nil}, ${112: in112: nil}, ${113: in113: nil}, ${114: in114: nil}, ${115: in115: nil}, ${116: in116: nil}, ${117: in117: nil}, ${118: in118: nil}, ${119: in119: nil}, ${120: in120: nil}, ${121: in121: nil})
endsnippet

snippet HOAConverterAcnN3d2AcnSn3d2.ar
HOAConverterAcnN3d2AcnSn3d2.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil})
endsnippet

snippet HOAConverterAcnN3d2AcnSn3d2.kr
HOAConverterAcnN3d2AcnSn3d2.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil})
endsnippet

snippet HOAConverterAcnN3d2AcnSn3d3.ar
HOAConverterAcnN3d2AcnSn3d3.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil})
endsnippet

snippet HOAConverterAcnN3d2AcnSn3d3.kr
HOAConverterAcnN3d2AcnSn3d3.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil})
endsnippet

snippet HOAConverterAcnN3d2AcnSn3d4.ar
HOAConverterAcnN3d2AcnSn3d4.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil})
endsnippet

snippet HOAConverterAcnN3d2AcnSn3d4.kr
HOAConverterAcnN3d2AcnSn3d4.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil})
endsnippet

snippet HOAConverterAcnN3d2AcnSn3d5.ar
HOAConverterAcnN3d2AcnSn3d5.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil})
endsnippet

snippet HOAConverterAcnN3d2AcnSn3d5.kr
HOAConverterAcnN3d2AcnSn3d5.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil})
endsnippet

snippet HOAConverterAcnN3d2AcnSn3d6.ar
HOAConverterAcnN3d2AcnSn3d6.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: in37: nil}, ${38: in38: nil}, ${39: in39: nil}, ${40: in40: nil}, ${41: in41: nil}, ${42: in42: nil}, ${43: in43: nil}, ${44: in44: nil}, ${45: in45: nil}, ${46: in46: nil}, ${47: in47: nil}, ${48: in48: nil}, ${49: in49: nil})
endsnippet

snippet HOAConverterAcnN3d2AcnSn3d6.kr
HOAConverterAcnN3d2AcnSn3d6.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: in37: nil}, ${38: in38: nil}, ${39: in39: nil}, ${40: in40: nil}, ${41: in41: nil}, ${42: in42: nil}, ${43: in43: nil}, ${44: in44: nil}, ${45: in45: nil}, ${46: in46: nil}, ${47: in47: nil}, ${48: in48: nil}, ${49: in49: nil})
endsnippet

snippet HOAConverterAcnN3d2AcnSn3d7.ar
HOAConverterAcnN3d2AcnSn3d7.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: in37: nil}, ${38: in38: nil}, ${39: in39: nil}, ${40: in40: nil}, ${41: in41: nil}, ${42: in42: nil}, ${43: in43: nil}, ${44: in44: nil}, ${45: in45: nil}, ${46: in46: nil}, ${47: in47: nil}, ${48: in48: nil}, ${49: in49: nil}, ${50: in50: nil}, ${51: in51: nil}, ${52: in52: nil}, ${53: in53: nil}, ${54: in54: nil}, ${55: in55: nil}, ${56: in56: nil}, ${57: in57: nil}, ${58: in58: nil}, ${59: in59: nil}, ${60: in60: nil}, ${61: in61: nil}, ${62: in62: nil}, ${63: in63: nil}, ${64: in64: nil})
endsnippet

snippet HOAConverterAcnN3d2AcnSn3d7.kr
HOAConverterAcnN3d2AcnSn3d7.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: in37: nil}, ${38: in38: nil}, ${39: in39: nil}, ${40: in40: nil}, ${41: in41: nil}, ${42: in42: nil}, ${43: in43: nil}, ${44: in44: nil}, ${45: in45: nil}, ${46: in46: nil}, ${47: in47: nil}, ${48: in48: nil}, ${49: in49: nil}, ${50: in50: nil}, ${51: in51: nil}, ${52: in52: nil}, ${53: in53: nil}, ${54: in54: nil}, ${55: in55: nil}, ${56: in56: nil}, ${57: in57: nil}, ${58: in58: nil}, ${59: in59: nil}, ${60: in60: nil}, ${61: in61: nil}, ${62: in62: nil}, ${63: in63: nil}, ${64: in64: nil})
endsnippet

snippet HOAConverterAcnN3d2AcnSn3d8.ar
HOAConverterAcnN3d2AcnSn3d8.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: in37: nil}, ${38: in38: nil}, ${39: in39: nil}, ${40: in40: nil}, ${41: in41: nil}, ${42: in42: nil}, ${43: in43: nil}, ${44: in44: nil}, ${45: in45: nil}, ${46: in46: nil}, ${47: in47: nil}, ${48: in48: nil}, ${49: in49: nil}, ${50: in50: nil}, ${51: in51: nil}, ${52: in52: nil}, ${53: in53: nil}, ${54: in54: nil}, ${55: in55: nil}, ${56: in56: nil}, ${57: in57: nil}, ${58: in58: nil}, ${59: in59: nil}, ${60: in60: nil}, ${61: in61: nil}, ${62: in62: nil}, ${63: in63: nil}, ${64: in64: nil}, ${65: in65: nil}, ${66: in66: nil}, ${67: in67: nil}, ${68: in68: nil}, ${69: in69: nil}, ${70: in70: nil}, ${71: in71: nil}, ${72: in72: nil}, ${73: in73: nil}, ${74: in74: nil}, ${75: in75: nil}, ${76: in76: nil}, ${77: in77: nil}, ${78: in78: nil}, ${79: in79: nil}, ${80: in80: nil}, ${81: in81: nil})
endsnippet

snippet HOAConverterAcnN3d2AcnSn3d8.kr
HOAConverterAcnN3d2AcnSn3d8.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: in37: nil}, ${38: in38: nil}, ${39: in39: nil}, ${40: in40: nil}, ${41: in41: nil}, ${42: in42: nil}, ${43: in43: nil}, ${44: in44: nil}, ${45: in45: nil}, ${46: in46: nil}, ${47: in47: nil}, ${48: in48: nil}, ${49: in49: nil}, ${50: in50: nil}, ${51: in51: nil}, ${52: in52: nil}, ${53: in53: nil}, ${54: in54: nil}, ${55: in55: nil}, ${56: in56: nil}, ${57: in57: nil}, ${58: in58: nil}, ${59: in59: nil}, ${60: in60: nil}, ${61: in61: nil}, ${62: in62: nil}, ${63: in63: nil}, ${64: in64: nil}, ${65: in65: nil}, ${66: in66: nil}, ${67: in67: nil}, ${68: in68: nil}, ${69: in69: nil}, ${70: in70: nil}, ${71: in71: nil}, ${72: in72: nil}, ${73: in73: nil}, ${74: in74: nil}, ${75: in75: nil}, ${76: in76: nil}, ${77: in77: nil}, ${78: in78: nil}, ${79: in79: nil}, ${80: in80: nil}, ${81: in81: nil})
endsnippet

snippet HOAConverterAcnN3d2AcnSn3d9.ar
HOAConverterAcnN3d2AcnSn3d9.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: in37: nil}, ${38: in38: nil}, ${39: in39: nil}, ${40: in40: nil}, ${41: in41: nil}, ${42: in42: nil}, ${43: in43: nil}, ${44: in44: nil}, ${45: in45: nil}, ${46: in46: nil}, ${47: in47: nil}, ${48: in48: nil}, ${49: in49: nil}, ${50: in50: nil}, ${51: in51: nil}, ${52: in52: nil}, ${53: in53: nil}, ${54: in54: nil}, ${55: in55: nil}, ${56: in56: nil}, ${57: in57: nil}, ${58: in58: nil}, ${59: in59: nil}, ${60: in60: nil}, ${61: in61: nil}, ${62: in62: nil}, ${63: in63: nil}, ${64: in64: nil}, ${65: in65: nil}, ${66: in66: nil}, ${67: in67: nil}, ${68: in68: nil}, ${69: in69: nil}, ${70: in70: nil}, ${71: in71: nil}, ${72: in72: nil}, ${73: in73: nil}, ${74: in74: nil}, ${75: in75: nil}, ${76: in76: nil}, ${77: in77: nil}, ${78: in78: nil}, ${79: in79: nil}, ${80: in80: nil}, ${81: in81: nil}, ${82: in82: nil}, ${83: in83: nil}, ${84: in84: nil}, ${85: in85: nil}, ${86: in86: nil}, ${87: in87: nil}, ${88: in88: nil}, ${89: in89: nil}, ${90: in90: nil}, ${91: in91: nil}, ${92: in92: nil}, ${93: in93: nil}, ${94: in94: nil}, ${95: in95: nil}, ${96: in96: nil}, ${97: in97: nil}, ${98: in98: nil}, ${99: in99: nil}, ${100: in100: nil})
endsnippet

snippet HOAConverterAcnN3d2AcnSn3d9.kr
HOAConverterAcnN3d2AcnSn3d9.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: in37: nil}, ${38: in38: nil}, ${39: in39: nil}, ${40: in40: nil}, ${41: in41: nil}, ${42: in42: nil}, ${43: in43: nil}, ${44: in44: nil}, ${45: in45: nil}, ${46: in46: nil}, ${47: in47: nil}, ${48: in48: nil}, ${49: in49: nil}, ${50: in50: nil}, ${51: in51: nil}, ${52: in52: nil}, ${53: in53: nil}, ${54: in54: nil}, ${55: in55: nil}, ${56: in56: nil}, ${57: in57: nil}, ${58: in58: nil}, ${59: in59: nil}, ${60: in60: nil}, ${61: in61: nil}, ${62: in62: nil}, ${63: in63: nil}, ${64: in64: nil}, ${65: in65: nil}, ${66: in66: nil}, ${67: in67: nil}, ${68: in68: nil}, ${69: in69: nil}, ${70: in70: nil}, ${71: in71: nil}, ${72: in72: nil}, ${73: in73: nil}, ${74: in74: nil}, ${75: in75: nil}, ${76: in76: nil}, ${77: in77: nil}, ${78: in78: nil}, ${79: in79: nil}, ${80: in80: nil}, ${81: in81: nil}, ${82: in82: nil}, ${83: in83: nil}, ${84: in84: nil}, ${85: in85: nil}, ${86: in86: nil}, ${87: in87: nil}, ${88: in88: nil}, ${89: in89: nil}, ${90: in90: nil}, ${91: in91: nil}, ${92: in92: nil}, ${93: in93: nil}, ${94: in94: nil}, ${95: in95: nil}, ${96: in96: nil}, ${97: in97: nil}, ${98: in98: nil}, ${99: in99: nil}, ${100: in100: nil})
endsnippet

snippet HOAConverterAcnN3d2FuMa1.ar
HOAConverterAcnN3d2FuMa1.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil})
endsnippet

snippet HOAConverterAcnN3d2FuMa1.kr
HOAConverterAcnN3d2FuMa1.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil})
endsnippet

snippet HOAConverterAcnN3d2FuMa2.ar
HOAConverterAcnN3d2FuMa2.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil})
endsnippet

snippet HOAConverterAcnN3d2FuMa2.kr
HOAConverterAcnN3d2FuMa2.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil})
endsnippet

snippet HOAConverterAcnN3d2FuMa3.ar
HOAConverterAcnN3d2FuMa3.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil})
endsnippet

snippet HOAConverterAcnN3d2FuMa3.kr
HOAConverterAcnN3d2FuMa3.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil})
endsnippet

snippet HOAConverterAcnSn3d2FuMa1.ar
HOAConverterAcnSn3d2FuMa1.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil})
endsnippet

snippet HOAConverterAcnSn3d2FuMa1.kr
HOAConverterAcnSn3d2FuMa1.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil})
endsnippet

snippet HOAConverterAcnSn3d2FuMa2.ar
HOAConverterAcnSn3d2FuMa2.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil})
endsnippet

snippet HOAConverterAcnSn3d2FuMa2.kr
HOAConverterAcnSn3d2FuMa2.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil})
endsnippet

snippet HOAConverterAcnSn3d2FuMa3.ar
HOAConverterAcnSn3d2FuMa3.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil})
endsnippet

snippet HOAConverterAcnSn3d2FuMa3.kr
HOAConverterAcnSn3d2FuMa3.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil})
endsnippet

snippet HOAConverterFuma2AcnN3d1.ar
HOAConverterFuma2AcnN3d1.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil})
endsnippet

snippet HOAConverterFuma2AcnN3d1.kr
HOAConverterFuma2AcnN3d1.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil})
endsnippet

snippet HOAConverterFuma2AcnN3d2.ar
HOAConverterFuma2AcnN3d2.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil})
endsnippet

snippet HOAConverterFuma2AcnN3d2.kr
HOAConverterFuma2AcnN3d2.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil})
endsnippet

snippet HOAConverterFuma2AcnN3d3.ar
HOAConverterFuma2AcnN3d3.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil})
endsnippet

snippet HOAConverterFuma2AcnN3d3.kr
HOAConverterFuma2AcnN3d3.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil})
endsnippet

snippet HOAConverterFuma2AcnSn3d1.ar
HOAConverterFuma2AcnSn3d1.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil})
endsnippet

snippet HOAConverterFuma2AcnSn3d1.kr
HOAConverterFuma2AcnSn3d1.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil})
endsnippet

snippet HOAConverterFuma2AcnSn3d2.ar
HOAConverterFuma2AcnSn3d2.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil})
endsnippet

snippet HOAConverterFuma2AcnSn3d2.kr
HOAConverterFuma2AcnSn3d2.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil})
endsnippet

snippet HOAConverterFuma2AcnSn3d3.ar
HOAConverterFuma2AcnSn3d3.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil})
endsnippet

snippet HOAConverterFuma2AcnSn3d3.kr
HOAConverterFuma2AcnSn3d3.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil})
endsnippet

snippet HOADecBinaural1.ar
HOADecBinaural1.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: inputs_gain: 0.0}, ${6: outputs_gain: 0.0})
endsnippet

snippet HOADecBinaural1.kr
HOADecBinaural1.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: inputs_gain: 0.0}, ${6: outputs_gain: 0.0})
endsnippet

snippet HOADecBinaural2.ar
HOADecBinaural2.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: inputs_gain: 0.0}, ${11: outputs_gain: 0.0})
endsnippet

snippet HOADecBinaural2.kr
HOADecBinaural2.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: inputs_gain: 0.0}, ${11: outputs_gain: 0.0})
endsnippet

snippet HOADecLebedev061.ar
HOADecLebedev061.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: inputs_gain: 0.0}, ${6: outputs_gain: 0.0}, ${7: yes: 0.0}, ${8: speakers_radius: 1.07})
endsnippet

snippet HOADecLebedev061.kr
HOADecLebedev061.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: inputs_gain: 0.0}, ${6: outputs_gain: 0.0}, ${7: yes: 0.0}, ${8: speakers_radius: 1.07})
endsnippet

snippet HOADecLebedev261.ar
HOADecLebedev261.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: inputs_gain: 0.0}, ${6: outputs_gain: 0.0}, ${7: yes: 0.0}, ${8: speakers_radius: 1.07})
endsnippet

snippet HOADecLebedev261.kr
HOADecLebedev261.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: inputs_gain: 0.0}, ${6: outputs_gain: 0.0}, ${7: yes: 0.0}, ${8: speakers_radius: 1.07})
endsnippet

snippet HOADecLebedev262.ar
HOADecLebedev262.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: inputs_gain: 0.0}, ${11: outputs_gain: 0.0}, ${12: yes: 0.0}, ${13: speakers_radius: 1.07})
endsnippet

snippet HOADecLebedev262.kr
HOADecLebedev262.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: inputs_gain: 0.0}, ${11: outputs_gain: 0.0}, ${12: yes: 0.0}, ${13: speakers_radius: 1.07})
endsnippet

snippet HOADecLebedev263.ar
HOADecLebedev263.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: inputs_gain: 0.0}, ${18: outputs_gain: 0.0}, ${19: yes: 0.0}, ${20: speakers_radius: 1.07})
endsnippet

snippet HOADecLebedev263.kr
HOADecLebedev263.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: inputs_gain: 0.0}, ${18: outputs_gain: 0.0}, ${19: yes: 0.0}, ${20: speakers_radius: 1.07})
endsnippet

snippet HOADecLebedev501.ar
HOADecLebedev501.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: inputs_gain: 0.0}, ${6: outputs_gain: 0.0}, ${7: yes: 0.0}, ${8: speakers_radius: 1.07})
endsnippet

snippet HOADecLebedev501.kr
HOADecLebedev501.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: inputs_gain: 0.0}, ${6: outputs_gain: 0.0}, ${7: yes: 0.0}, ${8: speakers_radius: 1.07})
endsnippet

snippet HOADecLebedev502.ar
HOADecLebedev502.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: inputs_gain: 0.0}, ${11: outputs_gain: 0.0}, ${12: yes: 0.0}, ${13: speakers_radius: 1.07})
endsnippet

snippet HOADecLebedev502.kr
HOADecLebedev502.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: inputs_gain: 0.0}, ${11: outputs_gain: 0.0}, ${12: yes: 0.0}, ${13: speakers_radius: 1.07})
endsnippet

snippet HOADecLebedev503.ar
HOADecLebedev503.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: inputs_gain: 0.0}, ${18: outputs_gain: 0.0}, ${19: yes: 0.0}, ${20: speakers_radius: 1.07})
endsnippet

snippet HOADecLebedev503.kr
HOADecLebedev503.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: inputs_gain: 0.0}, ${18: outputs_gain: 0.0}, ${19: yes: 0.0}, ${20: speakers_radius: 1.07})
endsnippet

snippet HOADecLebedev504.ar
HOADecLebedev504.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: inputs_gain: 0.0}, ${27: outputs_gain: 0.0}, ${28: yes: 0.0}, ${29: speakers_radius: 1.07})
endsnippet

snippet HOADecLebedev504.kr
HOADecLebedev504.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: inputs_gain: 0.0}, ${27: outputs_gain: 0.0}, ${28: yes: 0.0}, ${29: speakers_radius: 1.07})
endsnippet

snippet HOADecLebedev505.ar
HOADecLebedev505.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: inputs_gain: 0.0}, ${38: outputs_gain: 0.0}, ${39: yes: 0.0}, ${40: speakers_radius: 1.07})
endsnippet

snippet HOADecLebedev505.kr
HOADecLebedev505.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: inputs_gain: 0.0}, ${38: outputs_gain: 0.0}, ${39: yes: 0.0}, ${40: speakers_radius: 1.07})
endsnippet

snippet HOAEncEigenMike1.ar
HOAEncEigenMike1.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: gain: 0.0})
endsnippet

snippet HOAEncEigenMike1.kr
HOAEncEigenMike1.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: gain: 0.0})
endsnippet

snippet HOAEncEigenMike2.ar
HOAEncEigenMike2.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: gain: 0.0})
endsnippet

snippet HOAEncEigenMike2.kr
HOAEncEigenMike2.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: gain: 0.0})
endsnippet

snippet HOAEncEigenMike3.ar
HOAEncEigenMike3.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: gain: 0.0})
endsnippet

snippet HOAEncEigenMike3.kr
HOAEncEigenMike3.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: gain: 0.0})
endsnippet

snippet HOAEncEigenMike4.ar
HOAEncEigenMike4.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: gain: 0.0})
endsnippet

snippet HOAEncEigenMike4.kr
HOAEncEigenMike4.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: gain: 0.0})
endsnippet

snippet HOAEncLebedev501.ar
HOAEncLebedev501.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: in37: nil}, ${38: in38: nil}, ${39: in39: nil}, ${40: in40: nil}, ${41: in41: nil}, ${42: in42: nil}, ${43: in43: nil}, ${44: in44: nil}, ${45: in45: nil}, ${46: in46: nil}, ${47: in47: nil}, ${48: in48: nil}, ${49: in49: nil}, ${50: in50: nil}, ${51: gain: 0.0})
endsnippet

snippet HOAEncLebedev501.kr
HOAEncLebedev501.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: in37: nil}, ${38: in38: nil}, ${39: in39: nil}, ${40: in40: nil}, ${41: in41: nil}, ${42: in42: nil}, ${43: in43: nil}, ${44: in44: nil}, ${45: in45: nil}, ${46: in46: nil}, ${47: in47: nil}, ${48: in48: nil}, ${49: in49: nil}, ${50: in50: nil}, ${51: gain: 0.0})
endsnippet

snippet HOAEncLebedev502.ar
HOAEncLebedev502.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: in37: nil}, ${38: in38: nil}, ${39: in39: nil}, ${40: in40: nil}, ${41: in41: nil}, ${42: in42: nil}, ${43: in43: nil}, ${44: in44: nil}, ${45: in45: nil}, ${46: in46: nil}, ${47: in47: nil}, ${48: in48: nil}, ${49: in49: nil}, ${50: in50: nil}, ${51: gain: 0.0})
endsnippet

snippet HOAEncLebedev502.kr
HOAEncLebedev502.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: in37: nil}, ${38: in38: nil}, ${39: in39: nil}, ${40: in40: nil}, ${41: in41: nil}, ${42: in42: nil}, ${43: in43: nil}, ${44: in44: nil}, ${45: in45: nil}, ${46: in46: nil}, ${47: in47: nil}, ${48: in48: nil}, ${49: in49: nil}, ${50: in50: nil}, ${51: gain: 0.0})
endsnippet

snippet HOAEncLebedev503.ar
HOAEncLebedev503.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: in37: nil}, ${38: in38: nil}, ${39: in39: nil}, ${40: in40: nil}, ${41: in41: nil}, ${42: in42: nil}, ${43: in43: nil}, ${44: in44: nil}, ${45: in45: nil}, ${46: in46: nil}, ${47: in47: nil}, ${48: in48: nil}, ${49: in49: nil}, ${50: in50: nil}, ${51: gain: 0.0})
endsnippet

snippet HOAEncLebedev503.kr
HOAEncLebedev503.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: in37: nil}, ${38: in38: nil}, ${39: in39: nil}, ${40: in40: nil}, ${41: in41: nil}, ${42: in42: nil}, ${43: in43: nil}, ${44: in44: nil}, ${45: in45: nil}, ${46: in46: nil}, ${47: in47: nil}, ${48: in48: nil}, ${49: in49: nil}, ${50: in50: nil}, ${51: gain: 0.0})
endsnippet

snippet HOAEncLebedev504.ar
HOAEncLebedev504.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: in37: nil}, ${38: in38: nil}, ${39: in39: nil}, ${40: in40: nil}, ${41: in41: nil}, ${42: in42: nil}, ${43: in43: nil}, ${44: in44: nil}, ${45: in45: nil}, ${46: in46: nil}, ${47: in47: nil}, ${48: in48: nil}, ${49: in49: nil}, ${50: in50: nil}, ${51: gain: 0.0})
endsnippet

snippet HOAEncLebedev504.kr
HOAEncLebedev504.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: in37: nil}, ${38: in38: nil}, ${39: in39: nil}, ${40: in40: nil}, ${41: in41: nil}, ${42: in42: nil}, ${43: in43: nil}, ${44: in44: nil}, ${45: in45: nil}, ${46: in46: nil}, ${47: in47: nil}, ${48: in48: nil}, ${49: in49: nil}, ${50: in50: nil}, ${51: gain: 0.0})
endsnippet

snippet HOAEncLebedev505.ar
HOAEncLebedev505.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: in37: nil}, ${38: in38: nil}, ${39: in39: nil}, ${40: in40: nil}, ${41: in41: nil}, ${42: in42: nil}, ${43: in43: nil}, ${44: in44: nil}, ${45: in45: nil}, ${46: in46: nil}, ${47: in47: nil}, ${48: in48: nil}, ${49: in49: nil}, ${50: in50: nil}, ${51: gain: 0.0})
endsnippet

snippet HOAEncLebedev505.kr
HOAEncLebedev505.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: in37: nil}, ${38: in38: nil}, ${39: in39: nil}, ${40: in40: nil}, ${41: in41: nil}, ${42: in42: nil}, ${43: in43: nil}, ${44: in44: nil}, ${45: in45: nil}, ${46: in46: nil}, ${47: in47: nil}, ${48: in48: nil}, ${49: in49: nil}, ${50: in50: nil}, ${51: gain: 0.0})
endsnippet

snippet HOAEncoder1.ar
HOAEncoder1.ar(${1:in1: nil}, ${2: gain_0: 0.0}, ${3: radius_0: 2.0}, ${4: azimuth_0: 0.0}, ${5: elevation_0: 0.0}, ${6: yes: 0.0}, ${7: speaker_radius_0: 1.07})
endsnippet

snippet HOAEncoder1.kr
HOAEncoder1.kr(${1:in1: nil}, ${2: gain_0: 0.0}, ${3: radius_0: 2.0}, ${4: azimuth_0: 0.0}, ${5: elevation_0: 0.0}, ${6: yes: 0.0}, ${7: speaker_radius_0: 1.07})
endsnippet

snippet HOAEncoder2.ar
HOAEncoder2.ar(${1:in1: nil}, ${2: gain_0: 0.0}, ${3: radius_0: 2.0}, ${4: azimuth_0: 0.0}, ${5: elevation_0: 0.0}, ${6: yes: 0.0}, ${7: speaker_radius_0: 1.07})
endsnippet

snippet HOAEncoder2.kr
HOAEncoder2.kr(${1:in1: nil}, ${2: gain_0: 0.0}, ${3: radius_0: 2.0}, ${4: azimuth_0: 0.0}, ${5: elevation_0: 0.0}, ${6: yes: 0.0}, ${7: speaker_radius_0: 1.07})
endsnippet

snippet HOAEncoder3.ar
HOAEncoder3.ar(${1:in1: nil}, ${2: gain_0: 0.0}, ${3: radius_0: 2.0}, ${4: azimuth_0: 0.0}, ${5: elevation_0: 0.0}, ${6: yes: 0.0}, ${7: speaker_radius_0: 1.07})
endsnippet

snippet HOAEncoder3.kr
HOAEncoder3.kr(${1:in1: nil}, ${2: gain_0: 0.0}, ${3: radius_0: 2.0}, ${4: azimuth_0: 0.0}, ${5: elevation_0: 0.0}, ${6: yes: 0.0}, ${7: speaker_radius_0: 1.07})
endsnippet

snippet HOAEncoder4.ar
HOAEncoder4.ar(${1:in1: nil}, ${2: gain_0: 0.0}, ${3: radius_0: 2.0}, ${4: azimuth_0: 0.0}, ${5: elevation_0: 0.0}, ${6: yes: 0.0}, ${7: speaker_radius_0: 1.07})
endsnippet

snippet HOAEncoder4.kr
HOAEncoder4.kr(${1:in1: nil}, ${2: gain_0: 0.0}, ${3: radius_0: 2.0}, ${4: azimuth_0: 0.0}, ${5: elevation_0: 0.0}, ${6: yes: 0.0}, ${7: speaker_radius_0: 1.07})
endsnippet

snippet HOAEncoder5.ar
HOAEncoder5.ar(${1:in1: nil}, ${2: gain_0: 0.0}, ${3: radius_0: 2.0}, ${4: azimuth_0: 0.0}, ${5: elevation_0: 0.0}, ${6: yes: 0.0}, ${7: speaker_radius_0: 1.07})
endsnippet

snippet HOAEncoder5.kr
HOAEncoder5.kr(${1:in1: nil}, ${2: gain_0: 0.0}, ${3: radius_0: 2.0}, ${4: azimuth_0: 0.0}, ${5: elevation_0: 0.0}, ${6: yes: 0.0}, ${7: speaker_radius_0: 1.07})
endsnippet

snippet HOAMirror1.ar
HOAMirror1.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: front_back: 0.0}, ${6: left_right: 0.0}, ${7: up_down: 0.0})
endsnippet

snippet HOAMirror1.kr
HOAMirror1.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: front_back: 0.0}, ${6: left_right: 0.0}, ${7: up_down: 0.0})
endsnippet

snippet HOAMirror10.ar
HOAMirror10.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: in37: nil}, ${38: in38: nil}, ${39: in39: nil}, ${40: in40: nil}, ${41: in41: nil}, ${42: in42: nil}, ${43: in43: nil}, ${44: in44: nil}, ${45: in45: nil}, ${46: in46: nil}, ${47: in47: nil}, ${48: in48: nil}, ${49: in49: nil}, ${50: in50: nil}, ${51: in51: nil}, ${52: in52: nil}, ${53: in53: nil}, ${54: in54: nil}, ${55: in55: nil}, ${56: in56: nil}, ${57: in57: nil}, ${58: in58: nil}, ${59: in59: nil}, ${60: in60: nil}, ${61: in61: nil}, ${62: in62: nil}, ${63: in63: nil}, ${64: in64: nil}, ${65: in65: nil}, ${66: in66: nil}, ${67: in67: nil}, ${68: in68: nil}, ${69: in69: nil}, ${70: in70: nil}, ${71: in71: nil}, ${72: in72: nil}, ${73: in73: nil}, ${74: in74: nil}, ${75: in75: nil}, ${76: in76: nil}, ${77: in77: nil}, ${78: in78: nil}, ${79: in79: nil}, ${80: in80: nil}, ${81: in81: nil}, ${82: in82: nil}, ${83: in83: nil}, ${84: in84: nil}, ${85: in85: nil}, ${86: in86: nil}, ${87: in87: nil}, ${88: in88: nil}, ${89: in89: nil}, ${90: in90: nil}, ${91: in91: nil}, ${92: in92: nil}, ${93: in93: nil}, ${94: in94: nil}, ${95: in95: nil}, ${96: in96: nil}, ${97: in97: nil}, ${98: in98: nil}, ${99: in99: nil}, ${100: in100: nil}, ${101: in101: nil}, ${102: in102: nil}, ${103: in103: nil}, ${104: in104: nil}, ${105: in105: nil}, ${106: in106: nil}, ${107: in107: nil}, ${108: in108: nil}, ${109: in109: nil}, ${110: in110: nil}, ${111: in111: nil}, ${112: in112: nil}, ${113: in113: nil}, ${114: in114: nil}, ${115: in115: nil}, ${116: in116: nil}, ${117: in117: nil}, ${118: in118: nil}, ${119: in119: nil}, ${120: in120: nil}, ${121: in121: nil}, ${122: front_back: 0.0}, ${123: left_right: 0.0}, ${124: up_down: 0.0})
endsnippet

snippet HOAMirror10.kr
HOAMirror10.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: in37: nil}, ${38: in38: nil}, ${39: in39: nil}, ${40: in40: nil}, ${41: in41: nil}, ${42: in42: nil}, ${43: in43: nil}, ${44: in44: nil}, ${45: in45: nil}, ${46: in46: nil}, ${47: in47: nil}, ${48: in48: nil}, ${49: in49: nil}, ${50: in50: nil}, ${51: in51: nil}, ${52: in52: nil}, ${53: in53: nil}, ${54: in54: nil}, ${55: in55: nil}, ${56: in56: nil}, ${57: in57: nil}, ${58: in58: nil}, ${59: in59: nil}, ${60: in60: nil}, ${61: in61: nil}, ${62: in62: nil}, ${63: in63: nil}, ${64: in64: nil}, ${65: in65: nil}, ${66: in66: nil}, ${67: in67: nil}, ${68: in68: nil}, ${69: in69: nil}, ${70: in70: nil}, ${71: in71: nil}, ${72: in72: nil}, ${73: in73: nil}, ${74: in74: nil}, ${75: in75: nil}, ${76: in76: nil}, ${77: in77: nil}, ${78: in78: nil}, ${79: in79: nil}, ${80: in80: nil}, ${81: in81: nil}, ${82: in82: nil}, ${83: in83: nil}, ${84: in84: nil}, ${85: in85: nil}, ${86: in86: nil}, ${87: in87: nil}, ${88: in88: nil}, ${89: in89: nil}, ${90: in90: nil}, ${91: in91: nil}, ${92: in92: nil}, ${93: in93: nil}, ${94: in94: nil}, ${95: in95: nil}, ${96: in96: nil}, ${97: in97: nil}, ${98: in98: nil}, ${99: in99: nil}, ${100: in100: nil}, ${101: in101: nil}, ${102: in102: nil}, ${103: in103: nil}, ${104: in104: nil}, ${105: in105: nil}, ${106: in106: nil}, ${107: in107: nil}, ${108: in108: nil}, ${109: in109: nil}, ${110: in110: nil}, ${111: in111: nil}, ${112: in112: nil}, ${113: in113: nil}, ${114: in114: nil}, ${115: in115: nil}, ${116: in116: nil}, ${117: in117: nil}, ${118: in118: nil}, ${119: in119: nil}, ${120: in120: nil}, ${121: in121: nil}, ${122: front_back: 0.0}, ${123: left_right: 0.0}, ${124: up_down: 0.0})
endsnippet

snippet HOAMirror2.ar
HOAMirror2.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: front_back: 0.0}, ${11: left_right: 0.0}, ${12: up_down: 0.0})
endsnippet

snippet HOAMirror2.kr
HOAMirror2.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: front_back: 0.0}, ${11: left_right: 0.0}, ${12: up_down: 0.0})
endsnippet

snippet HOAMirror3.ar
HOAMirror3.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: front_back: 0.0}, ${18: left_right: 0.0}, ${19: up_down: 0.0})
endsnippet

snippet HOAMirror3.kr
HOAMirror3.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: front_back: 0.0}, ${18: left_right: 0.0}, ${19: up_down: 0.0})
endsnippet

snippet HOAMirror4.ar
HOAMirror4.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: front_back: 0.0}, ${27: left_right: 0.0}, ${28: up_down: 0.0})
endsnippet

snippet HOAMirror4.kr
HOAMirror4.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: front_back: 0.0}, ${27: left_right: 0.0}, ${28: up_down: 0.0})
endsnippet

snippet HOAMirror5.ar
HOAMirror5.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: front_back: 0.0}, ${38: left_right: 0.0}, ${39: up_down: 0.0})
endsnippet

snippet HOAMirror5.kr
HOAMirror5.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: front_back: 0.0}, ${38: left_right: 0.0}, ${39: up_down: 0.0})
endsnippet

snippet HOAMirror6.ar
HOAMirror6.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: in37: nil}, ${38: in38: nil}, ${39: in39: nil}, ${40: in40: nil}, ${41: in41: nil}, ${42: in42: nil}, ${43: in43: nil}, ${44: in44: nil}, ${45: in45: nil}, ${46: in46: nil}, ${47: in47: nil}, ${48: in48: nil}, ${49: in49: nil}, ${50: front_back: 0.0}, ${51: left_right: 0.0}, ${52: up_down: 0.0})
endsnippet

snippet HOAMirror6.kr
HOAMirror6.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: in37: nil}, ${38: in38: nil}, ${39: in39: nil}, ${40: in40: nil}, ${41: in41: nil}, ${42: in42: nil}, ${43: in43: nil}, ${44: in44: nil}, ${45: in45: nil}, ${46: in46: nil}, ${47: in47: nil}, ${48: in48: nil}, ${49: in49: nil}, ${50: front_back: 0.0}, ${51: left_right: 0.0}, ${52: up_down: 0.0})
endsnippet

snippet HOAMirror7.ar
HOAMirror7.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: in37: nil}, ${38: in38: nil}, ${39: in39: nil}, ${40: in40: nil}, ${41: in41: nil}, ${42: in42: nil}, ${43: in43: nil}, ${44: in44: nil}, ${45: in45: nil}, ${46: in46: nil}, ${47: in47: nil}, ${48: in48: nil}, ${49: in49: nil}, ${50: in50: nil}, ${51: in51: nil}, ${52: in52: nil}, ${53: in53: nil}, ${54: in54: nil}, ${55: in55: nil}, ${56: in56: nil}, ${57: in57: nil}, ${58: in58: nil}, ${59: in59: nil}, ${60: in60: nil}, ${61: in61: nil}, ${62: in62: nil}, ${63: in63: nil}, ${64: in64: nil}, ${65: front_back: 0.0}, ${66: left_right: 0.0}, ${67: up_down: 0.0})
endsnippet

snippet HOAMirror7.kr
HOAMirror7.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: in37: nil}, ${38: in38: nil}, ${39: in39: nil}, ${40: in40: nil}, ${41: in41: nil}, ${42: in42: nil}, ${43: in43: nil}, ${44: in44: nil}, ${45: in45: nil}, ${46: in46: nil}, ${47: in47: nil}, ${48: in48: nil}, ${49: in49: nil}, ${50: in50: nil}, ${51: in51: nil}, ${52: in52: nil}, ${53: in53: nil}, ${54: in54: nil}, ${55: in55: nil}, ${56: in56: nil}, ${57: in57: nil}, ${58: in58: nil}, ${59: in59: nil}, ${60: in60: nil}, ${61: in61: nil}, ${62: in62: nil}, ${63: in63: nil}, ${64: in64: nil}, ${65: front_back: 0.0}, ${66: left_right: 0.0}, ${67: up_down: 0.0})
endsnippet

snippet HOAMirror8.ar
HOAMirror8.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: in37: nil}, ${38: in38: nil}, ${39: in39: nil}, ${40: in40: nil}, ${41: in41: nil}, ${42: in42: nil}, ${43: in43: nil}, ${44: in44: nil}, ${45: in45: nil}, ${46: in46: nil}, ${47: in47: nil}, ${48: in48: nil}, ${49: in49: nil}, ${50: in50: nil}, ${51: in51: nil}, ${52: in52: nil}, ${53: in53: nil}, ${54: in54: nil}, ${55: in55: nil}, ${56: in56: nil}, ${57: in57: nil}, ${58: in58: nil}, ${59: in59: nil}, ${60: in60: nil}, ${61: in61: nil}, ${62: in62: nil}, ${63: in63: nil}, ${64: in64: nil}, ${65: in65: nil}, ${66: in66: nil}, ${67: in67: nil}, ${68: in68: nil}, ${69: in69: nil}, ${70: in70: nil}, ${71: in71: nil}, ${72: in72: nil}, ${73: in73: nil}, ${74: in74: nil}, ${75: in75: nil}, ${76: in76: nil}, ${77: in77: nil}, ${78: in78: nil}, ${79: in79: nil}, ${80: in80: nil}, ${81: in81: nil}, ${82: front_back: 0.0}, ${83: left_right: 0.0}, ${84: up_down: 0.0})
endsnippet

snippet HOAMirror8.kr
HOAMirror8.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: in37: nil}, ${38: in38: nil}, ${39: in39: nil}, ${40: in40: nil}, ${41: in41: nil}, ${42: in42: nil}, ${43: in43: nil}, ${44: in44: nil}, ${45: in45: nil}, ${46: in46: nil}, ${47: in47: nil}, ${48: in48: nil}, ${49: in49: nil}, ${50: in50: nil}, ${51: in51: nil}, ${52: in52: nil}, ${53: in53: nil}, ${54: in54: nil}, ${55: in55: nil}, ${56: in56: nil}, ${57: in57: nil}, ${58: in58: nil}, ${59: in59: nil}, ${60: in60: nil}, ${61: in61: nil}, ${62: in62: nil}, ${63: in63: nil}, ${64: in64: nil}, ${65: in65: nil}, ${66: in66: nil}, ${67: in67: nil}, ${68: in68: nil}, ${69: in69: nil}, ${70: in70: nil}, ${71: in71: nil}, ${72: in72: nil}, ${73: in73: nil}, ${74: in74: nil}, ${75: in75: nil}, ${76: in76: nil}, ${77: in77: nil}, ${78: in78: nil}, ${79: in79: nil}, ${80: in80: nil}, ${81: in81: nil}, ${82: front_back: 0.0}, ${83: left_right: 0.0}, ${84: up_down: 0.0})
endsnippet

snippet HOAMirror9.ar
HOAMirror9.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: in37: nil}, ${38: in38: nil}, ${39: in39: nil}, ${40: in40: nil}, ${41: in41: nil}, ${42: in42: nil}, ${43: in43: nil}, ${44: in44: nil}, ${45: in45: nil}, ${46: in46: nil}, ${47: in47: nil}, ${48: in48: nil}, ${49: in49: nil}, ${50: in50: nil}, ${51: in51: nil}, ${52: in52: nil}, ${53: in53: nil}, ${54: in54: nil}, ${55: in55: nil}, ${56: in56: nil}, ${57: in57: nil}, ${58: in58: nil}, ${59: in59: nil}, ${60: in60: nil}, ${61: in61: nil}, ${62: in62: nil}, ${63: in63: nil}, ${64: in64: nil}, ${65: in65: nil}, ${66: in66: nil}, ${67: in67: nil}, ${68: in68: nil}, ${69: in69: nil}, ${70: in70: nil}, ${71: in71: nil}, ${72: in72: nil}, ${73: in73: nil}, ${74: in74: nil}, ${75: in75: nil}, ${76: in76: nil}, ${77: in77: nil}, ${78: in78: nil}, ${79: in79: nil}, ${80: in80: nil}, ${81: in81: nil}, ${82: in82: nil}, ${83: in83: nil}, ${84: in84: nil}, ${85: in85: nil}, ${86: in86: nil}, ${87: in87: nil}, ${88: in88: nil}, ${89: in89: nil}, ${90: in90: nil}, ${91: in91: nil}, ${92: in92: nil}, ${93: in93: nil}, ${94: in94: nil}, ${95: in95: nil}, ${96: in96: nil}, ${97: in97: nil}, ${98: in98: nil}, ${99: in99: nil}, ${100: in100: nil}, ${101: front_back: 0.0}, ${102: left_right: 0.0}, ${103: up_down: 0.0})
endsnippet

snippet HOAMirror9.kr
HOAMirror9.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: in26: nil}, ${27: in27: nil}, ${28: in28: nil}, ${29: in29: nil}, ${30: in30: nil}, ${31: in31: nil}, ${32: in32: nil}, ${33: in33: nil}, ${34: in34: nil}, ${35: in35: nil}, ${36: in36: nil}, ${37: in37: nil}, ${38: in38: nil}, ${39: in39: nil}, ${40: in40: nil}, ${41: in41: nil}, ${42: in42: nil}, ${43: in43: nil}, ${44: in44: nil}, ${45: in45: nil}, ${46: in46: nil}, ${47: in47: nil}, ${48: in48: nil}, ${49: in49: nil}, ${50: in50: nil}, ${51: in51: nil}, ${52: in52: nil}, ${53: in53: nil}, ${54: in54: nil}, ${55: in55: nil}, ${56: in56: nil}, ${57: in57: nil}, ${58: in58: nil}, ${59: in59: nil}, ${60: in60: nil}, ${61: in61: nil}, ${62: in62: nil}, ${63: in63: nil}, ${64: in64: nil}, ${65: in65: nil}, ${66: in66: nil}, ${67: in67: nil}, ${68: in68: nil}, ${69: in69: nil}, ${70: in70: nil}, ${71: in71: nil}, ${72: in72: nil}, ${73: in73: nil}, ${74: in74: nil}, ${75: in75: nil}, ${76: in76: nil}, ${77: in77: nil}, ${78: in78: nil}, ${79: in79: nil}, ${80: in80: nil}, ${81: in81: nil}, ${82: in82: nil}, ${83: in83: nil}, ${84: in84: nil}, ${85: in85: nil}, ${86: in86: nil}, ${87: in87: nil}, ${88: in88: nil}, ${89: in89: nil}, ${90: in90: nil}, ${91: in91: nil}, ${92: in92: nil}, ${93: in93: nil}, ${94: in94: nil}, ${95: in95: nil}, ${96: in96: nil}, ${97: in97: nil}, ${98: in98: nil}, ${99: in99: nil}, ${100: in100: nil}, ${101: front_back: 0.0}, ${102: left_right: 0.0}, ${103: up_down: 0.0})
endsnippet

snippet HOAPanLebedev061.ar
HOAPanLebedev061.ar(${1:in1: nil}, ${2: gain_0: 0.0}, ${3: radius_0: 2.0}, ${4: azimuth_0: 0.0}, ${5: elevation_0: 0.0}, ${6: yes: 0.0}, ${7: checkbox_0: 0.0}, ${8: checkbox_1: 0.0}, ${9: speaker_radius: 1.07})
endsnippet

snippet HOAPanLebedev061.kr
HOAPanLebedev061.kr(${1:in1: nil}, ${2: gain_0: 0.0}, ${3: radius_0: 2.0}, ${4: azimuth_0: 0.0}, ${5: elevation_0: 0.0}, ${6: yes: 0.0}, ${7: checkbox_0: 0.0}, ${8: checkbox_1: 0.0}, ${9: speaker_radius: 1.07})
endsnippet

snippet HOAPanLebedev261.ar
HOAPanLebedev261.ar(${1:in1: nil}, ${2: gain_0: 0.0}, ${3: radius_0: 2.0}, ${4: azimuth_0: 0.0}, ${5: elevation_0: 0.0}, ${6: yes: 0.0}, ${7: checkbox_0: 0.0}, ${8: checkbox_1: 0.0}, ${9: speaker_radius: 1.07})
endsnippet

snippet HOAPanLebedev261.kr
HOAPanLebedev261.kr(${1:in1: nil}, ${2: gain_0: 0.0}, ${3: radius_0: 2.0}, ${4: azimuth_0: 0.0}, ${5: elevation_0: 0.0}, ${6: yes: 0.0}, ${7: checkbox_0: 0.0}, ${8: checkbox_1: 0.0}, ${9: speaker_radius: 1.07})
endsnippet

snippet HOAPanLebedev262.ar
HOAPanLebedev262.ar(${1:in1: nil}, ${2: gain_0: 0.0}, ${3: radius_0: 2.0}, ${4: azimuth_0: 0.0}, ${5: elevation_0: 0.0}, ${6: yes: 0.0}, ${7: checkbox_0: 0.0}, ${8: checkbox_1: 0.0}, ${9: checkbox_2: 0.0}, ${10: speaker_radius: 1.07})
endsnippet

snippet HOAPanLebedev262.kr
HOAPanLebedev262.kr(${1:in1: nil}, ${2: gain_0: 0.0}, ${3: radius_0: 2.0}, ${4: azimuth_0: 0.0}, ${5: elevation_0: 0.0}, ${6: yes: 0.0}, ${7: checkbox_0: 0.0}, ${8: checkbox_1: 0.0}, ${9: checkbox_2: 0.0}, ${10: speaker_radius: 1.07})
endsnippet

snippet HOAPanLebedev263.ar
HOAPanLebedev263.ar(${1:in1: nil}, ${2: gain_0: 0.0}, ${3: radius_0: 2.0}, ${4: azimuth_0: 0.0}, ${5: elevation_0: 0.0}, ${6: yes: 0.0}, ${7: checkbox_0: 0.0}, ${8: checkbox_1: 0.0}, ${9: checkbox_2: 0.0}, ${10: checkbox_3: 0.0}, ${11: speaker_radius: 1.07})
endsnippet

snippet HOAPanLebedev263.kr
HOAPanLebedev263.kr(${1:in1: nil}, ${2: gain_0: 0.0}, ${3: radius_0: 2.0}, ${4: azimuth_0: 0.0}, ${5: elevation_0: 0.0}, ${6: yes: 0.0}, ${7: checkbox_0: 0.0}, ${8: checkbox_1: 0.0}, ${9: checkbox_2: 0.0}, ${10: checkbox_3: 0.0}, ${11: speaker_radius: 1.07})
endsnippet

snippet HOAPanLebedev501.ar
HOAPanLebedev501.ar(${1:in1: nil}, ${2: gain_0: 0.0}, ${3: radius_0: 2.0}, ${4: azimuth_0: 0.0}, ${5: elevation_0: 0.0}, ${6: yes: 0.0}, ${7: checkbox_0: 0.0}, ${8: checkbox_1: 0.0}, ${9: speaker_radius: 1.07})
endsnippet

snippet HOAPanLebedev501.kr
HOAPanLebedev501.kr(${1:in1: nil}, ${2: gain_0: 0.0}, ${3: radius_0: 2.0}, ${4: azimuth_0: 0.0}, ${5: elevation_0: 0.0}, ${6: yes: 0.0}, ${7: checkbox_0: 0.0}, ${8: checkbox_1: 0.0}, ${9: speaker_radius: 1.07})
endsnippet

snippet HOAPanLebedev502.ar
HOAPanLebedev502.ar(${1:in1: nil}, ${2: gain_0: 0.0}, ${3: radius_0: 2.0}, ${4: azimuth_0: 0.0}, ${5: elevation_0: 0.0}, ${6: yes: 0.0}, ${7: checkbox_0: 0.0}, ${8: checkbox_1: 0.0}, ${9: checkbox_2: 0.0}, ${10: speaker_radius: 1.07})
endsnippet

snippet HOAPanLebedev502.kr
HOAPanLebedev502.kr(${1:in1: nil}, ${2: gain_0: 0.0}, ${3: radius_0: 2.0}, ${4: azimuth_0: 0.0}, ${5: elevation_0: 0.0}, ${6: yes: 0.0}, ${7: checkbox_0: 0.0}, ${8: checkbox_1: 0.0}, ${9: checkbox_2: 0.0}, ${10: speaker_radius: 1.07})
endsnippet

snippet HOAPanLebedev503.ar
HOAPanLebedev503.ar(${1:in1: nil}, ${2: gain_0: 0.0}, ${3: radius_0: 2.0}, ${4: azimuth_0: 0.0}, ${5: elevation_0: 0.0}, ${6: yes: 0.0}, ${7: checkbox_0: 0.0}, ${8: checkbox_1: 0.0}, ${9: checkbox_2: 0.0}, ${10: checkbox_3: 0.0}, ${11: speaker_radius: 1.07})
endsnippet

snippet HOAPanLebedev503.kr
HOAPanLebedev503.kr(${1:in1: nil}, ${2: gain_0: 0.0}, ${3: radius_0: 2.0}, ${4: azimuth_0: 0.0}, ${5: elevation_0: 0.0}, ${6: yes: 0.0}, ${7: checkbox_0: 0.0}, ${8: checkbox_1: 0.0}, ${9: checkbox_2: 0.0}, ${10: checkbox_3: 0.0}, ${11: speaker_radius: 1.07})
endsnippet

snippet HOAPanLebedev504.ar
HOAPanLebedev504.ar(${1:in1: nil}, ${2: gain_0: 0.0}, ${3: radius_0: 2.0}, ${4: azimuth_0: 0.0}, ${5: elevation_0: 0.0}, ${6: yes: 0.0}, ${7: checkbox_0: 0.0}, ${8: checkbox_1: 0.0}, ${9: checkbox_2: 0.0}, ${10: checkbox_3: 0.0}, ${11: checkbox_4: 0.0}, ${12: speaker_radius: 1.07})
endsnippet

snippet HOAPanLebedev504.kr
HOAPanLebedev504.kr(${1:in1: nil}, ${2: gain_0: 0.0}, ${3: radius_0: 2.0}, ${4: azimuth_0: 0.0}, ${5: elevation_0: 0.0}, ${6: yes: 0.0}, ${7: checkbox_0: 0.0}, ${8: checkbox_1: 0.0}, ${9: checkbox_2: 0.0}, ${10: checkbox_3: 0.0}, ${11: checkbox_4: 0.0}, ${12: speaker_radius: 1.07})
endsnippet

snippet HOAPanLebedev505.ar
HOAPanLebedev505.ar(${1:in1: nil}, ${2: gain_0: 0.0}, ${3: radius_0: 2.0}, ${4: azimuth_0: 0.0}, ${5: elevation_0: 0.0}, ${6: yes: 0.0}, ${7: checkbox_0: 0.0}, ${8: checkbox_1: 0.0}, ${9: checkbox_2: 0.0}, ${10: checkbox_3: 0.0}, ${11: checkbox_4: 0.0}, ${12: checkbox_5: 0.0}, ${13: speaker_radius: 1.07})
endsnippet

snippet HOAPanLebedev505.kr
HOAPanLebedev505.kr(${1:in1: nil}, ${2: gain_0: 0.0}, ${3: radius_0: 2.0}, ${4: azimuth_0: 0.0}, ${5: elevation_0: 0.0}, ${6: yes: 0.0}, ${7: checkbox_0: 0.0}, ${8: checkbox_1: 0.0}, ${9: checkbox_2: 0.0}, ${10: checkbox_3: 0.0}, ${11: checkbox_4: 0.0}, ${12: checkbox_5: 0.0}, ${13: speaker_radius: 1.07})
endsnippet

snippet HOARotator1.ar
HOARotator1.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: pitch: 0.0}, ${6: roll: 0.0}, ${7: yaw: 0.0})
endsnippet

snippet HOARotator1.kr
HOARotator1.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: pitch: 0.0}, ${6: roll: 0.0}, ${7: yaw: 0.0})
endsnippet

snippet HOARotator2.ar
HOARotator2.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: pitch: 0.0}, ${11: roll: 0.0}, ${12: yaw: 0.0})
endsnippet

snippet HOARotator2.kr
HOARotator2.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: pitch: 0.0}, ${11: roll: 0.0}, ${12: yaw: 0.0})
endsnippet

snippet HOARotator3.ar
HOARotator3.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: pitch: 0.0}, ${18: roll: 0.0}, ${19: yaw: 0.0})
endsnippet

snippet HOARotator3.kr
HOARotator3.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: pitch: 0.0}, ${18: roll: 0.0}, ${19: yaw: 0.0})
endsnippet

snippet HOARotator4.ar
HOARotator4.ar(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: pitch: 0.0}, ${27: roll: 0.0}, ${28: yaw: 0.0})
endsnippet

snippet HOARotator4.kr
HOARotator4.kr(${1:in1: nil}, ${2: in2: nil}, ${3: in3: nil}, ${4: in4: nil}, ${5: in5: nil}, ${6: in6: nil}, ${7: in7: nil}, ${8: in8: nil}, ${9: in9: nil}, ${10: in10: nil}, ${11: in11: nil}, ${12: in12: nil}, ${13: in13: nil}, ${14: in14: nil}, ${15: in15: nil}, ${16: in16: nil}, ${17: in17: nil}, ${18: in18: nil}, ${19: in19: nil}, ${20: in20: nil}, ${21: in21: nil}, ${22: in22: nil}, ${23: in23: nil}, ${24: in24: nil}, ${25: in25: nil}, ${26: pitch: 0.0}, ${27: roll: 0.0}, ${28: yaw: 0.0})
endsnippet

snippet HPZ1.coeffs
HPZ1.coeffs(${1:})
endsnippet

snippet HPZ2.coeffs
HPZ2.coeffs(${1:})
endsnippet

snippet HairCell.ar
HairCell.ar(${1:input: nil}, ${2: spontaneousrate: 0.0}, ${3: boostrate: 200.0}, ${4: restorerate: 1000.0}, ${5: loss: 0.99}, ${6: mul: 1.0}, ${7: add: 0.0})
endsnippet

snippet HairCell.kr
HairCell.kr(${1:input: nil}, ${2: spontaneousrate: 0.0}, ${3: boostrate: 200.0}, ${4: restorerate: 1000.0}, ${5: loss: 0.99}, ${6: mul: 1.0}, ${7: add: 0.0})
endsnippet

snippet Harmonics.new
Harmonics.new(${1:size: 32})
endsnippet

snippet Hasher.ar
Hasher.ar(${1:in: 0.0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet Hasher.kr
Hasher.kr(${1:in: 0.0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet Help.gui
Help.gui(${1:})
endsnippet

snippet Help.dir
Help.dir(${1:})
endsnippet

snippet Help.methodArgs
Help.methodArgs(${1:string: nil})
endsnippet

snippet HelpBrowser.initClass
HelpBrowser.initClass(${1:})
endsnippet

snippet HelpBrowser.instance
HelpBrowser.instance(${1:})
endsnippet

snippet HelpBrowser.new
HelpBrowser.new(${1:aHomeUrl: nil}, ${2: newWin: nil})
endsnippet

snippet HelpBrowser.goTo
HelpBrowser.goTo(${1:url: nil})
endsnippet

snippet HelpBrowser.front
HelpBrowser.front(${1:})
endsnippet

snippet HelpBrowser.goHome
HelpBrowser.goHome(${1:})
endsnippet

snippet HelpBrowser.openBrowsePage
HelpBrowser.openBrowsePage(${1:category: nil})
endsnippet

snippet HelpBrowser.openSearchPage
HelpBrowser.openSearchPage(${1:text: nil})
endsnippet

snippet HelpBrowser.openHelpFor
HelpBrowser.openHelpFor(${1:text: nil})
endsnippet

snippet HelpBrowser.openHelpForMethod
HelpBrowser.openHelpForMethod(${1:method: nil})
endsnippet

snippet Henon2DN.ar
Henon2DN.ar(${1:minfreq: 11025}, ${2: maxfreq: 22050}, ${3: a: 1.4}, ${4: b: 0.3}, ${5: x0: 0.30501993062401}, ${6: y0: 0.20938865431933}, ${7: mul: 1}, ${8: add: 0.0})
endsnippet

snippet Henon2DN.kr
Henon2DN.kr(${1:minfreq: 40}, ${2: maxfreq: 100}, ${3: a: 1.4}, ${4: b: 0.3}, ${5: x0: 0.30501993062401}, ${6: y0: 0.20938865431933}, ${7: mul: 1}, ${8: add: 0.0})
endsnippet

snippet HenonN.ar
HenonN.ar(${1:freq: 22050}, ${2: a: 1.4}, ${3: b: 0.3}, ${4: x0: 0}, ${5: x1: 0}, ${6: mul: 1.0}, ${7: add: 0.0})
endsnippet

snippet HenonTrig.ar
HenonTrig.ar(${1:minfreq: 5}, ${2: maxfreq: 10}, ${3: a: 1.4}, ${4: b: 0.3}, ${5: x0: 0.30501993062401}, ${6: y0: 0.20938865431933}, ${7: mul: 1}, ${8: add: 0.0})
endsnippet

snippet HenonTrig.kr
HenonTrig.kr(${1:minfreq: 5}, ${2: maxfreq: 10}, ${3: a: 1.4}, ${4: b: 0.3}, ${5: x0: 0.30501993062401}, ${6: y0: 0.20938865431933}, ${7: mul: 1}, ${8: add: 0.0})
endsnippet

snippet HighShelf.ar
HighShelf.ar(${1:in: nil}, ${2: freq: 440}, ${3: shelfslope: 1}, ${4: dbgain: 0}, ${5: mul: 1}, ${6: add: 0})
endsnippet

snippet Hilbert.ar
Hilbert.ar(${1:in: nil}, ${2: mul: 1}, ${3: add: 0})
endsnippet

snippet HilbertFIR.ar
HilbertFIR.ar(${1:in: nil}, ${2: buffer: nil})
endsnippet

snippet HiliteGradient.new
HiliteGradient.new(${1:color1: nil}, ${2: color2: nil}, ${3: direction: v}, ${4: steps: 64}, ${5: frac: 0.33})
endsnippet

snippet History.timeStamp
History.timeStamp(${1:})
endsnippet

snippet History.dateString
History.dateString(${1:})
endsnippet

snippet History.initClass
History.initClass(${1:})
endsnippet

snippet History.start
History.start(${1:})
endsnippet

snippet History.end
History.end(${1:})
endsnippet

snippet History.hasMovedOn_
History.hasMovedOn_(${1:flag: true})
endsnippet

snippet History.hasMovedOn
History.hasMovedOn(${1:})
endsnippet

snippet History.play
History.play(${1:start: 0}, ${2: end: nil}, ${3: verbose: true})
endsnippet

snippet History.stop
History.stop(${1:})
endsnippet

snippet History.enter
History.enter(${1:lineStr: nil}, ${2: id: me})
endsnippet

snippet History.lines
History.lines(${1:})
endsnippet

snippet History.lineShorts
History.lineShorts(${1:})
endsnippet

snippet History.removeAt
History.removeAt(${1:index: nil})
endsnippet

snippet History.removeLast
History.removeLast(${1:})
endsnippet

snippet History.keep
History.keep(${1:num: nil})
endsnippet

snippet History.drop
History.drop(${1:num: nil})
endsnippet

snippet History.clear
History.clear(${1:})
endsnippet

snippet History.new
History.new(${1:lines: nil})
endsnippet

snippet History.saveCS
History.saveCS(${1:path: nil}, ${2: forward: false})
endsnippet

snippet History.loadCS
History.loadCS(${1:path: nil}, ${2: forward: false})
endsnippet

snippet History.localOn
History.localOn(${1:})
endsnippet

snippet History.localOff
History.localOff(${1:})
endsnippet

snippet History.saveStory
History.saveStory(${1:path: nil})
endsnippet

snippet History.formatTime
History.formatTime(${1:val: nil})
endsnippet

snippet History.unformatTime
History.unformatTime(${1:str: nil})
endsnippet

snippet History.prettyString
History.prettyString(${1:str: nil})
endsnippet

snippet History.shorten
History.shorten(${1:line: nil}, ${2: maxLength: nil})
endsnippet

snippet History.getTimeFromString
History.getTimeFromString(${1:str: nil})
endsnippet

snippet History.asLines
History.asLines(${1:str: nil})
endsnippet

snippet History.evalLineAt
History.evalLineAt(${1:index: nil})
endsnippet

snippet History.eval
History.eval(${1:codeString: nil}, ${2: ignoreError: nil})
endsnippet

snippet History.cmdPeriod
History.cmdPeriod(${1:})
endsnippet

snippet History.playCmdPeriod
History.playCmdPeriod(${1:})
endsnippet

snippet History.makeLogFolder
History.makeLogFolder(${1:})
endsnippet

snippet History.showLogFolder
History.showLogFolder(${1:})
endsnippet

snippet History.checkLogStarted
History.checkLogStarted(${1:})
endsnippet

snippet History.startLog
History.startLog(${1:})
endsnippet

snippet History.addToLog
History.addToLog(${1:line: nil})
endsnippet

snippet History.endLog
History.endLog(${1:})
endsnippet

snippet History.showLogFile
History.showLogFile(${1:})
endsnippet

snippet History.readFromDoc
History.readFromDoc(${1:path: nil})
endsnippet

snippet History.checkPath
History.checkPath(${1:path: nil})
endsnippet

snippet History.loadStory
History.loadStory(${1:path: nil})
endsnippet

snippet History.rewrite
History.rewrite(${1:path: nil}, ${2: open: true})
endsnippet

snippet History.makeWin
History.makeWin(${1:where: nil}, ${2: numItems: 8})
endsnippet

snippet History.document
History.document(${1:})
endsnippet

snippet HistoryGui.new
HistoryGui.new(${1:object: nil}, ${2: numItems: 8}, ${3: parent: nil}, ${4: bounds: nil}, ${5: makeSkip: true}, ${6: options: [  ]})
endsnippet

snippet ICepstrum.new
ICepstrum.new(${1:cepchain: nil}, ${2: fftbuf: nil})
endsnippet

snippet IEnvGen.ar
IEnvGen.ar(${1:envelope: nil}, ${2: index: nil}, ${3: mul: 1}, ${4: add: 0})
endsnippet

snippet IEnvGen.kr
IEnvGen.kr(${1:envelope: nil}, ${2: index: nil}, ${3: mul: 1}, ${4: add: 0})
endsnippet

snippet IEnvGen.convertEnv
IEnvGen.convertEnv(${1:env: nil})
endsnippet

snippet IEnvGen.new1
IEnvGen.new1(${1:rate: nil}, ${2: index: nil}, ${3: envArray: nil})
endsnippet

snippet IFFT.new
IFFT.new(${1:buffer: nil}, ${2: wintype: 0}, ${3: winsize: 0})
endsnippet

snippet IFFT.ar
IFFT.ar(${1:buffer: nil}, ${2: wintype: 0}, ${3: winsize: 0})
endsnippet

snippet IFFT.kr
IFFT.kr(${1:buffer: nil}, ${2: wintype: 0}, ${3: winsize: 0})
endsnippet

snippet IIRFilter.ar
IIRFilter.ar(${1:in: nil}, ${2: freq: 440.0}, ${3: rq: 1.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet IODesc.new
IODesc.new(${1:rate: nil}, ${2: numberOfChannels: nil}, ${3: startingChannel: ?}, ${4: type: nil})
endsnippet

snippet IRand.new
IRand.new(${1:lo: 0}, ${2: hi: 127})
endsnippet

snippet IdentityDictionary.new
IdentityDictionary.new(${1:n: 8}, ${2: proto: nil}, ${3: parent: nil}, ${4: know: false})
endsnippet

snippet Image.initClass
Image.initClass(${1:})
endsnippet

snippet Image.new
Image.new(${1:multiple: nil}, ${2: height: nil})
endsnippet

snippet Image.openSVG
Image.openSVG(${1:path: nil}, ${2: size: nil})
endsnippet

snippet Image.newEmpty
Image.newEmpty(${1:width: nil}, ${2: height: nil})
endsnippet

snippet Image.color
Image.color(${1:args: [  ]})
endsnippet

snippet Image.open
Image.open(${1:path: nil})
endsnippet

snippet Image.openURL
Image.openURL(${1:url: nil}, ${2: timeout: 60})
endsnippet

snippet Image.fromImage
Image.fromImage(${1:image: nil})
endsnippet

snippet Image.fromWindow
Image.fromWindow(${1:window: nil}, ${2: rect: nil})
endsnippet

snippet Image.formats
Image.formats(${1:rw: r})
endsnippet

snippet Image.interpolations
Image.interpolations(${1:})
endsnippet

snippet Image.colorToPixel
Image.colorToPixel(${1:color: nil})
endsnippet

snippet Image.pixelToColor
Image.pixelToColor(${1:pixel: nil})
endsnippet

snippet Image.closeAllPlotWindows
Image.closeAllPlotWindows(${1:})
endsnippet

snippet Image.prFormats
Image.prFormats(${1:rw: nil})
endsnippet

snippet ImmutableError.new
ImmutableError.new(${1:receiver: nil}, ${2: value: nil})
endsnippet

snippet Impulse.ar
Impulse.ar(${1:freq: 440.0}, ${2: phase: 0.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet Impulse.kr
Impulse.kr(${1:freq: 440.0}, ${2: phase: 0.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet In.ar
In.ar(${1:bus: 0}, ${2: numChannels: 1})
endsnippet

snippet In.kr
In.kr(${1:bus: 0}, ${2: numChannels: 1})
endsnippet

snippet InBus.ar
InBus.ar(${1:bus: nil}, ${2: numChannels: nil}, ${3: offset: 0}, ${4: clip: nil})
endsnippet

snippet InBus.kr
InBus.kr(${1:bus: nil}, ${2: numChannels: nil}, ${3: offset: 0}, ${4: clip: nil})
endsnippet

snippet InBus.new1
InBus.new1(${1:rate: nil}, ${2: bus: nil}, ${3: numChannels: nil}, ${4: offset: nil}, ${5: clip: nil})
endsnippet

snippet InFeedback.ar
InFeedback.ar(${1:bus: 0}, ${2: numChannels: 1})
endsnippet

snippet InGrain.ar
InGrain.ar(${1:trigger: 0}, ${2: dur: 1}, ${3: in: nil}, ${4: mul: 1}, ${5: add: 0})
endsnippet

snippet InGrainB.ar
InGrainB.ar(${1:trigger: 0}, ${2: dur: 1}, ${3: in: nil}, ${4: envbuf: nil}, ${5: mul: 1}, ${6: add: 0})
endsnippet

snippet InGrainBBF.ar
InGrainBBF.ar(${1:trigger: 0}, ${2: dur: 1}, ${3: in: nil}, ${4: envbuf: nil}, ${5: azimuth: 0}, ${6: elevation: 0}, ${7: rho: 1}, ${8: wComp: 0}, ${9: mul: 1}, ${10: add: 0})
endsnippet

snippet InGrainBF.ar
InGrainBF.ar(${1:trigger: 0}, ${2: dur: 1}, ${3: in: nil}, ${4: azimuth: 0}, ${5: elevation: 0}, ${6: rho: 1}, ${7: wComp: 0}, ${8: mul: 1}, ${9: add: 0})
endsnippet

snippet InGrainI.ar
InGrainI.ar(${1:trigger: 0}, ${2: dur: 1}, ${3: in: nil}, ${4: envbuf1: nil}, ${5: envbuf2: nil}, ${6: ifac: 0.5}, ${7: mul: 1}, ${8: add: 0})
endsnippet

snippet InGrainIBF.ar
InGrainIBF.ar(${1:trigger: 0}, ${2: dur: 1}, ${3: in: nil}, ${4: envbuf1: nil}, ${5: envbuf2: nil}, ${6: ifac: 0.5}, ${7: azimuth: 0}, ${8: elevation: 0}, ${9: rho: 1}, ${10: wComp: 0}, ${11: mul: 1}, ${12: add: 0})
endsnippet

snippet InRange.ar
InRange.ar(${1:in: 0.0}, ${2: lo: 0.0}, ${3: hi: 1.0})
endsnippet

snippet InRange.kr
InRange.kr(${1:in: 0.0}, ${2: lo: 0.0}, ${3: hi: 1.0})
endsnippet

snippet InRange.ir
InRange.ir(${1:in: 0.0}, ${2: lo: 0.0}, ${3: hi: 1.0})
endsnippet

snippet InRect.ar
InRect.ar(${1:x: 0.0}, ${2: y: 0.0}, ${3: rect: nil})
endsnippet

snippet InRect.kr
InRect.kr(${1:x: 0.0}, ${2: y: 0.0}, ${3: rect: nil})
endsnippet

snippet InTrig.kr
InTrig.kr(${1:bus: 0}, ${2: numChannels: 1})
endsnippet

snippet Index.ar
Index.ar(${1:bufnum: nil}, ${2: in: 0.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet Index.kr
Index.kr(${1:bufnum: nil}, ${2: in: 0.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet InfoUGenBase.ir
InfoUGenBase.ir(${1:})
endsnippet

snippet InputRouter.new
InputRouter.new(${1:server: nil}, ${2: name: nil}, ${3: outputLabels: nil})
endsnippet

snippet InputRouter.unique
InputRouter.unique(${1:server: nil}, ${2: name: nil}, ${3: outputLabels: nil})
endsnippet

snippet InputRouter.remove
InputRouter.remove(${1:name: nil})
endsnippet

snippet InputRouter.removeAll
InputRouter.removeAll(${1:})
endsnippet

snippet InputRouterGUI.new
InputRouterGUI.new(${1:inputRouter: nil}, ${2: parent: nil}, ${3: bounds: nil})
endsnippet

snippet InsideOut.ar
InsideOut.ar(${1:in: 0.0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet InsideOut.kr
InsideOut.kr(${1:in: 0.0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet InsideOut.categories
InsideOut.categories(${1:})
endsnippet

snippet Inspector.new
Inspector.new(${1:object: nil})
endsnippet

snippet Inspector.initClass
Inspector.initClass(${1:})
endsnippet

snippet Inspector.inspectorFor
Inspector.inspectorFor(${1:object: nil})
endsnippet

snippet Instruction.ar
Instruction.ar(${1:bufnum: 0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet Integrator.ar
Integrator.ar(${1:in: 0.0}, ${2: coef: 1.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet Integrator.kr
Integrator.kr(${1:in: 0.0}, ${2: coef: 1.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet Integrator.coeffs
Integrator.coeffs(${1:sr: 44100}, ${2: coef: 1.0})
endsnippet

snippet Interpreter.new
Interpreter.new(${1:})
endsnippet

snippet Interval.new
Interval.new(${1:start: nil}, ${2: end: nil}, ${3: step: 1})
endsnippet

snippet JITGui.initClass
JITGui.initClass(${1:})
endsnippet

snippet JITGui.new
JITGui.new(${1:object: nil}, ${2: numItems: 0}, ${3: parent: nil}, ${4: bounds: nil}, ${5: makeSkip: true}, ${6: options: [  ]})
endsnippet

snippet JPverb.ar
JPverb.ar(${1:in: nil}, ${2: t60: 1.0}, ${3: damp: 0.0}, ${4: size: 1.0}, ${5: earlyDiff: 0.707}, ${6: modDepth: 0.1}, ${7: modFreq: 2.0}, ${8: low: 1.0}, ${9: mid: 1.0}, ${10: high: 1.0}, ${11: lowcut: 500.0}, ${12: highcut: 2000.0})
endsnippet

snippet JPverbRaw.ar
JPverbRaw.ar(${1:in1: nil}, ${2: in2: nil}, ${3: damp: 0.0}, ${4: earlydiff: 0.707}, ${5: highband: 2000.0}, ${6: highx: 1.0}, ${7: lowband: 500.0}, ${8: lowx: 1.0}, ${9: mdepth: 0.1}, ${10: mfreq: 2.0}, ${11: midx: 1.0}, ${12: size: 1.0}, ${13: t60: 1.0})
endsnippet

snippet JPverbRaw.kr
JPverbRaw.kr(${1:in1: nil}, ${2: in2: nil}, ${3: damp: 0.0}, ${4: earlydiff: 0.707}, ${5: highband: 2000.0}, ${6: highx: 1.0}, ${7: lowband: 500.0}, ${8: lowx: 1.0}, ${9: mdepth: 0.1}, ${10: mfreq: 2.0}, ${11: midx: 1.0}, ${12: size: 1.0}, ${13: t60: 1.0})
endsnippet

snippet JoshGrain.categories
JoshGrain.categories(${1:})
endsnippet

snippet JoshMultiChannelGrain.categories
JoshMultiChannelGrain.categories(${1:})
endsnippet

snippet JoshMultiOutGrain.categories
JoshMultiOutGrain.categories(${1:})
endsnippet

snippet K2A.ar
K2A.ar(${1:in: 0.0})
endsnippet

snippet KMeansRT.kr
KMeansRT.kr(${1:bufnum: nil}, ${2: inputdata: nil}, ${3: k: 5}, ${4: gate: 1}, ${5: reset: 0}, ${6: learn: 1})
endsnippet

snippet KMeansRT.getCentroid
KMeansRT.getCentroid(${1:bufnum: nil}, ${2: classif: nil}, ${3: ndims: nil})
endsnippet

snippet KeyClarity.kr
KeyClarity.kr(${1:chain: nil}, ${2: keydecay: 2.0}, ${3: chromaleak: 0.5})
endsnippet

snippet KeyMode.kr
KeyMode.kr(${1:chain: nil}, ${2: keydecay: 2.0}, ${3: chromaleak: 0.5})
endsnippet

snippet KeyState.kr
KeyState.kr(${1:keycode: 0}, ${2: minval: 0}, ${3: maxval: 1}, ${4: lag: 0.2})
endsnippet

snippet KeyTrack.kr
KeyTrack.kr(${1:chain: nil}, ${2: keydecay: 2.0}, ${3: chromaleak: 0.5})
endsnippet

snippet KeyboardWindow.initClass
KeyboardWindow.initClass(${1:})
endsnippet

snippet KeyboardWindow.new
KeyboardWindow.new(${1:nKeys: 36}, ${2: startOctave: 1}, ${3: channel: 0}, ${4: bounds: nil})
endsnippet

snippet KeyboardWindow.scale
KeyboardWindow.scale(${1:})
endsnippet

snippet KeyboardWindow.pressNote
KeyboardWindow.pressNote(${1:noteNumber: 64}, ${2: velo: 64}, ${3: channel: 0})
endsnippet

snippet KeyboardWindow.unPressNote
KeyboardWindow.unPressNote(${1:noteNumber: 64}, ${2: velo: 64}, ${3: channel: 0})
endsnippet

snippet KeyboardWindow.unPressAll
KeyboardWindow.unPressAll(${1:velo: 64}, ${2: channel: nil})
endsnippet

snippet Klang.ar
Klang.ar(${1:specificationsArrayRef: nil}, ${2: freqscale: 1.0}, ${3: freqoffset: 0.0})
endsnippet

snippet Klang.new1
Klang.new1(${1:rate: nil}, ${2: freqscale: nil}, ${3: freqoffset: nil}, ${4: arrayRef: nil})
endsnippet

snippet Klank.ar
Klank.ar(${1:specificationsArrayRef: nil}, ${2: input: nil}, ${3: freqscale: 1.0}, ${4: freqoffset: 0.0}, ${5: decayscale: 1.0})
endsnippet

snippet Klank.new1
Klank.new1(${1:rate: nil}, ${2: input: nil}, ${3: freqscale: nil}, ${4: freqoffset: nil}, ${5: decayscale: nil}, ${6: arrayRef: nil})
endsnippet

snippet KmeansToBPSet1.ar
KmeansToBPSet1.ar(${1:freq: 440}, ${2: numdatapoints: 20}, ${3: maxnummeans: 4}, ${4: nummeans: 4}, ${5: tnewdata: 1}, ${6: tnewmeans: 1}, ${7: soft: 1.0}, ${8: bufnum: nil}, ${9: mul: 1.0}, ${10: add: 0.0})
endsnippet

snippet Knob.qtClass
Knob.qtClass(${1:})
endsnippet

snippet Knob.new
Knob.new(${1:parent: nil}, ${2: bounds: nil})
endsnippet

snippet LADSPA.ar
LADSPA.ar(${1:nChans: nil}, ${2: id: nil}, ${3: args: [  ]})
endsnippet

snippet LADSPA.initClass
LADSPA.initClass(${1:})
endsnippet

snippet LADSPA.listPlugins
LADSPA.listPlugins(${1:})
endsnippet

snippet LFBrownNoise0.ar
LFBrownNoise0.ar(${1:freq: 20}, ${2: dev: 1.0}, ${3: dist: 0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet LFBrownNoise0.kr
LFBrownNoise0.kr(${1:freq: 20}, ${2: dev: 1.0}, ${3: dist: 0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet LFGauss.ar
LFGauss.ar(${1:duration: 1}, ${2: width: 0.1}, ${3: iphase: 0.0}, ${4: loop: 1}, ${5: doneAction: 0})
endsnippet

snippet LFGauss.kr
LFGauss.kr(${1:duration: 1}, ${2: width: 0.1}, ${3: iphase: 0.0}, ${4: loop: 1}, ${5: doneAction: 0})
endsnippet

snippet LFNoise0.ar
LFNoise0.ar(${1:freq: 500.0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet LFNoise0.kr
LFNoise0.kr(${1:freq: 500.0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet LFPulse.ar
LFPulse.ar(${1:freq: 440.0}, ${2: iphase: 0.0}, ${3: width: 0.5}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet LFPulse.kr
LFPulse.kr(${1:freq: 440.0}, ${2: iphase: 0.0}, ${3: width: 0.5}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet LFSaw.ar
LFSaw.ar(${1:freq: 440.0}, ${2: iphase: 0.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet LFSaw.kr
LFSaw.kr(${1:freq: 440.0}, ${2: iphase: 0.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet LID.running
LID.running(${1:})
endsnippet

snippet LID.initClass
LID.initClass(${1:})
endsnippet

snippet LID.initializeLID
LID.initializeLID(${1:})
endsnippet

snippet LID.findAvailable
LID.findAvailable(${1:name: nil})
endsnippet

snippet LID.postAvailable
LID.postAvailable(${1:})
endsnippet

snippet LID.register
LID.register(${1:name: nil}, ${2: spec: nil})
endsnippet

snippet LID.mouseDeviceSpec
LID.mouseDeviceSpec(${1:})
endsnippet

snippet LID.keyboardDeviceSpec
LID.keyboardDeviceSpec(${1:})
endsnippet

snippet LID.openDevices
LID.openDevices(${1:})
endsnippet

snippet LID.closeAll
LID.closeAll(${1:})
endsnippet

snippet LID.openAt
LID.openAt(${1:index: nil})
endsnippet

snippet LID.findBy
LID.findBy(${1:vendorID: nil}, ${2: productID: nil}, ${3: path: nil}, ${4: version: nil}, ${5: physical: nil}, ${6: unique: nil})
endsnippet

snippet LID.open
LID.open(${1:vendorID: nil}, ${2: productID: nil}, ${3: path: nil}, ${4: version: nil}, ${5: physical: nil}, ${6: unique: nil})
endsnippet

snippet LID.openPath
LID.openPath(${1:path: nil})
endsnippet

snippet LID.new
LID.new(${1:path: nil})
endsnippet

snippet LID.debug_
LID.debug_(${1:onoff: true})
endsnippet

snippet LID.debug
LID.debug(${1:})
endsnippet

snippet LID.addRecvFunc
LID.addRecvFunc(${1:function: nil})
endsnippet

snippet LID.removeRecvFunc
LID.removeRecvFunc(${1:function: nil})
endsnippet

snippet LID.action_
LID.action_(${1:function: nil})
endsnippet

snippet LID.prStartEventLoop
LID.prStartEventLoop(${1:})
endsnippet

snippet LID.prStopEventLoop
LID.prStopEventLoop(${1:})
endsnippet

snippet LIDGui.new
LIDGui.new(${1:device: nil})
endsnippet

snippet LIDSlot.initClass
LIDSlot.initClass(${1:})
endsnippet

snippet LIDSlot.new
LIDSlot.new(${1:device: nil}, ${2: evtType: nil}, ${3: evtCode: nil})
endsnippet

snippet LPCAnalyzer.ar
LPCAnalyzer.ar(${1:input: 0}, ${2: source: 0.01}, ${3: n: 256}, ${4: p: 10}, ${5: testE: 0}, ${6: delta: 0.999}, ${7: windowtype: 0}, ${8: mul: 1.0}, ${9: add: 0.0})
endsnippet

snippet LPCError.ar
LPCError.ar(${1:input: nil}, ${2: p: 10}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet LPCSynth.ar
LPCSynth.ar(${1:buffer: nil}, ${2: signal: nil}, ${3: pointer: nil}, ${4: mul: 1}, ${5: add: 0})
endsnippet

snippet LPCVals.kr
LPCVals.kr(${1:buffer: nil}, ${2: pointer: nil})
endsnippet

snippet LPCVals.ar
LPCVals.ar(${1:buffer: nil}, ${2: pointer: nil})
endsnippet

snippet LPF.ar
LPF.ar(${1:in: 0.0}, ${2: freq: 440.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet LPF.kr
LPF.kr(${1:in: 0.0}, ${2: freq: 440.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet LPF1.ar
LPF1.ar(${1:in: nil}, ${2: freq: 1000})
endsnippet

snippet LPF1.kr
LPF1.kr(${1:in: nil}, ${2: freq: 1000})
endsnippet

snippet LPF18.ar
LPF18.ar(${1:in: nil}, ${2: freq: 100}, ${3: res: 1}, ${4: dist: 0.4})
endsnippet

snippet LPFVS6.ar
LPFVS6.ar(${1:in: nil}, ${2: freq: 1000}, ${3: slope: 0.5})
endsnippet

snippet LPFVS6.kr
LPFVS6.kr(${1:in: nil}, ${2: freq: 1000}, ${3: slope: 0.5})
endsnippet

snippet LPZ1.ar
LPZ1.ar(${1:in: 0.0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet LPZ1.kr
LPZ1.kr(${1:in: 0.0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet LPZ1.coeffs
LPZ1.coeffs(${1:})
endsnippet

snippet LPZ2.ar
LPZ2.ar(${1:in: 0.0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet LPZ2.kr
LPZ2.kr(${1:in: 0.0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet LPZ2.coeffs
LPZ2.coeffs(${1:})
endsnippet

snippet LRHPF.ar
LRHPF.ar(${1:in: nil}, ${2: order: 4}, ${3: freq: 440}, ${4: mul: 1}, ${5: add: 0})
endsnippet

snippet LRHiCut.ar
LRHiCut.ar(${1:in: nil}, ${2: freq: nil}, ${3: order: 2}, ${4: maxOrder: 5})
endsnippet

snippet LRHiCut.kr
LRHiCut.kr(${1:in: nil}, ${2: freq: nil}, ${3: order: 2}, ${4: maxOrder: 5})
endsnippet

snippet LRHiCut.magResponse
LRHiCut.magResponse(${1:freqs: 1000}, ${2: sr: 44100}, ${3: freq: 1200}, ${4: order: 2})
endsnippet

snippet LRLPF.ar
LRLPF.ar(${1:in: nil}, ${2: order: 4}, ${3: freq: 440}, ${4: mul: 1}, ${5: add: 0})
endsnippet

snippet LRLowCut.ar
LRLowCut.ar(${1:in: nil}, ${2: freq: nil}, ${3: order: 2}, ${4: maxOrder: 5})
endsnippet

snippet LRLowCut.kr
LRLowCut.kr(${1:in: nil}, ${2: freq: nil}, ${3: order: 2}, ${4: maxOrder: 5})
endsnippet

snippet LRLowCut.magResponse
LRLowCut.magResponse(${1:freqs: 1000}, ${2: sr: 44100}, ${3: freq: 1200}, ${4: order: 2})
endsnippet

snippet LRUNumberAllocator.new
LRUNumberAllocator.new(${1:lo: nil}, ${2: hi: nil})
endsnippet

snippet LTI.ar
LTI.ar(${1:input: nil}, ${2: bufnuma: 0}, ${3: bufnumb: 1}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet Lag.ar
Lag.ar(${1:in: 0.0}, ${2: lagTime: 0.1}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet Lag.kr
Lag.kr(${1:in: 0.0}, ${2: lagTime: 0.1}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet LagControl.kr
LagControl.kr(${1:values: nil}, ${2: lags: nil})
endsnippet

snippet LagControl.ar
LagControl.ar(${1:values: nil}, ${2: lags: nil})
endsnippet

snippet LagControl.ir
LagControl.ir(${1:})
endsnippet

snippet LagIn.kr
LagIn.kr(${1:bus: 0}, ${2: numChannels: 1}, ${3: lag: 0.1})
endsnippet

snippet LagSelectX.new
LagSelectX.new(${1:which: 0}, ${2: array: nil}, ${3: lag: 0.1})
endsnippet

snippet LagSelectX.getAmps
LagSelectX.getAmps(${1:which: 0}, ${2: size: 10})
endsnippet

snippet LagSelectX.kr
LagSelectX.kr(${1:which: 0}, ${2: array: nil}, ${3: lag: 0.1})
endsnippet

snippet LagSelectX.ar
LagSelectX.ar(${1:which: 0}, ${2: array: nil}, ${3: lag: 0.1})
endsnippet

snippet LagUD.ar
LagUD.ar(${1:in: 0.0}, ${2: lagTimeU: 0.1}, ${3: lagTimeD: 0.1}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet LagUD.kr
LagUD.kr(${1:in: 0.0}, ${2: lagTimeU: 0.1}, ${3: lagTimeD: 0.1}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet LanguageConfig.store
LanguageConfig.store(${1:file: nil})
endsnippet

snippet LanguageConfig.currentPath
LanguageConfig.currentPath(${1:})
endsnippet

snippet LanguageConfig.includePaths
LanguageConfig.includePaths(${1:})
endsnippet

snippet LanguageConfig.addIncludePath
LanguageConfig.addIncludePath(${1:aPath: nil})
endsnippet

snippet LanguageConfig.removeIncludePath
LanguageConfig.removeIncludePath(${1:aPath: nil})
endsnippet

snippet LanguageConfig.excludePaths
LanguageConfig.excludePaths(${1:})
endsnippet

snippet LanguageConfig.addExcludePath
LanguageConfig.addExcludePath(${1:aPath: nil})
endsnippet

snippet LanguageConfig.removeExcludePath
LanguageConfig.removeExcludePath(${1:aPath: nil})
endsnippet

snippet LanguageConfig.postInlineWarnings
LanguageConfig.postInlineWarnings(${1:})
endsnippet

snippet LanguageConfig.postInlineWarnings_
LanguageConfig.postInlineWarnings_(${1:aBoolean: nil})
endsnippet

snippet LanguageConfig.excludeDefaultPaths
LanguageConfig.excludeDefaultPaths(${1:})
endsnippet

snippet LanguageConfig.excludeDefaultPaths_
LanguageConfig.excludeDefaultPaths_(${1:aBoolean: nil})
endsnippet

snippet LastValue.ar
LastValue.ar(${1:in: 0.0}, ${2: diff: 0.01})
endsnippet

snippet LastValue.kr
LastValue.kr(${1:in: 0.0}, ${2: diff: 0.01})
endsnippet

snippet Latch.ar
Latch.ar(${1:in: 0.0}, ${2: trig: 0.0})
endsnippet

snippet Latch.kr
Latch.kr(${1:in: 0.0}, ${2: trig: 0.0})
endsnippet

snippet Latoocarfian2DN.ar
Latoocarfian2DN.ar(${1:minfreq: 11025}, ${2: maxfreq: 22050}, ${3: a: 1}, ${4: b: 3}, ${5: c: 0.5}, ${6: d: 0.5}, ${7: x0: 0.34082301375036}, ${8: y0: -0.38270086971332}, ${9: mul: 1}, ${10: add: 0.0})
endsnippet

snippet Latoocarfian2DN.kr
Latoocarfian2DN.kr(${1:minfreq: 40}, ${2: maxfreq: 100}, ${3: a: 1}, ${4: b: 3}, ${5: c: 0.5}, ${6: d: 0.5}, ${7: x0: 0.34082301375036}, ${8: y0: -0.38270086971332}, ${9: mul: 1}, ${10: add: 0.0})
endsnippet

snippet LatoocarfianN.ar
LatoocarfianN.ar(${1:freq: 22050}, ${2: a: 1}, ${3: b: 3}, ${4: c: 0.5}, ${5: d: 0.5}, ${6: xi: 0.5}, ${7: yi: 0.5}, ${8: mul: 1.0}, ${9: add: 0.0})
endsnippet

snippet LatoocarfianTrig.ar
LatoocarfianTrig.ar(${1:minfreq: 5}, ${2: maxfreq: 10}, ${3: a: 1}, ${4: b: 3}, ${5: c: 0.5}, ${6: d: 0.5}, ${7: x0: 0.34082301375036}, ${8: y0: -0.38270086971332}, ${9: mul: 1}, ${10: add: 0.0})
endsnippet

snippet LatoocarfianTrig.kr
LatoocarfianTrig.kr(${1:minfreq: 5}, ${2: maxfreq: 10}, ${3: a: 1}, ${4: b: 3}, ${5: c: 0.5}, ${6: d: 0.5}, ${7: x0: 0.34082301375036}, ${8: y0: -0.38270086971332}, ${9: mul: 1}, ${10: add: 0.0})
endsnippet

snippet LeakDC.ar
LeakDC.ar(${1:in: 0.0}, ${2: coef: 0.995}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet LeakDC.kr
LeakDC.kr(${1:in: 0.0}, ${2: coef: 0.9}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet LessKeys.initClass
LessKeys.initClass(${1:})
endsnippet

snippet LessKeys.enable
LessKeys.enable(${1:})
endsnippet

snippet LessKeys.disable
LessKeys.disable(${1:})
endsnippet

snippet LevelIndicator.qtClass
LevelIndicator.qtClass(${1:})
endsnippet

snippet LevelIndicator.meterServer
LevelIndicator.meterServer(${1:server: nil})
endsnippet

snippet Library.global
Library.global(${1:})
endsnippet

snippet Library.global_
Library.global_(${1:obj: nil})
endsnippet

snippet Library.initClass
Library.initClass(${1:})
endsnippet

snippet LibraryBase.global
LibraryBase.global(${1:})
endsnippet

snippet LibraryBase.global_
LibraryBase.global_(${1:obj: nil})
endsnippet

snippet LibraryBase.clear
LibraryBase.clear(${1:})
endsnippet

snippet LibraryBase.at
LibraryBase.at(${1:args: [  ]})
endsnippet

snippet LibraryBase.atList
LibraryBase.atList(${1:args: nil})
endsnippet

snippet LibraryBase.putList
LibraryBase.putList(${1:args: nil})
endsnippet

snippet LibraryBase.put
LibraryBase.put(${1:args: [  ]})
endsnippet

snippet LibraryBase.create
LibraryBase.create(${1:args: [  ]})
endsnippet

snippet LibraryBase.postTree
LibraryBase.postTree(${1:})
endsnippet

snippet LinCongN.ar
LinCongN.ar(${1:freq: 22050}, ${2: a: 1.1}, ${3: c: 0.13}, ${4: m: 1.0}, ${5: xi: 0}, ${6: mul: 1.0}, ${7: add: 0.0})
endsnippet

snippet LinExp.ar
LinExp.ar(${1:in: 0.0}, ${2: srclo: 0.0}, ${3: srchi: 1.0}, ${4: dstlo: 1.0}, ${5: dsthi: 2.0})
endsnippet

snippet LinExp.kr
LinExp.kr(${1:in: 0.0}, ${2: srclo: 0.0}, ${3: srchi: 1.0}, ${4: dstlo: 1.0}, ${5: dsthi: 2.0})
endsnippet

snippet LinLin.ar
LinLin.ar(${1:in: 0.0}, ${2: srclo: 0.0}, ${3: srchi: 1.0}, ${4: dstlo: 1.0}, ${5: dsthi: 2.0})
endsnippet

snippet LinLin.kr
LinLin.kr(${1:in: 0.0}, ${2: srclo: 0.0}, ${3: srchi: 1.0}, ${4: dstlo: 1.0}, ${5: dsthi: 2.0})
endsnippet

snippet LinPanAz.ar
LinPanAz.ar(${1:numChans: nil}, ${2: in: nil}, ${3: pos: 0.0}, ${4: level: 1.0}, ${5: width: 2.0}, ${6: orientation: 0.5})
endsnippet

snippet LinPanAz.kr
LinPanAz.kr(${1:numChans: nil}, ${2: in: nil}, ${3: pos: 0.0}, ${4: level: 1.0}, ${5: width: 2.0}, ${6: orientation: 0.5})
endsnippet

snippet LinRand.new
LinRand.new(${1:lo: 0.0}, ${2: hi: 1.0}, ${3: minmax: 0})
endsnippet

snippet LinSelectX.crossfadeClass
LinSelectX.crossfadeClass(${1:})
endsnippet

snippet LinXFade2.ar
LinXFade2.ar(${1:inA: nil}, ${2: inB: 0.0}, ${3: pan: 0.0}, ${4: level: 1.0})
endsnippet

snippet LinXFade2.kr
LinXFade2.kr(${1:inA: nil}, ${2: inB: 0.0}, ${3: pan: 0.0}, ${4: level: 1.0})
endsnippet

snippet Line.ar
Line.ar(${1:start: 0.0}, ${2: end: 1.0}, ${3: dur: 1.0}, ${4: mul: 1.0}, ${5: add: 0.0}, ${6: doneAction: 0})
endsnippet

snippet Line.kr
Line.kr(${1:start: 0.0}, ${2: end: 1.0}, ${3: dur: 1.0}, ${4: mul: 1.0}, ${5: add: 0.0}, ${6: doneAction: 0})
endsnippet

snippet LineLayout.new
LineLayout.new(${1:items: [  ]})
endsnippet

snippet LineLayout.parse
LineLayout.parse(${1:in: nil})
endsnippet

snippet Linen.kr
Linen.kr(${1:gate: 1.0}, ${2: attackTime: 0.01}, ${3: susLevel: 1.0}, ${4: releaseTime: 1.0}, ${5: doneAction: 0})
endsnippet

snippet LinkClock.newFromTempoClock
LinkClock.newFromTempoClock(${1:clock: nil})
endsnippet

snippet LinkedListNode.new
LinkedListNode.new(${1:item: nil})
endsnippet

snippet LinuxPlatform.getTerminalEmulatorCmd
LinuxPlatform.getTerminalEmulatorCmd(${1:})
endsnippet

snippet List.new
List.new(${1:size: 8})
endsnippet

snippet List.newClear
List.newClear(${1:size: 0})
endsnippet

snippet List.copyInstance
List.copyInstance(${1:aList: nil})
endsnippet

snippet List.newUsing
List.newUsing(${1:anArray: nil})
endsnippet

snippet ListDUGen.new
ListDUGen.new(${1:list: nil}, ${2: repeats: 1})
endsnippet

snippet ListPattern.new
ListPattern.new(${1:list: nil}, ${2: repeats: 1})
endsnippet

snippet ListTrig.kr
ListTrig.kr(${1:bufnum: 0}, ${2: reset: 0}, ${3: offset: 0}, ${4: numframes: nil})
endsnippet

snippet ListTrig.categories
ListTrig.categories(${1:})
endsnippet

snippet ListTrig2.kr
ListTrig2.kr(${1:bufnum: 0}, ${2: reset: 0}, ${3: numframes: nil})
endsnippet

snippet ListTrig2.categories
ListTrig2.categories(${1:})
endsnippet

snippet ListView.qtClass
ListView.qtClass(${1:})
endsnippet

snippet ListView.new
ListView.new(${1:parent: nil}, ${2: bounds: nil})
endsnippet

snippet LocalBuf.new
LocalBuf.new(${1:numFrames: 1}, ${2: numChannels: 1})
endsnippet

snippet LocalBuf.new1
LocalBuf.new1(${1:rate: nil}, ${2: args: [  ]})
endsnippet

snippet LocalBuf.newFrom
LocalBuf.newFrom(${1:list: nil})
endsnippet

snippet LocalIn.ar
LocalIn.ar(${1:numChannels: 1}, ${2: default: 0.0})
endsnippet

snippet LocalIn.kr
LocalIn.kr(${1:numChannels: 1}, ${2: default: 0.0})
endsnippet

snippet LocalOut.ar
LocalOut.ar(${1:channelsArray: nil})
endsnippet

snippet LocalOut.kr
LocalOut.kr(${1:channelsArray: nil})
endsnippet

snippet LocalOut.numFixedArgs
LocalOut.numFixedArgs(${1:})
endsnippet

snippet Logger.kr
Logger.kr(${1:inputArray: nil}, ${2: trig: 0.0}, ${3: bufnum: 0}, ${4: reset: 0.0})
endsnippet

snippet Logger.categories
Logger.categories(${1:})
endsnippet

snippet Logistic.ar
Logistic.ar(${1:chaosParam: 3.0}, ${2: freq: 1000.0}, ${3: init: 0.5}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet Logistic.kr
Logistic.kr(${1:chaosParam: 3.0}, ${2: freq: 1000.0}, ${3: init: 0.5}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet LoopBuf.ar
LoopBuf.ar(${1:numChannels: nil}, ${2: bufnum: 0}, ${3: rate: 1.0}, ${4: gate: 1.0}, ${5: startPos: 0.0}, ${6: startLoop: nil}, ${7: endLoop: nil}, ${8: interpolation: 2})
endsnippet

snippet Lorenz2DN.ar
Lorenz2DN.ar(${1:minfreq: 11025}, ${2: maxfreq: 22050}, ${3: s: 10}, ${4: r: 28}, ${5: b: 2.6666667}, ${6: h: 0.02}, ${7: x0: 0.090879182417163}, ${8: y0: 2.97077458055}, ${9: z0: 24.282041054363}, ${10: mul: 1.0}, ${11: add: 0.0})
endsnippet

snippet Lorenz2DN.kr
Lorenz2DN.kr(${1:minfreq: 40}, ${2: maxfreq: 100}, ${3: s: 10}, ${4: r: 28}, ${5: b: 2.6666667}, ${6: h: 0.02}, ${7: x0: 0.090879182417163}, ${8: y0: 2.97077458055}, ${9: z0: 24.282041054363}, ${10: mul: 1.0}, ${11: add: 0.0})
endsnippet

snippet LorenzL.ar
LorenzL.ar(${1:freq: 22050}, ${2: s: 10}, ${3: r: 28}, ${4: b: 2.667}, ${5: h: 0.05}, ${6: xi: 0.1}, ${7: yi: 0}, ${8: zi: 0}, ${9: mul: 1.0}, ${10: add: 0.0})
endsnippet

snippet LorenzTrig.ar
LorenzTrig.ar(${1:minfreq: 11025}, ${2: maxfreq: 22050}, ${3: s: 10}, ${4: r: 28}, ${5: b: 2.6666667}, ${6: h: 0.02}, ${7: x0: 0.090879182417163}, ${8: y0: 2.97077458055}, ${9: z0: 24.282041054363}, ${10: mul: 1.0}, ${11: add: 0.0})
endsnippet

snippet LorenzTrig.kr
LorenzTrig.kr(${1:minfreq: 40}, ${2: maxfreq: 100}, ${3: s: 10}, ${4: r: 28}, ${5: b: 2.6666667}, ${6: h: 0.02}, ${7: x0: 0.090879182417163}, ${8: y0: 2.97077458055}, ${9: z0: 24.282041054363}, ${10: mul: 1.0}, ${11: add: 0.0})
endsnippet

snippet LotkaVolterra.categories
LotkaVolterra.categories(${1:})
endsnippet

snippet LotkaVolterra.ar
LotkaVolterra.ar(${1:freq: 22050}, ${2: a: 1.5}, ${3: b: 1.5}, ${4: c: 0.5}, ${5: d: 1.5}, ${6: h: 0.05}, ${7: xi: 1}, ${8: yi: 0.2}, ${9: mul: 1.0}, ${10: add: 0.0})
endsnippet

snippet Loudness.kr
Loudness.kr(${1:chain: nil}, ${2: smask: 0.25}, ${3: tmask: 1})
endsnippet

snippet LowShelf.ar
LowShelf.ar(${1:in: nil}, ${2: freq: 440}, ${3: shelfslope: 1}, ${4: dbgain: 0}, ${5: mul: 1}, ${6: add: 0})
endsnippet

snippet MCLDChaosGen.categories
MCLDChaosGen.categories(${1:})
endsnippet

snippet MFCC.kr
MFCC.kr(${1:chain: nil}, ${2: numcoeff: 13})
endsnippet

snippet MIDIBendWindow.initClass
MIDIBendWindow.initClass(${1:})
endsnippet

snippet MIDIBendWindow.new
MIDIBendWindow.new(${1:nC: 16}, ${2: busOffset: 0}, ${3: initValues: nil}, ${4: historySize: 1}, ${5: maxMIDIVal: 16383}, ${6: inAction: nil}, ${7: left: 580}, ${8: bottom: 30}, ${9: height: 290})
endsnippet

snippet MIDIBendWindow.new1024
MIDIBendWindow.new1024(${1:inAction: nil})
endsnippet

snippet MIDIBendWindow.connect
MIDIBendWindow.connect(${1:midiFunc: nil})
endsnippet

snippet MIDIBendWindow.disconnect
MIDIBendWindow.disconnect(${1:})
endsnippet

snippet MIDIBendWindow.midiRecorderAdd
MIDIBendWindow.midiRecorderAdd(${1:i: nil}, ${2: val: nil})
endsnippet

snippet MIDIBendWindow.playFile
MIDIBendWindow.playFile(${1:file: nil}, ${2: doneAction: nil})
endsnippet

snippet MIDIBendWindow.importFile
MIDIBendWindow.importFile(${1:file: nil})
endsnippet

snippet MIDICinetixWindow.close
MIDICinetixWindow.close(${1:})
endsnippet

snippet MIDICinetixWindow.wheels
MIDICinetixWindow.wheels(${1:busOffset: 32}, ${2: inAction: nil})
endsnippet

snippet MIDICinetixWindow.new
MIDICinetixWindow.new(${1:channels: 4}, ${2: busOffset: 32}, ${3: reverse: nil}, ${4: inAction: nil})
endsnippet

snippet MIDIClient.init
MIDIClient.init(${1:inports: nil}, ${2: outports: nil}, ${3: verbose: true})
endsnippet

snippet MIDIClient.list
MIDIClient.list(${1:})
endsnippet

snippet MIDIClient.prInit
MIDIClient.prInit(${1:inports: nil}, ${2: outports: nil})
endsnippet

snippet MIDIClient.prInitClient
MIDIClient.prInitClient(${1:})
endsnippet

snippet MIDIClient.prList
MIDIClient.prList(${1:})
endsnippet

snippet MIDIClient.disposeClient
MIDIClient.disposeClient(${1:})
endsnippet

snippet MIDIClient.prDisposeClient
MIDIClient.prDisposeClient(${1:})
endsnippet

snippet MIDIClient.restart
MIDIClient.restart(${1:})
endsnippet

snippet MIDIClient.externalSources
MIDIClient.externalSources(${1:})
endsnippet

snippet MIDIClient.externalDestinations
MIDIClient.externalDestinations(${1:})
endsnippet

snippet MIDIClient.getClientID
MIDIClient.getClientID(${1:})
endsnippet

snippet MIDIControlWindow.close
MIDIControlWindow.close(${1:})
endsnippet

snippet MIDIControlWindow.initClass
MIDIControlWindow.initClass(${1:})
endsnippet

snippet MIDIControlWindow.addFaderAction
MIDIControlWindow.addFaderAction(${1:n: 0}, ${2: action: nil})
endsnippet

snippet MIDIControlWindow.addTreshAction
MIDIControlWindow.addTreshAction(${1:n: 0}, ${2: val: 0.5}, ${3: up: nil}, ${4: down: nil})
endsnippet

snippet MIDIControlWindow.new
MIDIControlWindow.new(${1:nC: 16}, ${2: busOffset: 48}, ${3: type: channel}, ${4: cc: 7}, ${5: ch: 0}, ${6: initValues: nil}, ${7: historySize: 1}, ${8: inAction: nil})
endsnippet

snippet MIDIEndPoint.new
MIDIEndPoint.new(${1:device: nil}, ${2: name: nil}, ${3: uid: nil})
endsnippet

snippet MIDIEvent.new
MIDIEvent.new(${1:status: nil}, ${2: port: nil}, ${3: chan: nil}, ${4: b: nil}, ${5: c: nil}, ${6: thread: nil})
endsnippet

snippet MIDIEventRecorder.new
MIDIEventRecorder.new(${1:maxEvents: nil}, ${2: startTime: nil})
endsnippet

snippet MIDIEventRecorder.arm
MIDIEventRecorder.arm(${1:maxEvents: nil})
endsnippet

snippet MIDIEventRecorder.with
MIDIEventRecorder.with(${1:events: [  ]})
endsnippet

snippet MIDIEventRecorder.initClass
MIDIEventRecorder.initClass(${1:})
endsnippet

snippet MIDIFunc.initClass
MIDIFunc.initClass(${1:})
endsnippet

snippet MIDIFunc.trace
MIDIFunc.trace(${1:bool: true})
endsnippet

snippet MIDIFunc.cmdPeriod
MIDIFunc.cmdPeriod(${1:})
endsnippet

snippet MIDIFunc.new
MIDIFunc.new(${1:func: nil}, ${2: msgNum: nil}, ${3: chan: nil}, ${4: msgType: nil}, ${5: srcID: nil}, ${6: argTemplate: nil}, ${7: dispatcher: nil})
endsnippet

snippet MIDIFunc.cc
MIDIFunc.cc(${1:func: nil}, ${2: ccNum: nil}, ${3: chan: nil}, ${4: srcID: nil}, ${5: argTemplate: nil}, ${6: dispatcher: nil})
endsnippet

snippet MIDIFunc.noteOn
MIDIFunc.noteOn(${1:func: nil}, ${2: noteNum: nil}, ${3: chan: nil}, ${4: srcID: nil}, ${5: argTemplate: nil}, ${6: dispatcher: nil})
endsnippet

snippet MIDIFunc.noteOff
MIDIFunc.noteOff(${1:func: nil}, ${2: noteNum: nil}, ${3: chan: nil}, ${4: srcID: nil}, ${5: argTemplate: nil}, ${6: dispatcher: nil})
endsnippet

snippet MIDIFunc.polytouch
MIDIFunc.polytouch(${1:func: nil}, ${2: noteNum: nil}, ${3: chan: nil}, ${4: srcID: nil}, ${5: argTemplate: nil}, ${6: dispatcher: nil})
endsnippet

snippet MIDIFunc.touch
MIDIFunc.touch(${1:func: nil}, ${2: chan: nil}, ${3: srcID: nil}, ${4: argTemplate: nil}, ${5: dispatcher: nil})
endsnippet

snippet MIDIFunc.bend
MIDIFunc.bend(${1:func: nil}, ${2: chan: nil}, ${3: srcID: nil}, ${4: argTemplate: nil}, ${5: dispatcher: nil})
endsnippet

snippet MIDIFunc.program
MIDIFunc.program(${1:func: nil}, ${2: chan: nil}, ${3: srcID: nil}, ${4: argTemplate: nil}, ${5: dispatcher: nil})
endsnippet

snippet MIDIFunc.sysex
MIDIFunc.sysex(${1:func: nil}, ${2: srcID: nil}, ${3: argTemplate: nil}, ${4: dispatcher: nil})
endsnippet

snippet MIDIFunc.mtcQuarterFrame
MIDIFunc.mtcQuarterFrame(${1:func: nil}, ${2: srcID: nil}, ${3: argTemplate: nil}, ${4: dispatcher: nil})
endsnippet

snippet MIDIFunc.smpte
MIDIFunc.smpte(${1:func: nil}, ${2: srcID: nil}, ${3: argTemplate: nil}, ${4: dispatcher: nil})
endsnippet

snippet MIDIFunc.songPosition
MIDIFunc.songPosition(${1:func: nil}, ${2: srcID: nil}, ${3: argTemplate: nil}, ${4: dispatcher: nil})
endsnippet

snippet MIDIFunc.songSelect
MIDIFunc.songSelect(${1:func: nil}, ${2: srcID: nil}, ${3: argTemplate: nil}, ${4: dispatcher: nil})
endsnippet

snippet MIDIFunc.tuneRequest
MIDIFunc.tuneRequest(${1:func: nil}, ${2: srcID: nil}, ${3: dispatcher: nil})
endsnippet

snippet MIDIFunc.midiClock
MIDIFunc.midiClock(${1:func: nil}, ${2: srcID: nil}, ${3: dispatcher: nil})
endsnippet

snippet MIDIFunc.sysrt
MIDIFunc.sysrt(${1:func: nil}, ${2: index: nil}, ${3: srcID: nil}, ${4: argTemplate: nil}, ${5: dispatcher: nil})
endsnippet

snippet MIDIFunc.tick
MIDIFunc.tick(${1:func: nil}, ${2: srcID: nil}, ${3: dispatcher: nil})
endsnippet

snippet MIDIFunc.start
MIDIFunc.start(${1:func: nil}, ${2: srcID: nil}, ${3: dispatcher: nil})
endsnippet

snippet MIDIFunc.continue
MIDIFunc.continue(${1:func: nil}, ${2: srcID: nil}, ${3: dispatcher: nil})
endsnippet

snippet MIDIFunc.stop
MIDIFunc.stop(${1:func: nil}, ${2: srcID: nil}, ${3: dispatcher: nil})
endsnippet

snippet MIDIFunc.activeSense
MIDIFunc.activeSense(${1:func: nil}, ${2: srcID: nil}, ${3: dispatcher: nil})
endsnippet

snippet MIDIFunc.reset
MIDIFunc.reset(${1:func: nil}, ${2: srcID: nil}, ${3: dispatcher: nil})
endsnippet

snippet MIDIFuncBothCAMessageMatcher.new
MIDIFuncBothCAMessageMatcher.new(${1:chanArray: nil}, ${2: srcID: nil}, ${3: func: nil})
endsnippet

snippet MIDIFuncBothMessageMatcher.new
MIDIFuncBothMessageMatcher.new(${1:chan: nil}, ${2: srcID: nil}, ${3: func: nil})
endsnippet

snippet MIDIFuncChanArrayMessageMatcher.new
MIDIFuncChanArrayMessageMatcher.new(${1:chanArray: nil}, ${2: func: nil})
endsnippet

snippet MIDIFuncChanMessageMatcher.new
MIDIFuncChanMessageMatcher.new(${1:chan: nil}, ${2: func: nil})
endsnippet

snippet MIDIFuncSrcMessageMatcher.new
MIDIFuncSrcMessageMatcher.new(${1:srcID: nil}, ${2: func: nil})
endsnippet

snippet MIDIIn.addFuncTo
MIDIIn.addFuncTo(${1:what: nil}, ${2: func: nil})
endsnippet

snippet MIDIIn.removeFuncFrom
MIDIIn.removeFuncFrom(${1:what: nil}, ${2: func: nil})
endsnippet

snippet MIDIIn.replaceFuncTo
MIDIIn.replaceFuncTo(${1:what: nil}, ${2: func: nil}, ${3: newFunc: nil})
endsnippet

snippet MIDIIn.waitNoteOn
MIDIIn.waitNoteOn(${1:port: nil}, ${2: chan: nil}, ${3: note: nil}, ${4: veloc: nil})
endsnippet

snippet MIDIIn.waitNoteOff
MIDIIn.waitNoteOff(${1:port: nil}, ${2: chan: nil}, ${3: note: nil}, ${4: veloc: nil})
endsnippet

snippet MIDIIn.waitPoly
MIDIIn.waitPoly(${1:port: nil}, ${2: chan: nil}, ${3: note: nil}, ${4: veloc: nil})
endsnippet

snippet MIDIIn.waitTouch
MIDIIn.waitTouch(${1:port: nil}, ${2: chan: nil}, ${3: val: nil})
endsnippet

snippet MIDIIn.waitControl
MIDIIn.waitControl(${1:port: nil}, ${2: chan: nil}, ${3: num: nil}, ${4: val: nil})
endsnippet

snippet MIDIIn.waitBend
MIDIIn.waitBend(${1:port: nil}, ${2: chan: nil}, ${3: val: nil})
endsnippet

snippet MIDIIn.waitProgram
MIDIIn.waitProgram(${1:port: nil}, ${2: chan: nil}, ${3: num: nil})
endsnippet

snippet MIDIIn.doAction
MIDIIn.doAction(${1:src: nil}, ${2: status: nil}, ${3: a: nil}, ${4: b: nil}, ${5: c: nil})
endsnippet

snippet MIDIIn.doNoteOnAction
MIDIIn.doNoteOnAction(${1:src: nil}, ${2: chan: nil}, ${3: num: nil}, ${4: veloc: nil})
endsnippet

snippet MIDIIn.doNoteOffAction
MIDIIn.doNoteOffAction(${1:src: nil}, ${2: chan: nil}, ${3: num: nil}, ${4: veloc: nil})
endsnippet

snippet MIDIIn.doPolyTouchAction
MIDIIn.doPolyTouchAction(${1:src: nil}, ${2: chan: nil}, ${3: num: nil}, ${4: val: nil})
endsnippet

snippet MIDIIn.doControlAction
MIDIIn.doControlAction(${1:src: nil}, ${2: chan: nil}, ${3: num: nil}, ${4: val: nil})
endsnippet

snippet MIDIIn.doProgramAction
MIDIIn.doProgramAction(${1:src: nil}, ${2: chan: nil}, ${3: val: nil})
endsnippet

snippet MIDIIn.doTouchAction
MIDIIn.doTouchAction(${1:src: nil}, ${2: chan: nil}, ${3: val: nil})
endsnippet

snippet MIDIIn.doBendAction
MIDIIn.doBendAction(${1:src: nil}, ${2: chan: nil}, ${3: val: nil})
endsnippet

snippet MIDIIn.doSysexAction
MIDIIn.doSysexAction(${1:src: nil}, ${2: packet: nil})
endsnippet

snippet MIDIIn.doInvalidSysexAction
MIDIIn.doInvalidSysexAction(${1:src: nil}, ${2: packet: nil})
endsnippet

snippet MIDIIn.doSysrtAction
MIDIIn.doSysrtAction(${1:src: nil}, ${2: index: nil}, ${3: val: nil})
endsnippet

snippet MIDIIn.doSMPTEaction
MIDIIn.doSMPTEaction(${1:src: nil}, ${2: frameRate: nil}, ${3: timecode: nil})
endsnippet

snippet MIDIIn.findPort
MIDIIn.findPort(${1:deviceName: nil}, ${2: portName: nil})
endsnippet

snippet MIDIIn.disconnectAll
MIDIIn.disconnectAll(${1:})
endsnippet

snippet MIDIIn.connectAll
MIDIIn.connectAll(${1:verbose: true})
endsnippet

snippet MIDIIn.connect
MIDIIn.connect(${1:inport: 0}, ${2: device: 0})
endsnippet

snippet MIDIIn.disconnect
MIDIIn.disconnect(${1:inport: 0}, ${2: device: 0})
endsnippet

snippet MIDIIn.connectByUID
MIDIIn.connectByUID(${1:inport: nil}, ${2: uid: nil})
endsnippet

snippet MIDIIn.disconnectByUID
MIDIIn.disconnectByUID(${1:inport: nil}, ${2: uid: nil})
endsnippet

snippet MIDIIn.prDispatchEvent
MIDIIn.prDispatchEvent(${1:eventList: nil}, ${2: status: nil}, ${3: port: nil}, ${4: chan: nil}, ${5: b: nil}, ${6: c: nil})
endsnippet

snippet MIDIMessageDispatcher.new
MIDIMessageDispatcher.new(${1:messageType: nil})
endsnippet

snippet MIDIOut.new
MIDIOut.new(${1:port: nil}, ${2: uid: nil})
endsnippet

snippet MIDIOut.newByName
MIDIOut.newByName(${1:deviceName: nil}, ${2: portName: nil}, ${3: dieIfNotFound: true})
endsnippet

snippet MIDIOut.findPort
MIDIOut.findPort(${1:deviceName: nil}, ${2: portName: nil})
endsnippet

snippet MIDIOut.connect
MIDIOut.connect(${1:outport: 0}, ${2: device: 0})
endsnippet

snippet MIDIOut.disconnect
MIDIOut.disconnect(${1:outport: 0}, ${2: device: 0})
endsnippet

snippet MIDIOut.connectByUID
MIDIOut.connectByUID(${1:outport: nil}, ${2: uid: nil})
endsnippet

snippet MIDIOut.disconnectByUID
MIDIOut.disconnectByUID(${1:outport: nil}, ${2: uid: nil})
endsnippet

snippet MIDIResponder.removeAll
MIDIResponder.removeAll(${1:})
endsnippet

snippet MIDISMPTEAssembler.new
MIDISMPTEAssembler.new(${1:func: nil})
endsnippet

snippet MIDITouchWindow.initClass
MIDITouchWindow.initClass(${1:})
endsnippet

snippet MIDITouchWindow.new
MIDITouchWindow.new(${1:nC: 16}, ${2: busOffset: 48}, ${3: initValues: nil}, ${4: historySize: 1}, ${5: inAction: nil})
endsnippet

snippet MIDITouchWindow.connect
MIDITouchWindow.connect(${1:midiFunc: nil})
endsnippet

snippet MIDITouchWindow.disconnect
MIDITouchWindow.disconnect(${1:})
endsnippet

snippet MIDITouchWindow.midiRecorderAdd
MIDITouchWindow.midiRecorderAdd(${1:i: nil}, ${2: val: nil})
endsnippet

snippet MIDITouchWindow.playFile
MIDITouchWindow.playFile(${1:file: nil}, ${2: doneAction: nil})
endsnippet

snippet MIDITouchWindow.importFile
MIDITouchWindow.importFile(${1:file: nil})
endsnippet

snippet MIDITouchWindow.buttonActions
MIDITouchWindow.buttonActions(${1:downAction: nil}, ${2: upAction: nil})
endsnippet

snippet MIDITouchWindow.buttons
MIDITouchWindow.buttons(${1:nC: 16}, ${2: downAction: nil}, ${3: upAction: nil}, ${4: busOffset: 48}, ${5: toBusses: false})
endsnippet

snippet MIDIValueMatcher.new
MIDIValueMatcher.new(${1:argTemplate: nil}, ${2: func: nil})
endsnippet

snippet MIDIWindow.new
MIDIWindow.new(${1:connect: false}, ${2: current: nil})
endsnippet

snippet MIDIdef.initClass
MIDIdef.initClass(${1:})
endsnippet

snippet MIDIdef.new
MIDIdef.new(${1:key: nil}, ${2: func: nil}, ${3: msgNum: nil}, ${4: chan: nil}, ${5: msgType: nil}, ${6: srcID: nil}, ${7: argTemplate: nil}, ${8: dispatcher: nil})
endsnippet

snippet MIDIdef.cc
MIDIdef.cc(${1:key: nil}, ${2: func: nil}, ${3: ccNum: nil}, ${4: chan: nil}, ${5: srcID: nil}, ${6: argTemplate: nil}, ${7: dispatcher: nil})
endsnippet

snippet MIDIdef.noteOn
MIDIdef.noteOn(${1:key: nil}, ${2: func: nil}, ${3: noteNum: nil}, ${4: chan: nil}, ${5: srcID: nil}, ${6: argTemplate: nil}, ${7: dispatcher: nil})
endsnippet

snippet MIDIdef.noteOff
MIDIdef.noteOff(${1:key: nil}, ${2: func: nil}, ${3: noteNum: nil}, ${4: chan: nil}, ${5: srcID: nil}, ${6: argTemplate: nil}, ${7: dispatcher: nil})
endsnippet

snippet MIDIdef.polytouch
MIDIdef.polytouch(${1:key: nil}, ${2: func: nil}, ${3: noteNum: nil}, ${4: chan: nil}, ${5: srcID: nil}, ${6: argTemplate: nil}, ${7: dispatcher: nil})
endsnippet

snippet MIDIdef.touch
MIDIdef.touch(${1:key: nil}, ${2: func: nil}, ${3: chan: nil}, ${4: srcID: nil}, ${5: argTemplate: nil}, ${6: dispatcher: nil})
endsnippet

snippet MIDIdef.bend
MIDIdef.bend(${1:key: nil}, ${2: func: nil}, ${3: chan: nil}, ${4: srcID: nil}, ${5: argTemplate: nil}, ${6: dispatcher: nil})
endsnippet

snippet MIDIdef.program
MIDIdef.program(${1:key: nil}, ${2: func: nil}, ${3: chan: nil}, ${4: srcID: nil}, ${5: argTemplate: nil}, ${6: dispatcher: nil})
endsnippet

snippet MIDIdef.sysex
MIDIdef.sysex(${1:key: nil}, ${2: func: nil}, ${3: srcID: nil}, ${4: argTemplate: nil}, ${5: dispatcher: nil})
endsnippet

snippet MIDIdef.mtcQuarterFrame
MIDIdef.mtcQuarterFrame(${1:key: nil}, ${2: func: nil}, ${3: srcID: nil}, ${4: argTemplate: nil}, ${5: dispatcher: nil})
endsnippet

snippet MIDIdef.smpte
MIDIdef.smpte(${1:key: nil}, ${2: func: nil}, ${3: srcID: nil}, ${4: argTemplate: nil}, ${5: dispatcher: nil})
endsnippet

snippet MIDIdef.songPosition
MIDIdef.songPosition(${1:key: nil}, ${2: func: nil}, ${3: srcID: nil}, ${4: argTemplate: nil}, ${5: dispatcher: nil})
endsnippet

snippet MIDIdef.songSelect
MIDIdef.songSelect(${1:key: nil}, ${2: func: nil}, ${3: srcID: nil}, ${4: argTemplate: nil}, ${5: dispatcher: nil})
endsnippet

snippet MIDIdef.tuneRequest
MIDIdef.tuneRequest(${1:key: nil}, ${2: func: nil}, ${3: srcID: nil}, ${4: dispatcher: nil})
endsnippet

snippet MIDIdef.midiClock
MIDIdef.midiClock(${1:key: nil}, ${2: func: nil}, ${3: srcID: nil}, ${4: dispatcher: nil})
endsnippet

snippet MIDIdef.sysrt
MIDIdef.sysrt(${1:key: nil}, ${2: func: nil}, ${3: index: nil}, ${4: srcID: nil}, ${5: argTemplate: nil}, ${6: dispatcher: nil})
endsnippet

snippet MIDIdef.tick
MIDIdef.tick(${1:key: nil}, ${2: func: nil}, ${3: srcID: nil}, ${4: dispatcher: nil})
endsnippet

snippet MIDIdef.start
MIDIdef.start(${1:key: nil}, ${2: func: nil}, ${3: srcID: nil}, ${4: dispatcher: nil})
endsnippet

snippet MIDIdef.continue
MIDIdef.continue(${1:key: nil}, ${2: func: nil}, ${3: srcID: nil}, ${4: dispatcher: nil})
endsnippet

snippet MIDIdef.stop
MIDIdef.stop(${1:key: nil}, ${2: func: nil}, ${3: srcID: nil}, ${4: dispatcher: nil})
endsnippet

snippet MIDIdef.activeSense
MIDIdef.activeSense(${1:key: nil}, ${2: func: nil}, ${3: srcID: nil}, ${4: dispatcher: nil})
endsnippet

snippet MIDIdef.reset
MIDIdef.reset(${1:key: nil}, ${2: func: nil}, ${3: srcID: nil}, ${4: dispatcher: nil})
endsnippet

snippet MIDIdef.freeAll
MIDIdef.freeAll(${1:})
endsnippet

snippet MServer.new
MServer.new(${1:name: nil}, ${2: addr: nil}, ${3: options: nil}, ${4: clientID: 0}, ${5: n: nil})
endsnippet

snippet MServer.new1
MServer.new1(${1:names: nil}, ${2: adresses: nil}, ${3: options: nil}, ${4: hostName: nil}, ${5: synthDefDir: nil}, ${6: clientID: 0})
endsnippet

snippet Main.version
Main.version(${1:})
endsnippet

snippet Main.scVersionMajor
Main.scVersionMajor(${1:})
endsnippet

snippet Main.scVersionMinor
Main.scVersionMinor(${1:})
endsnippet

snippet Main.scVersionPatch
Main.scVersionPatch(${1:})
endsnippet

snippet Main.scVersionTweak
Main.scVersionTweak(${1:})
endsnippet

snippet Main.versionAtLeast
Main.versionAtLeast(${1:maj: nil}, ${2: min: nil}, ${3: patch: nil})
endsnippet

snippet Main.versionAtMost
Main.versionAtMost(${1:maj: nil}, ${2: min: nil}, ${3: patch: nil})
endsnippet

snippet Main.overwriteMsg
Main.overwriteMsg(${1:})
endsnippet

snippet Main.scVersionPostfix
Main.scVersionPostfix(${1:})
endsnippet

snippet Main.packages
Main.packages(${1:})
endsnippet

snippet MainMenu.initClass
MainMenu.initClass(${1:})
endsnippet

snippet MainMenu.initBuiltInMenus
MainMenu.initBuiltInMenus(${1:})
endsnippet

snippet MainMenu.register
MainMenu.register(${1:action: nil}, ${2: menu: nil}, ${3: group: none})
endsnippet

snippet MainMenu.unregister
MainMenu.unregister(${1:removeAction: nil})
endsnippet

snippet MainMenu.registerQuarkMenu
MainMenu.registerQuarkMenu(${1:quarkName: nil}, ${2: menu: nil})
endsnippet

snippet MainMenu.unregisterQuarkMenu
MainMenu.unregisterQuarkMenu(${1:quarkName: nil})
endsnippet

snippet MainMenu.clear
MainMenu.clear(${1:})
endsnippet

snippet MainMenu.add
MainMenu.add(${1:menu: nil})
endsnippet

snippet MainMenu.remove
MainMenu.remove(${1:menu: nil})
endsnippet

snippet MainMenu.insert
MainMenu.insert(${1:index: nil}, ${2: menu: nil})
endsnippet

snippet MainMenu.prGetMenu
MainMenu.prGetMenu(${1:name: nil})
endsnippet

snippet MainMenu.prGetMenuGroup
MainMenu.prGetMenuGroup(${1:menuName: nil}, ${2: groupName: nil})
endsnippet

snippet MainMenu.prUpdateServersMenu
MainMenu.prUpdateServersMenu(${1:})
endsnippet

snippet MainMenu.prBuildAppMenus
MainMenu.prBuildAppMenus(${1:})
endsnippet

snippet MainMenu.prUpdate
MainMenu.prUpdate(${1:})
endsnippet

snippet MainMenu.prSetAppMenus
MainMenu.prSetAppMenus(${1:menus: nil})
endsnippet

snippet MantissaMask.ar
MantissaMask.ar(${1:in: 0.0}, ${2: bits: 3}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet MantissaMask.kr
MantissaMask.kr(${1:in: 0.0}, ${2: bits: 3}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet MarkovSynth.ar
MarkovSynth.ar(${1:in: 0.0}, ${2: isRecording: 1}, ${3: waitTime: 2}, ${4: tableSize: 10})
endsnippet

snippet MasterEQ.new
MasterEQ.new(${1:numCha: 2}, ${2: server: nil})
endsnippet

snippet MasterEQ.stop
MasterEQ.stop(${1:})
endsnippet

snippet MasterEQ.start
MasterEQ.start(${1:})
endsnippet

snippet MasterEQ.newEQ
MasterEQ.newEQ(${1:numCha: 2}, ${2: server: nil})
endsnippet

snippet MasterSplay.initClass
MasterSplay.initClass(${1:})
endsnippet

snippet MasterSplay.new
MasterSplay.new(${1:inFrom: 4}, ${2: inTo: 2})
endsnippet

snippet MasterSplay.synthDef
MasterSplay.synthDef(${1:})
endsnippet

snippet MasterSplay.cmdPeriod
MasterSplay.cmdPeriod(${1:})
endsnippet

snippet MasterSplay.start
MasterSplay.start(${1:})
endsnippet

snippet MasterSplay.stop
MasterSplay.stop(${1:})
endsnippet

snippet MatchingP.ar
MatchingP.ar(${1:dict: 0}, ${2: in: 0}, ${3: dictsize: 1}, ${4: ntofind: 1}, ${5: hop: 1}, ${6: method: 0})
endsnippet

snippet MatchingP.kr
MatchingP.kr(${1:dict: 0}, ${2: in: 0}, ${3: dictsize: 1}, ${4: ntofind: 1}, ${5: hop: 1}, ${6: method: 0})
endsnippet

snippet MatchingP.categories
MatchingP.categories(${1:})
endsnippet

snippet MatchingPResynth.ar
MatchingPResynth.ar(${1:dict: nil}, ${2: method: 0}, ${3: trigger: nil}, ${4: residual: 0}, ${5: activs: [  ]})
endsnippet

snippet MatchingPResynth.kr
MatchingPResynth.kr(${1:dict: nil}, ${2: method: 0}, ${3: trigger: nil}, ${4: residual: 0}, ${5: activs: [  ]})
endsnippet

snippet MatchingPResynth.categories
MatchingPResynth.categories(${1:})
endsnippet

snippet Max.kr
Max.kr(${1:in: nil}, ${2: numsamp: 64})
endsnippet

snippet MaxItem.new
MaxItem.new(${1:array: nil}, ${2: force: false})
endsnippet

snippet MaxItem.abs
MaxItem.abs(${1:array: nil})
endsnippet

snippet MaxItem.switch
MaxItem.switch(${1:array: nil}, ${2: switchArray: nil})
endsnippet

snippet MaxLocalBufs.new
MaxLocalBufs.new(${1:})
endsnippet

snippet Maxamp.ar
Maxamp.ar(${1:in: nil}, ${2: numSamps: 1000})
endsnippet

snippet MdaPiano.ar
MdaPiano.ar(${1:freq: 440.0}, ${2: gate: 1}, ${3: vel: 100}, ${4: decay: 0.8}, ${5: release: 0.8}, ${6: hard: 0.8}, ${7: velhard: 0.8}, ${8: muffle: 0.8}, ${9: velmuff: 0.8}, ${10: velcurve: 0.8}, ${11: stereo: 0.2}, ${12: tune: 0.5}, ${13: random: 0.1}, ${14: stretch: 0.1}, ${15: sustain: 0}, ${16: mul: 1}, ${17: add: 0})
endsnippet

snippet MeanTriggered.ar
MeanTriggered.ar(${1:in: 0.0}, ${2: trig: 0.0}, ${3: length: 10}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet MeanTriggered.kr
MeanTriggered.kr(${1:in: 0.0}, ${2: trig: 0.0}, ${3: length: 10}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet MeanTriggered.categories
MeanTriggered.categories(${1:})
endsnippet

snippet Meddis.ar
Meddis.ar(${1:input: nil}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet Meddis.kr
Meddis.kr(${1:input: nil}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet Median.ar
Median.ar(${1:length: 3}, ${2: in: 0.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet Median.kr
Median.kr(${1:length: 3}, ${2: in: 0.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet MedianSeparation.new
MedianSeparation.new(${1:fft: nil}, ${2: fftharmonic: nil}, ${3: fftpercussive: nil}, ${4: fftsize: 1024}, ${5: mediansize: 17}, ${6: hardorsoft: 0}, ${7: p: 2}, ${8: medianormax: 0})
endsnippet

snippet MedianTriggered.ar
MedianTriggered.ar(${1:in: 0.0}, ${2: trig: 0.0}, ${3: length: 10}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet MedianTriggered.kr
MedianTriggered.kr(${1:in: 0.0}, ${2: trig: 0.0}, ${3: length: 10}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet MedianTriggered.categories
MedianTriggered.categories(${1:})
endsnippet

snippet MembraneCircle.ar
MembraneCircle.ar(${1:excitation: nil}, ${2: tension: 0.05}, ${3: loss: 0.99999}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet MembraneHexagon.ar
MembraneHexagon.ar(${1:excitation: nil}, ${2: tension: 0.05}, ${3: loss: 0.99999}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet Menu.qtClass
Menu.qtClass(${1:})
endsnippet

snippet Menu.new
Menu.new(${1:actions: [  ]})
endsnippet

snippet Menu.newFrom
Menu.newFrom(${1:otherMenu: nil})
endsnippet

snippet MenuAction.qtClass
MenuAction.qtClass(${1:})
endsnippet

snippet MenuAction.new
MenuAction.new(${1:string: nil}, ${2: function: nil})
endsnippet

snippet MenuAction.separator
MenuAction.separator(${1:string: nil})
endsnippet

snippet Message.new
Message.new(${1:receiver: nil}, ${2: selector: nil}, ${3: args: nil})
endsnippet

snippet MeterSync.new
MeterSync.new(${1:clock: nil}, ${2: id: nil}, ${3: ports: nil})
endsnippet

snippet MethodError.new
MethodError.new(${1:what: nil}, ${2: receiver: nil})
endsnippet

snippet MethodOverride.new
MethodOverride.new(${1:ownerClass: nil}, ${2: selector: nil}, ${3: activePath: nil}, ${4: overriddenPath: nil})
endsnippet

snippet MethodOverride.fromLine
MethodOverride.fromLine(${1:string: nil})
endsnippet

snippet MethodOverride.all
MethodOverride.all(${1:})
endsnippet

snippet MethodOverride.printAll
MethodOverride.printAll(${1:})
endsnippet

snippet MethodOverride.printAllShort
MethodOverride.printAllShort(${1:})
endsnippet

snippet MethodQuote.new
MethodQuote.new(${1:selector: nil})
endsnippet

snippet Metro.ar
Metro.ar(${1:bpm: nil}, ${2: numBeats: nil}, ${3: mul: 1}, ${4: add: 0})
endsnippet

snippet Metro.kr
Metro.kr(${1:bpm: nil}, ${2: numBeats: nil}, ${3: mul: 1}, ${4: add: 0})
endsnippet

snippet MidEQ.ar
MidEQ.ar(${1:in: 0.0}, ${2: freq: 440.0}, ${3: rq: 1.0}, ${4: db: 0.0}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet MidEQ.kr
MidEQ.kr(${1:in: 0.0}, ${2: freq: 440.0}, ${3: rq: 1.0}, ${4: db: 0.0}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet MidEQ.coeffs
MidEQ.coeffs(${1:sr: nil}, ${2: freq: 440}, ${3: rq: 1.0}, ${4: db: 0.0})
endsnippet

snippet MinItem.new
MinItem.new(${1:array: nil}, ${2: force: false})
endsnippet

snippet MinItem.abs
MinItem.abs(${1:array: nil})
endsnippet

snippet MinItem.switch
MinItem.switch(${1:array: nil}, ${2: switchArray: nil})
endsnippet

snippet Mix.new
Mix.new(${1:array: nil})
endsnippet

snippet Mix.fill
Mix.fill(${1:n: nil}, ${2: function: nil})
endsnippet

snippet Mix.ar
Mix.ar(${1:array: nil})
endsnippet

snippet Mix.kr
Mix.kr(${1:array: nil})
endsnippet

snippet Mix.arFill
Mix.arFill(${1:n: nil}, ${2: function: nil})
endsnippet

snippet Mix.krFill
Mix.krFill(${1:n: nil}, ${2: function: nil})
endsnippet

snippet Mix.panSpread
Mix.panSpread(${1:array: nil}, ${2: nCha: 2}, ${3: width: 2}, ${4: offset: 0})
endsnippet

snippet Mix.panSpreadFill
Mix.panSpreadFill(${1:n: nil}, ${2: func: nil}, ${3: nCha: 2}, ${4: width: 2}, ${5: offset: 0})
endsnippet

snippet MixedBundleTester.reset
MixedBundleTester.reset(${1:})
endsnippet

snippet MixedBundleTester.findMessage
MixedBundleTester.findMessage(${1:message: nil})
endsnippet

snippet MixedBundleTester.findPreparationMessage
MixedBundleTester.findPreparationMessage(${1:message: nil})
endsnippet

snippet MixedBundleTester.report
MixedBundleTester.report(${1:})
endsnippet

snippet ModDif.ar
ModDif.ar(${1:x: 0.0}, ${2: y: 0.0}, ${3: mod: 1.0})
endsnippet

snippet ModDif.kr
ModDif.kr(${1:x: 0.0}, ${2: y: 0.0}, ${3: mod: 1.0})
endsnippet

snippet ModDif.ir
ModDif.ir(${1:x: 0.0}, ${2: y: 0.0}, ${3: mod: 1.0})
endsnippet

snippet ModKey.initClass
ModKey.initClass(${1:})
endsnippet

snippet ModKey.new
ModKey.new(${1:args: [  ]})
endsnippet

snippet ModKey.fromList
ModKey.fromList(${1:args: [  ]})
endsnippet

snippet ModKey.fromNumber
ModKey.fromNumber(${1:number: nil})
endsnippet

snippet MonitorGui.initClass
MonitorGui.initClass(${1:})
endsnippet

snippet MonitorGui.new
MonitorGui.new(${1:object: nil}, ${2: parent: nil}, ${3: bounds: nil}, ${4: makeSkip: true}, ${5: options: [  ]})
endsnippet

snippet MonitorOSC.value
MonitorOSC.value(${1:time: 0}, ${2: addr: nil}, ${3: port: nil}, ${4: msg: nil})
endsnippet

snippet MonitorOSC.valueArray
MonitorOSC.valueArray(${1:args: nil})
endsnippet

snippet MonoGrain.ar
MonoGrain.ar(${1:in: nil}, ${2: winsize: 0.1}, ${3: grainrate: 10}, ${4: winrandpct: 0}, ${5: mul: 1}, ${6: add: 0})
endsnippet

snippet MonoGrainBF.ar
MonoGrainBF.ar(${1:in: nil}, ${2: winsize: 0.1}, ${3: grainrate: 10}, ${4: winrandpct: 0}, ${5: azimuth: 0}, ${6: azrand: 0}, ${7: elevation: 0}, ${8: elrand: 0}, ${9: rho: 1}, ${10: mul: 1}, ${11: add: 0})
endsnippet

snippet MoogFF.ar
MoogFF.ar(${1:in: nil}, ${2: freq: 100}, ${3: gain: 2}, ${4: reset: 0}, ${5: mul: 1}, ${6: add: 0})
endsnippet

snippet MoogFF.kr
MoogFF.kr(${1:in: nil}, ${2: freq: 100}, ${3: gain: 2}, ${4: reset: 0}, ${5: mul: 1}, ${6: add: 0})
endsnippet

snippet MoogLadder.ar
MoogLadder.ar(${1:in: nil}, ${2: ffreq: 440.0}, ${3: res: 0.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet MoogLadder.kr
MoogLadder.kr(${1:in: nil}, ${2: ffreq: 440.0}, ${3: res: 0.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet MoogVCF.ar
MoogVCF.ar(${1:in: nil}, ${2: fco: nil}, ${3: res: nil}, ${4: mul: 1}, ${5: add: 0})
endsnippet

snippet MostChange.ar
MostChange.ar(${1:a: 0.0}, ${2: b: 0.0})
endsnippet

snippet MostChange.kr
MostChange.kr(${1:a: 0.0}, ${2: b: 0.0})
endsnippet

snippet MouseButton.kr
MouseButton.kr(${1:minval: 0}, ${2: maxval: 1}, ${3: lag: 0.2})
endsnippet

snippet MouseX.kr
MouseX.kr(${1:minval: 0}, ${2: maxval: 1}, ${3: warp: 0}, ${4: lag: 0.2})
endsnippet

snippet MovingAverage.ar
MovingAverage.ar(${1:in: nil}, ${2: numsamp: 40}, ${3: maxsamp: 400})
endsnippet

snippet MovingAverage.kr
MovingAverage.kr(${1:in: nil}, ${2: numsamp: 40}, ${3: maxsamp: 400})
endsnippet

snippet MovingAverage.power
MovingAverage.power(${1:in: nil}, ${2: numsamp: 40}, ${3: maxsamp: 400})
endsnippet

snippet MovingAverage.rms
MovingAverage.rms(${1:in: nil}, ${2: numsamp: 40}, ${3: maxsamp: 400})
endsnippet

snippet MovingSum.ar
MovingSum.ar(${1:in: nil}, ${2: numsamp: 40}, ${3: maxsamp: 400})
endsnippet

snippet MovingSum.kr
MovingSum.kr(${1:in: nil}, ${2: numsamp: 40}, ${3: maxsamp: 400})
endsnippet

snippet MulAdd.new
MulAdd.new(${1:in: nil}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet MulAdd.new1
MulAdd.new1(${1:rate: nil}, ${2: in: nil}, ${3: mul: nil}, ${4: add: nil})
endsnippet

snippet MulAdd.canBeMulAdd
MulAdd.canBeMulAdd(${1:in: nil}, ${2: mul: nil}, ${3: add: nil})
endsnippet

snippet MultiLevelIdentityDictionary.new
MultiLevelIdentityDictionary.new(${1:})
endsnippet

snippet MultiOutDemandUGen.newFromDesc
MultiOutDemandUGen.newFromDesc(${1:rate: nil}, ${2: numOutputs: nil}, ${3: inputs: nil})
endsnippet

snippet MultiOutUGen.newFromDesc
MultiOutUGen.newFromDesc(${1:rate: nil}, ${2: numOutputs: nil}, ${3: inputs: nil})
endsnippet

snippet MultiPlot.new
MultiPlot.new(${1:arrays: nil}, ${2: width: 600}, ${3: height: 400}, ${4: colors: nil}, ${5: background: nil}, ${6: hLinesAt: nil}, ${7: vLinesAt: nil}, ${8: linesAlpha: 0.5}, ${9: discrete: false}, ${10: min: nil}, ${11: max: nil})
endsnippet

snippet MultiPlot.inRect
MultiPlot.inRect(${1:arrays: nil}, ${2: rect: nil}, ${3: colors: nil}, ${4: hLinesAt: nil}, ${5: vLinesAt: nil}, ${6: linesAlpha: 0.5}, ${7: discrete: false}, ${8: min: nil}, ${9: max: nil})
endsnippet

snippet MultiPlot.plotOne
MultiPlot.plotOne(${1:array: nil}, ${2: rect: nil}, ${3: color: nil}, ${4: min: nil}, ${5: max: nil}, ${6: arrSize: nil}, ${7: discrete: false})
endsnippet

snippet MultiServer.new
MultiServer.new(${1:names: nil}, ${2: adresses: nil}, ${3: options: nil}, ${4: hostName: nil}, ${5: synthDefDir: nil}, ${6: clientID: 0})
endsnippet

snippet MultiServer.row
MultiServer.row(${1:n: 1}, ${2: startName: server}, ${3: startAddr: nil}, ${4: options: nil}, ${5: hostName: nil}, ${6: synthDefDir: nil}, ${7: clientID: 0})
endsnippet

snippet MultiServer.rowFindHost
MultiServer.rowFindHost(${1:hostName: nil}, ${2: n: 1}, ${3: startName: server}, ${4: startPort: 58000}, ${5: options: nil}, ${6: synthDefDir: nil}, ${7: clientID: 0})
endsnippet

snippet MultiSliderView.qtClass
MultiSliderView.qtClass(${1:})
endsnippet

snippet MultiTap.ar
MultiTap.ar(${1:timesArray: nil}, ${2: levelsArray: nil}, ${3: in: 0.0}, ${4: mul: 1.0}, ${5: add: 0.0}, ${6: bufnum: nil})
endsnippet

snippet MultiplexAnalogIn.ar
MultiplexAnalogIn.ar(${1:analogPin: 0}, ${2: muxChannel: 0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet MultiplexAnalogIn.kr
MultiplexAnalogIn.kr(${1:analogPin: 0}, ${2: muxChannel: 0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet NAryOpFunction.new
NAryOpFunction.new(${1:selector: nil}, ${2: a: nil}, ${3: arglist: nil})
endsnippet

snippet NAryOpStream.new
NAryOpStream.new(${1:operator: nil}, ${2: a: nil}, ${3: arglist: nil})
endsnippet

snippet NAryValueProxy.new
NAryValueProxy.new(${1:receiver: nil}, ${2: args: nil})
endsnippet

snippet NHHall.ar
NHHall.ar(${1:in: nil}, ${2: rt60: 1}, ${3: stereo: 0.5}, ${4: lowFreq: 200}, ${5: lowRatio: 0.5}, ${6: hiFreq: 4000}, ${7: hiRatio: 0.5}, ${8: earlyDiffusion: 0.5}, ${9: lateDiffusion: 0.5}, ${10: modRate: 0.2}, ${11: modDepth: 0.3})
endsnippet

snippet NL.ar
NL.ar(${1:input: nil}, ${2: bufnuma: 0}, ${3: bufnumb: 1}, ${4: guard1: 1000.0}, ${5: guard2: 100.0}, ${6: mul: 1.0}, ${7: add: 0.0})
endsnippet

snippet NL2.ar
NL2.ar(${1:input: nil}, ${2: bufnum: 0}, ${3: maxsizea: 10}, ${4: maxsizeb: 10}, ${5: guard1: 1000.0}, ${6: guard2: 100.0}, ${7: mul: 1.0}, ${8: add: 0.0})
endsnippet

snippet NLFiltN.ar
NLFiltN.ar(${1:input: nil}, ${2: a: nil}, ${3: b: nil}, ${4: d: nil}, ${5: c: nil}, ${6: l: nil}, ${7: mul: 1.0}, ${8: add: 0.0})
endsnippet

snippet NLFiltN.kr
NLFiltN.kr(${1:input: nil}, ${2: a: nil}, ${3: b: nil}, ${4: d: nil}, ${5: c: nil}, ${6: l: nil}, ${7: mul: 1.0}, ${8: add: 0.0})
endsnippet

snippet NRand.new
NRand.new(${1:lo: 0.0}, ${2: hi: 1.0}, ${3: n: 0})
endsnippet

snippet NTube.ar
NTube.ar(${1:input: 0}, ${2: lossarray: 1.0}, ${3: karray: nil}, ${4: delaylengtharray: nil}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet NamedControl.ar
NamedControl.ar(${1:name: nil}, ${2: values: nil}, ${3: lags: nil}, ${4: spec: nil})
endsnippet

snippet NamedControl.kr
NamedControl.kr(${1:name: nil}, ${2: values: nil}, ${3: lags: nil}, ${4: fixedLag: false}, ${5: spec: nil})
endsnippet

snippet NamedControl.ir
NamedControl.ir(${1:name: nil}, ${2: values: nil}, ${3: lags: nil}, ${4: spec: nil})
endsnippet

snippet NamedControl.tr
NamedControl.tr(${1:name: nil}, ${2: values: nil}, ${3: lags: nil}, ${4: spec: nil})
endsnippet

snippet NamedControl.new
NamedControl.new(${1:name: nil}, ${2: values: nil}, ${3: rate: nil}, ${4: lags: nil}, ${5: fixedLag: false}, ${6: spec: nil})
endsnippet

snippet NamedControl.initDict
NamedControl.initDict(${1:})
endsnippet

snippet NanoKONTROL.new
NanoKONTROL.new(${1:height: 120}, ${2: initMIDI: true})
endsnippet

snippet NanoKONTROL.findPort
NanoKONTROL.findPort(${1:})
endsnippet

snippet NanoKONTROL.buttons
NanoKONTROL.buttons(${1:scene: nil})
endsnippet

snippet NanoKONTROL.sliders
NanoKONTROL.sliders(${1:scene: nil})
endsnippet

snippet NanoKONTROL.knobs
NanoKONTROL.knobs(${1:scene: nil})
endsnippet

snippet NanoKONTROL.setScene
NanoKONTROL.setScene(${1:scene: 0})
endsnippet

snippet NanoKONTROL.currentScene
NanoKONTROL.currentScene(${1:})
endsnippet

snippet NanoKONTROL.isInScene
NanoKONTROL.isInScene(${1:scene: nil})
endsnippet

snippet NanoKONTROL.makeWindow
NanoKONTROL.makeWindow(${1:height: 120})
endsnippet

snippet NanoKONTROL.makeScene
NanoKONTROL.makeScene(${1:height: 120}, ${2: scene: 1}, ${3: view: nil})
endsnippet

snippet Ndef.initClass
Ndef.initClass(${1:})
endsnippet

snippet Ndef.new
Ndef.new(${1:key: nil}, ${2: object: nil})
endsnippet

snippet Ndef.ar
Ndef.ar(${1:key: nil}, ${2: numChannels: nil}, ${3: offset: 0})
endsnippet

snippet Ndef.kr
Ndef.kr(${1:key: nil}, ${2: numChannels: nil}, ${3: offset: 0})
endsnippet

snippet Ndef.clear
Ndef.clear(${1:fadeTime: nil})
endsnippet

snippet Ndef.dictFor
Ndef.dictFor(${1:server: nil})
endsnippet

snippet Ndef.gui
Ndef.gui(${1:server: nil}, ${2: numItems: nil}, ${3: bounds: nil}, ${4: preset: nil})
endsnippet

snippet NdefGui.initClass
NdefGui.initClass(${1:})
endsnippet

snippet NdefGui.new
NdefGui.new(${1:object: nil}, ${2: numItems: 4}, ${3: parent: nil}, ${4: bounds: nil}, ${5: makeSkip: true}, ${6: options: nil})
endsnippet

snippet NdefGui.big
NdefGui.big(${1:})
endsnippet

snippet NdefGui.full
NdefGui.full(${1:})
endsnippet

snippet NdefGui.audio
NdefGui.audio(${1:})
endsnippet

snippet NdefGui.audioSm
NdefGui.audioSm(${1:})
endsnippet

snippet NdefGui.control
NdefGui.control(${1:})
endsnippet

snippet NdefGui.makeButFuncs
NdefGui.makeButFuncs(${1:})
endsnippet

snippet NearestN.kr
NearestN.kr(${1:treebuf: nil}, ${2: in: nil}, ${3: gate: 1}, ${4: num: 1})
endsnippet

snippet NearestN.categories
NearestN.categories(${1:})
endsnippet

snippet NearestN.makeBufferData
NearestN.makeBufferData(${1:tree: nil})
endsnippet

snippet NeedleRect.ar
NeedleRect.ar(${1:rate: 1.0}, ${2: imgWidth: 100}, ${3: imgHeight: 100}, ${4: rectX: 0}, ${5: rectY: 0}, ${6: rectW: 100}, ${7: rectH: 100})
endsnippet

snippet NestedAllpassN.ar
NestedAllpassN.ar(${1:in: nil}, ${2: maxdelay1: 0.036}, ${3: delay1: 0.036}, ${4: gain1: 0.08}, ${5: maxdelay2: 0.03}, ${6: delay2: 0.03}, ${7: gain2: 0.3}, ${8: mul: 1.0}, ${9: add: 0.0})
endsnippet

snippet NetAddr.initClass
NetAddr.initClass(${1:})
endsnippet

snippet NetAddr.new
NetAddr.new(${1:hostname: nil}, ${2: port: nil})
endsnippet

snippet NetAddr.fromIP
NetAddr.fromIP(${1:addr: nil}, ${2: port: nil})
endsnippet

snippet NetAddr.langPort
NetAddr.langPort(${1:})
endsnippet

snippet NetAddr.matchLangIP
NetAddr.matchLangIP(${1:ipstring: nil})
endsnippet

snippet NetAddr.localEndPoint
NetAddr.localEndPoint(${1:})
endsnippet

snippet NetAddr.localAddr
NetAddr.localAddr(${1:})
endsnippet

snippet NetAddr.useDoubles_
NetAddr.useDoubles_(${1:flag: false})
endsnippet

snippet NetAddr.broadcastFlag
NetAddr.broadcastFlag(${1:})
endsnippet

snippet NetAddr.broadcastFlag_
NetAddr.broadcastFlag_(${1:flag: true})
endsnippet

snippet NetAddr.disconnectAll
NetAddr.disconnectAll(${1:})
endsnippet

snippet NetAddr.connections
NetAddr.connections(${1:})
endsnippet

snippet Nil.new
Nil.new(${1:})
endsnippet

snippet Node.initClass
Node.initClass(${1:})
endsnippet

snippet Node.basicNew
Node.basicNew(${1:server: nil}, ${2: nodeID: nil})
endsnippet

snippet Node.actionNumberFor
Node.actionNumberFor(${1:addAction: addToHead})
endsnippet

snippet Node.setnMsgArgs
Node.setnMsgArgs(${1:args: [  ]})
endsnippet

snippet Node.orderNodesMsg
Node.orderNodesMsg(${1:nodes: nil})
endsnippet

snippet NodeControl.new
NodeControl.new(${1:node: nil}, ${2: index: nil})
endsnippet

snippet NodeIDAllocator.new
NodeIDAllocator.new(${1:user: 0}, ${2: initTemp: 1000})
endsnippet

snippet NodeProxy.new
NodeProxy.new(${1:server: nil}, ${2: rate: nil}, ${3: numChannels: nil}, ${4: inputs: nil})
endsnippet

snippet NodeWatcher.initClass
NodeWatcher.initClass(${1:})
endsnippet

snippet NodeWatcher.cmdPeriod
NodeWatcher.cmdPeriod(${1:})
endsnippet

snippet NodeWatcher.doOnServerQuit
NodeWatcher.doOnServerQuit(${1:aServer: nil})
endsnippet

snippet NodeWatcher.doOnServerBoot
NodeWatcher.doOnServerBoot(${1:aServer: nil})
endsnippet

snippet NodeWatcher.newFrom
NodeWatcher.newFrom(${1:server: nil})
endsnippet

snippet NodeWatcher.register
NodeWatcher.register(${1:node: nil}, ${2: assumePlaying: false})
endsnippet

snippet NodeWatcher.unregister
NodeWatcher.unregister(${1:node: nil})
endsnippet

snippet Normalizer.ar
Normalizer.ar(${1:in: 0.0}, ${2: level: 1.0}, ${3: dur: 0.01})
endsnippet

snippet Notch.ar
Notch.ar(${1:in: nil}, ${2: freq: 440}, ${3: rq: 0.1}, ${4: mul: 1}, ${5: add: 0})
endsnippet

snippet Note.new
Note.new(${1:name: nil}, ${2: midi: nil}, ${3: freq: nil}, ${4: cents: 0})
endsnippet

snippet Note.calculate
Note.calculate(${1:name: nil}, ${2: midi: nil}, ${3: freq: nil}, ${4: cents: nil}, ${5: changeName: nil}, ${6: forceSign: nil})
endsnippet

snippet Note.rand
Note.rand(${1:lo: C-2}, ${2: hi: G8}, ${3: step: 1})
endsnippet

snippet Note.makeScale
Note.makeScale(${1:groundNote: C3}, ${2: type: major}, ${3: startNote: nil}, ${4: endNote: nil})
endsnippet

snippet NoteOffResponder.init
NoteOffResponder.init(${1:})
endsnippet

snippet NoteOffResponder.initialized
NoteOffResponder.initialized(${1:})
endsnippet

snippet NoteOffResponder.responders
NoteOffResponder.responders(${1:})
endsnippet

snippet NoteOffResponder.add
NoteOffResponder.add(${1:resp: nil})
endsnippet

snippet NoteOffResponder.remove
NoteOffResponder.remove(${1:resp: nil})
endsnippet

snippet NoteOnResponder.new
NoteOnResponder.new(${1:function: nil}, ${2: src: nil}, ${3: chan: nil}, ${4: num: nil}, ${5: veloc: nil}, ${6: install: true}, ${7: swallowEvent: false})
endsnippet

snippet NoteOnResponder.initialized
NoteOnResponder.initialized(${1:})
endsnippet

snippet NoteOnResponder.responders
NoteOnResponder.responders(${1:})
endsnippet

snippet NoteOnResponder.init
NoteOnResponder.init(${1:})
endsnippet

snippet NoteOnResponder.add
NoteOnResponder.add(${1:resp: nil})
endsnippet

snippet NoteOnResponder.remove
NoteOnResponder.remove(${1:resp: nil})
endsnippet

snippet NotificationCenter.notify
NotificationCenter.notify(${1:object: nil}, ${2: message: nil}, ${3: args: nil})
endsnippet

snippet NotificationCenter.register
NotificationCenter.register(${1:object: nil}, ${2: message: nil}, ${3: listener: nil}, ${4: action: nil})
endsnippet

snippet NotificationCenter.unregister
NotificationCenter.unregister(${1:object: nil}, ${2: message: nil}, ${3: listener: nil})
endsnippet

snippet NotificationCenter.registerOneShot
NotificationCenter.registerOneShot(${1:object: nil}, ${2: message: nil}, ${3: listener: nil}, ${4: action: nil})
endsnippet

snippet NotificationCenter.clear
NotificationCenter.clear(${1:})
endsnippet

snippet NotificationCenter.registrationExists
NotificationCenter.registrationExists(${1:object: nil}, ${2: message: nil}, ${3: listener: nil})
endsnippet

snippet NotificationCenter.initClass
NotificationCenter.initClass(${1:})
endsnippet

snippet NotificationCenter.removeForListener
NotificationCenter.removeForListener(${1:listener: nil})
endsnippet

snippet NotificationRegistration.new
NotificationRegistration.new(${1:o: nil}, ${2: m: nil}, ${3: l: nil})
endsnippet

snippet NumChannels.ar
NumChannels.ar(${1:input: nil}, ${2: numChannels: 2}, ${3: mixdown: true})
endsnippet

snippet NumRunningSynths.kr
NumRunningSynths.kr(${1:})
endsnippet

snippet Number.speedOfSound
Number.speedOfSound(${1:temp: 15}, ${2: substance: air})
endsnippet

snippet NumberBox.qtClass
NumberBox.qtClass(${1:})
endsnippet

snippet NumberBox.new
NumberBox.new(${1:parent: nil}, ${2: bounds: nil})
endsnippet

snippet OSCArgsMatcher.new
OSCArgsMatcher.new(${1:argTemplate: nil}, ${2: func: nil})
endsnippet

snippet OSCFunc.initClass
OSCFunc.initClass(${1:})
endsnippet

snippet OSCFunc.new
OSCFunc.new(${1:func: nil}, ${2: path: nil}, ${3: srcID: nil}, ${4: recvPort: nil}, ${5: argTemplate: nil}, ${6: dispatcher: nil})
endsnippet

snippet OSCFunc.newMatching
OSCFunc.newMatching(${1:func: nil}, ${2: path: nil}, ${3: srcID: nil}, ${4: recvPort: nil}, ${5: argTemplate: nil})
endsnippet

snippet OSCFunc.trace
OSCFunc.trace(${1:bool: true}, ${2: hideStatusMsg: false})
endsnippet

snippet OSCFunc.cmdPeriod
OSCFunc.cmdPeriod(${1:})
endsnippet

snippet OSCFuncAddrMessageMatcher.new
OSCFuncAddrMessageMatcher.new(${1:addr: nil}, ${2: func: nil})
endsnippet

snippet OSCFuncBothMessageMatcher.new
OSCFuncBothMessageMatcher.new(${1:addr: nil}, ${2: recvPort: nil}, ${3: func: nil})
endsnippet

snippet OSCFuncRecvPortMessageMatcher.new
OSCFuncRecvPortMessageMatcher.new(${1:recvPort: nil}, ${2: func: nil})
endsnippet

snippet OSCdef.initClass
OSCdef.initClass(${1:})
endsnippet

snippet OSCdef.new
OSCdef.new(${1:key: nil}, ${2: func: nil}, ${3: path: nil}, ${4: srcID: nil}, ${5: recvPort: nil}, ${6: argTemplate: nil}, ${7: dispatcher: nil})
endsnippet

snippet OSCdef.newMatching
OSCdef.newMatching(${1:key: nil}, ${2: func: nil}, ${3: path: nil}, ${4: srcID: nil}, ${5: recvPort: nil}, ${6: argTemplate: nil})
endsnippet

snippet OSCdef.freeAll
OSCdef.freeAll(${1:})
endsnippet

snippet OSCpathDispatcher.new
OSCpathDispatcher.new(${1:addr: nil}, ${2: cmdName: nil}, ${3: action: nil}, ${4: pathSize: nil})
endsnippet

snippet OSCpathResponder.new
OSCpathResponder.new(${1:addr: nil}, ${2: cmdPath: nil}, ${3: action: nil})
endsnippet

snippet OSCresponder.new
OSCresponder.new(${1:addr: nil}, ${2: cmdName: nil}, ${3: action: nil})
endsnippet

snippet OSCresponder.initClass
OSCresponder.initClass(${1:})
endsnippet

snippet OSCresponder.respond
OSCresponder.respond(${1:time: nil}, ${2: addr: nil}, ${3: msg: nil})
endsnippet

snippet OSCresponder.add
OSCresponder.add(${1:responder: nil})
endsnippet

snippet OSCresponder.remove
OSCresponder.remove(${1:responder: nil})
endsnippet

snippet OSCresponder.removeAddr
OSCresponder.removeAddr(${1:addr: nil})
endsnippet

snippet OSFold4.ar
OSFold4.ar(${1:in: nil}, ${2: lo: nil}, ${3: hi: nil})
endsnippet

snippet OSFold8.ar
OSFold8.ar(${1:in: nil}, ${2: lo: nil}, ${3: hi: nil})
endsnippet

snippet OSTrunc4.ar
OSTrunc4.ar(${1:in: nil}, ${2: quant: 0.5})
endsnippet

snippet OSTrunc8.ar
OSTrunc8.ar(${1:in: nil}, ${2: quant: 0.5})
endsnippet

snippet OSWrap4.ar
OSWrap4.ar(${1:in: nil}, ${2: lo: nil}, ${3: hi: nil})
endsnippet

snippet OSWrap8.ar
OSWrap8.ar(${1:in: nil}, ${2: lo: nil}, ${3: hi: nil})
endsnippet

snippet Object.new
Object.new(${1:maxSize: 0})
endsnippet

snippet Object.newCopyArgs
Object.newCopyArgs(${1:args: [  ]})
endsnippet

snippet Object.initClass
Object.initClass(${1:})
endsnippet

snippet Object.prNew
Object.prNew(${1:maxSize: 0})
endsnippet

snippet Object.prNewCopyArgs
Object.prNewCopyArgs(${1:args: [  ]})
endsnippet

snippet Object.readArchive
Object.readArchive(${1:pathname: nil})
endsnippet

snippet Object.readTextArchive
Object.readTextArchive(${1:pathname: nil})
endsnippet

snippet Object.readBinaryArchive
Object.readBinaryArchive(${1:pathname: nil})
endsnippet

snippet Object.implClass
Object.implClass(${1:})
endsnippet

snippet Object.help
Object.help(${1:})
endsnippet

snippet Object.newFromDict
Object.newFromDict(${1:dict: nil})
endsnippet

snippet ObjectGui.new
ObjectGui.new(${1:model: nil})
endsnippet

snippet ObjectTable.new
ObjectTable.new(${1:})
endsnippet

snippet ObjectTable.initClass
ObjectTable.initClass(${1:})
endsnippet

snippet ObjectTable.add
ObjectTable.add(${1:obj: nil})
endsnippet

snippet ObjectTable.put
ObjectTable.put(${1:key: nil}, ${2: obj: nil})
endsnippet

snippet ObjectTable.remove
ObjectTable.remove(${1:obj: nil})
endsnippet

snippet ObjectTable.at
ObjectTable.at(${1:id: nil})
endsnippet

snippet ObjectTable.getID
ObjectTable.getID(${1:obj: nil})
endsnippet

snippet ObjectTable.objPerform
ObjectTable.objPerform(${1:id: nil}, ${2: selector: nil}, ${3: args: [  ]})
endsnippet

snippet OffsetOut.kr
OffsetOut.kr(${1:})
endsnippet

snippet OnError.run
OnError.run(${1:})
endsnippet

snippet OnePole.ar
OnePole.ar(${1:in: 0.0}, ${2: coef: 0.5}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet OnePole.kr
OnePole.kr(${1:in: 0.0}, ${2: coef: 0.5}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet OnePole.coeffs
OnePole.coeffs(${1:sr: 44100}, ${2: coef: 0.5})
endsnippet

snippet OneShotStream.new
OneShotStream.new(${1:value: nil})
endsnippet

snippet OneZero.coeffs
OneZero.coeffs(${1:sr: 44100}, ${2: coef: 0.5})
endsnippet

snippet OnsetStatistics.kr
OnsetStatistics.kr(${1:input: nil}, ${2: windowsize: 1.0}, ${3: hopsize: 0.1})
endsnippet

snippet Onsets.kr
Onsets.kr(${1:chain: nil}, ${2: threshold: 0.5}, ${3: odftype: rcomplex}, ${4: relaxtime: 1}, ${5: floor: 0.1}, ${6: mingap: 10}, ${7: medianspan: 11}, ${8: whtype: 1}, ${9: rawodf: 0})
endsnippet

snippet OnsetsDS.kr
OnsetsDS.kr(${1:in: nil}, ${2: fftbuf: nil}, ${3: trackbuf: nil}, ${4: thresh: 0.5}, ${5: type: power}, ${6: extchain: false}, ${7: relaxtime: 0.1}, ${8: floor: 0.1}, ${9: smear: 0}, ${10: mingap: 0.05}, ${11: medianspan: 11})
endsnippet

snippet Operand.new
Operand.new(${1:value: nil})
endsnippet

snippet OptionView.new
OptionView.new(${1:parent: nil}, ${2: bounds: nil})
endsnippet

snippet Order.new
Order.new(${1:size: 8})
endsnippet

snippet Order.newFromIndices
Order.newFromIndices(${1:array: nil}, ${2: indices: nil})
endsnippet

snippet Oregonator.ar
Oregonator.ar(${1:reset: 0}, ${2: rate: 0.01}, ${3: epsilon: 1.0}, ${4: mu: 1.0}, ${5: q: 1.0}, ${6: initx: 0.5}, ${7: inity: 0.5}, ${8: initz: 0.5}, ${9: mul: 1.0}, ${10: add: 0.0})
endsnippet

snippet Osc.ar
Osc.ar(${1:bufnum: nil}, ${2: freq: 440.0}, ${3: phase: 0.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet Osc.kr
Osc.kr(${1:bufnum: nil}, ${2: freq: 440.0}, ${3: phase: 0.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet OscN.ar
OscN.ar(${1:bufnum: nil}, ${2: freq: 440.0}, ${3: phase: 0.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet OscN.kr
OscN.kr(${1:bufnum: nil}, ${2: freq: 440.0}, ${3: phase: 0.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet OteyPiano.ar
OteyPiano.ar(${1:freq: 440}, ${2: vel: 1}, ${3: t_gate: 0}, ${4: rmin: 0.35}, ${5: rmax: 2}, ${6: rampl: 4}, ${7: rampr: 8}, ${8: rcore: 1}, ${9: lmin: 0.07}, ${10: lmax: 1.4}, ${11: lampl: -4}, ${12: lampr: 4}, ${13: rho: 1}, ${14: e: 1}, ${15: zb: 1}, ${16: zh: 0}, ${17: mh: 1}, ${18: k: 0.2}, ${19: alpha: 1}, ${20: p: 1}, ${21: hpos: 0.142}, ${22: loss: 1}, ${23: detune: 0.0003}, ${24: hammer_type: 1})
endsnippet

snippet OteyPianoStrings.ar
OteyPianoStrings.ar(${1:freq: 440}, ${2: vel: 1}, ${3: t_gate: 0}, ${4: rmin: 0.35}, ${5: rmax: 2}, ${6: rampl: 4}, ${7: rampr: 8}, ${8: rcore: 1}, ${9: lmin: 0.07}, ${10: lmax: 1.4}, ${11: lampl: -4}, ${12: lampr: 4}, ${13: rho: 1}, ${14: e: 1}, ${15: zb: 1}, ${16: zh: 0}, ${17: mh: 1}, ${18: k: 0.2}, ${19: alpha: 1}, ${20: p: 1}, ${21: hpos: 0.142}, ${22: loss: 1}, ${23: detune: 0.0003}, ${24: hammer_type: 1})
endsnippet

snippet OteySoundBoard.ar
OteySoundBoard.ar(${1:inp: 0}, ${2: c1: 20}, ${3: c3: 20}, ${4: mix: 0.8})
endsnippet

snippet Out.ar
Out.ar(${1:bus: nil}, ${2: channelsArray: nil})
endsnippet

snippet Out.kr
Out.kr(${1:bus: nil}, ${2: channelsArray: nil})
endsnippet

snippet Out.numFixedArgs
Out.numFixedArgs(${1:})
endsnippet

snippet OutOfContextReturnError.new
OutOfContextReturnError.new(${1:receiver: nil}, ${2: method: nil}, ${3: result: nil})
endsnippet

snippet OutputProxy.new
OutputProxy.new(${1:rate: nil}, ${2: itsSourceUGen: nil}, ${3: index: nil})
endsnippet

snippet PAbstractGroup.embedLoop
PAbstractGroup.embedLoop(${1:inevent: nil}, ${2: stream: nil}, ${3: groupID: nil}, ${4: ingroup: nil}, ${5: cleanup: nil})
endsnippet

snippet PMOsc.ar
PMOsc.ar(${1:carfreq: nil}, ${2: modfreq: nil}, ${3: pmindex: 0.0}, ${4: modphase: 0.0}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet PMOsc.kr
PMOsc.kr(${1:carfreq: nil}, ${2: modfreq: nil}, ${3: pmindex: 0.0}, ${4: modphase: 0.0}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet PSinGrain.ar
PSinGrain.ar(${1:freq: 440.0}, ${2: dur: 0.2}, ${3: amp: 0.1})
endsnippet

snippet PVInfo.categories
PVInfo.categories(${1:})
endsnippet

snippet PVInfo.ar
PVInfo.ar(${1:pvbuffer: nil}, ${2: binNum: 0}, ${3: filePointer: 0}, ${4: mul: 1}, ${5: add: 0})
endsnippet

snippet PVInfo.kr
PVInfo.kr(${1:pvbuffer: nil}, ${2: binNum: 0}, ${3: filePointer: 0}, ${4: mul: 1}, ${5: add: 0})
endsnippet

snippet PVSynth.categories
PVSynth.categories(${1:})
endsnippet

snippet PVSynth.ar
PVSynth.ar(${1:pvbuffer: nil}, ${2: numBins: 0}, ${3: binStart: 0}, ${4: binSkip: 1}, ${5: filePointer: 0}, ${6: freqMul: 1.0}, ${7: freqAdd: 0.0}, ${8: mul: 1.0}, ${9: add: 0.0})
endsnippet

snippet PV_BinBufRd.new
PV_BinBufRd.new(${1:buffer: nil}, ${2: playbuf: nil}, ${3: point: 1.0}, ${4: binStart: 0}, ${5: binSkip: 1}, ${6: numBins: 1}, ${7: clear: 0})
endsnippet

snippet PV_BinDelay.new
PV_BinDelay.new(${1:buffer: nil}, ${2: maxdelay: nil}, ${3: delaybuf: nil}, ${4: fbbuf: nil}, ${5: hop: 0.5})
endsnippet

snippet PV_BinFilter.new
PV_BinFilter.new(${1:buffer: nil}, ${2: start: 0}, ${3: end: 0})
endsnippet

snippet PV_BinPlayBuf.new
PV_BinPlayBuf.new(${1:buffer: nil}, ${2: playbuf: nil}, ${3: rate: 1.0}, ${4: offset: 0.0}, ${5: binStart: 0}, ${6: binSkip: 1}, ${7: numBins: 1}, ${8: loop: 0.0}, ${9: clear: 0})
endsnippet

snippet PV_BinScramble.new
PV_BinScramble.new(${1:buffer: nil}, ${2: wipe: 0.0}, ${3: width: 0.2}, ${4: trig: 0.0})
endsnippet

snippet PV_BinShift.new
PV_BinShift.new(${1:buffer: nil}, ${2: stretch: 1.0}, ${3: shift: 0.0}, ${4: interp: 0})
endsnippet

snippet PV_BinWipe.new
PV_BinWipe.new(${1:bufferA: nil}, ${2: bufferB: nil}, ${3: wipe: 0.0})
endsnippet

snippet PV_BrickWall.new
PV_BrickWall.new(${1:buffer: nil}, ${2: wipe: 0.0})
endsnippet

snippet PV_BufRd.new
PV_BufRd.new(${1:buffer: nil}, ${2: playbuf: nil}, ${3: point: 1.0})
endsnippet

snippet PV_CommonMag.new
PV_CommonMag.new(${1:bufferA: nil}, ${2: bufferB: nil}, ${3: tolerance: 0.0}, ${4: remove: 0.0})
endsnippet

snippet PV_Compander.new
PV_Compander.new(${1:buffer: nil}, ${2: thresh: 50}, ${3: slopeBelow: 1}, ${4: slopeAbove: 1})
endsnippet

snippet PV_ConformalMap.new
PV_ConformalMap.new(${1:buffer: nil}, ${2: areal: 0.0}, ${3: aimag: 0.0})
endsnippet

snippet PV_DiffMags.new
PV_DiffMags.new(${1:bufferA: nil}, ${2: bufferB: nil})
endsnippet

snippet PV_DiffMags.categories
PV_DiffMags.categories(${1:})
endsnippet

snippet PV_Diffuser.new
PV_Diffuser.new(${1:buffer: nil}, ${2: trig: 0.0})
endsnippet

snippet PV_ExtractRepeat.new
PV_ExtractRepeat.new(${1:buffer: nil}, ${2: loopbuf: nil}, ${3: loopdur: nil}, ${4: memorytime: 30}, ${5: which: 0}, ${6: ffthop: 0.5}, ${7: thresh: 1})
endsnippet

snippet PV_ExtractRepeat.categories
PV_ExtractRepeat.categories(${1:})
endsnippet

snippet PV_Freeze.new
PV_Freeze.new(${1:buffer: nil}, ${2: freeze: 0.0})
endsnippet

snippet PV_HainsworthFoote.ar
PV_HainsworthFoote.ar(${1:buffer: nil}, ${2: proph: 0.0}, ${3: propf: 0.0}, ${4: threshold: 1.0}, ${5: waittime: 0.04})
endsnippet

snippet PV_Invert.new
PV_Invert.new(${1:buffer: nil})
endsnippet

snippet PV_JensenAndersen.ar
PV_JensenAndersen.ar(${1:buffer: nil}, ${2: propsc: 0.25}, ${3: prophfe: 0.25}, ${4: prophfc: 0.25}, ${5: propsf: 0.25}, ${6: threshold: 1.0}, ${7: waittime: 0.04})
endsnippet

snippet PV_MagAbove.new
PV_MagAbove.new(${1:buffer: nil}, ${2: threshold: 0.0})
endsnippet

snippet PV_MagBuffer.new
PV_MagBuffer.new(${1:buffer: nil}, ${2: databuffer: nil})
endsnippet

snippet PV_MagDiv.new
PV_MagDiv.new(${1:bufferA: nil}, ${2: bufferB: nil}, ${3: zeroed: 0.0001})
endsnippet

snippet PV_MagExp.new
PV_MagExp.new(${1:buffer: nil})
endsnippet

snippet PV_MagExp.categories
PV_MagExp.categories(${1:})
endsnippet

snippet PV_MagFreeze.new
PV_MagFreeze.new(${1:buffer: nil}, ${2: freeze: 0.0})
endsnippet

snippet PV_MagGate.new
PV_MagGate.new(${1:buffer: nil}, ${2: thresh: 1.0}, ${3: remove: 0.0})
endsnippet

snippet PV_MagLog.new
PV_MagLog.new(${1:buffer: nil})
endsnippet

snippet PV_MagLog.categories
PV_MagLog.categories(${1:})
endsnippet

snippet PV_MagMap.new
PV_MagMap.new(${1:buffer: nil}, ${2: mapbuf: nil})
endsnippet

snippet PV_MagMinus.new
PV_MagMinus.new(${1:bufferA: nil}, ${2: bufferB: nil}, ${3: remove: 1.0})
endsnippet

snippet PV_MagMul.new
PV_MagMul.new(${1:bufferA: nil}, ${2: bufferB: nil})
endsnippet

snippet PV_MagMulAdd.new
PV_MagMulAdd.new(${1:buffer: nil}, ${2: mul: 1}, ${3: add: 0})
endsnippet

snippet PV_MagMulAdd.categories
PV_MagMulAdd.categories(${1:})
endsnippet

snippet PV_MagScale.new
PV_MagScale.new(${1:bufferA: nil}, ${2: bufferB: nil})
endsnippet

snippet PV_MagShift.new
PV_MagShift.new(${1:buffer: nil}, ${2: stretch: 1.0}, ${3: shift: 0.0})
endsnippet

snippet PV_MagSmear.new
PV_MagSmear.new(${1:buffer: nil}, ${2: bins: 0.0})
endsnippet

snippet PV_MagSmooth.new
PV_MagSmooth.new(${1:buffer: nil}, ${2: factor: 0.1})
endsnippet

snippet PV_MagSmooth.categories
PV_MagSmooth.categories(${1:})
endsnippet

snippet PV_MagSquared.new
PV_MagSquared.new(${1:buffer: nil})
endsnippet

snippet PV_MagSubtract.new
PV_MagSubtract.new(${1:bufferA: nil}, ${2: bufferB: nil}, ${3: zerolimit: 0})
endsnippet

snippet PV_MaxMagN.new
PV_MaxMagN.new(${1:buffer: nil}, ${2: numbins: nil})
endsnippet

snippet PV_Morph.new
PV_Morph.new(${1:bufferA: nil}, ${2: bufferB: nil}, ${3: morph: 0.0})
endsnippet

snippet PV_NoiseSynthP.new
PV_NoiseSynthP.new(${1:buffer: nil}, ${2: threshold: 0.1}, ${3: numFrames: 2}, ${4: initflag: 0})
endsnippet

snippet PV_OddBin.new
PV_OddBin.new(${1:buffer: nil})
endsnippet

snippet PV_PhaseShift.new
PV_PhaseShift.new(${1:buffer: nil}, ${2: shift: nil}, ${3: integrate: 0})
endsnippet

snippet PV_PitchShift.new
PV_PitchShift.new(${1:buffer: nil}, ${2: ratio: nil})
endsnippet

snippet PV_PlayBuf.new
PV_PlayBuf.new(${1:buffer: nil}, ${2: playbuf: nil}, ${3: rate: 1.0}, ${4: offset: 0.0}, ${5: loop: 0.0})
endsnippet

snippet PV_RandComb.new
PV_RandComb.new(${1:buffer: nil}, ${2: wipe: 0.0}, ${3: trig: 0.0})
endsnippet

snippet PV_RandWipe.new
PV_RandWipe.new(${1:bufferA: nil}, ${2: bufferB: nil}, ${3: wipe: 0.0}, ${4: trig: 0.0})
endsnippet

snippet PV_RecordBuf.new
PV_RecordBuf.new(${1:buffer: nil}, ${2: recbuf: nil}, ${3: offset: 0.0}, ${4: run: 0.0}, ${5: loop: 0.0}, ${6: hop: 0.5}, ${7: wintype: 0})
endsnippet

snippet PV_RectComb.new
PV_RectComb.new(${1:buffer: nil}, ${2: numTeeth: 0.0}, ${3: phase: 0.0}, ${4: width: 0.5})
endsnippet

snippet PV_RectComb2.new
PV_RectComb2.new(${1:bufferA: nil}, ${2: bufferB: nil}, ${3: numTeeth: 0.0}, ${4: phase: 0.0}, ${5: width: 0.5})
endsnippet

snippet PV_SoftWipe.new
PV_SoftWipe.new(${1:bufferA: nil}, ${2: bufferB: nil}, ${3: wipe: 0.0})
endsnippet

snippet PV_SpectralEnhance.new
PV_SpectralEnhance.new(${1:buffer: nil}, ${2: numPartials: 8}, ${3: ratio: 2}, ${4: strength: 0.1})
endsnippet

snippet PV_SpectralMap.new
PV_SpectralMap.new(${1:buffer: nil}, ${2: specBuffer: nil}, ${3: floor: 0.0}, ${4: freeze: 0.0}, ${5: mode: 0.0}, ${6: norm: 0.0}, ${7: window: 0.0})
endsnippet

snippet PV_Whiten.new
PV_Whiten.new(${1:chain: nil}, ${2: trackbufnum: nil}, ${3: relaxtime: 2}, ${4: floor: 0.1}, ${5: smear: 0}, ${6: bindownsample: 0})
endsnippet

snippet PV_Whiten.categories
PV_Whiten.categories(${1:})
endsnippet

snippet PV_XFade.new
PV_XFade.new(${1:bufferA: nil}, ${2: bufferB: nil}, ${3: fade: 0.0})
endsnippet

snippet PackFFT.new
PackFFT.new(${1:chain: nil}, ${2: bufsize: nil}, ${3: magsphases: nil}, ${4: frombin: 0}, ${5: tobin: nil}, ${6: zeroothers: 0})
endsnippet

snippet PageLayout.new
PageLayout.new(${1:title: nil}, ${2: bounds: nil}, ${3: margin: nil}, ${4: background: nil}, ${5: scroll: true}, ${6: front: true})
endsnippet

snippet PageLayout.on
PageLayout.on(${1:window: nil}, ${2: bounds: nil}, ${3: margin: nil}, ${4: background: nil})
endsnippet

snippet PageLayout.guify
PageLayout.guify(${1:parent: nil}, ${2: title: nil}, ${3: width: nil}, ${4: height: nil}, ${5: background: nil})
endsnippet

snippet Pair.new
Pair.new(${1:linkDown: nil}, ${2: linkAcross: nil})
endsnippet

snippet Pair.newFrom
Pair.newFrom(${1:collection: nil})
endsnippet

snippet Pan2.ar
Pan2.ar(${1:in: nil}, ${2: pos: 0.0}, ${3: level: 1.0})
endsnippet

snippet Pan2.kr
Pan2.kr(${1:in: nil}, ${2: pos: 0.0}, ${3: level: 1.0})
endsnippet

snippet Pan4.ar
Pan4.ar(${1:in: nil}, ${2: xpos: 0.0}, ${3: ypos: 0.0}, ${4: level: 1.0})
endsnippet

snippet Pan4.kr
Pan4.kr(${1:in: nil}, ${2: xpos: 0.0}, ${3: ypos: 0.0}, ${4: level: 1.0})
endsnippet

snippet PanAz.ar
PanAz.ar(${1:numChans: nil}, ${2: in: nil}, ${3: pos: 0.0}, ${4: level: 1.0}, ${5: width: 2.0}, ${6: orientation: 0.5})
endsnippet

snippet PanAz.kr
PanAz.kr(${1:numChans: nil}, ${2: in: nil}, ${3: pos: 0.0}, ${4: level: 1.0}, ${5: width: 2.0}, ${6: orientation: 0.5})
endsnippet

snippet PanB.ar
PanB.ar(${1:in: nil}, ${2: azimuth: 0}, ${3: elevation: 0}, ${4: gain: 1})
endsnippet

snippet PanB.kr
PanB.kr(${1:in: nil}, ${2: azimuth: 0}, ${3: elevation: 0}, ${4: gain: 1})
endsnippet

snippet PanB2.ar
PanB2.ar(${1:in: nil}, ${2: azimuth: 0}, ${3: gain: 1})
endsnippet

snippet PanB2.kr
PanB2.kr(${1:in: nil}, ${2: azimuth: 0}, ${3: gain: 1})
endsnippet

snippet PanBin.ar
PanBin.ar(${1:in: nil}, ${2: distance: 1.4}, ${3: angle: 0}, ${4: maxDist: 500})
endsnippet

snippet PanBinAz.ar
PanBinAz.ar(${1:numChans: nil}, ${2: in: nil}, ${3: distance: 1.4}, ${4: angle: 0}, ${5: maxDist: 500})
endsnippet

snippet PanOut.pan
PanOut.pan(${1:in: nil}, ${2: pos: 0})
endsnippet

snippet PanOut.switchBus
PanOut.switchBus(${1:bus: 0}, ${2: in: nil}, ${3: wrap: nil})
endsnippet

snippet PanOut.ar
PanOut.ar(${1:bus: 0}, ${2: channel: nil}, ${3: wrap: nil})
endsnippet

snippet PanX.ar
PanX.ar(${1:numChans: nil}, ${2: in: nil}, ${3: pos: 0.0}, ${4: level: 1.0}, ${5: width: 2.0})
endsnippet

snippet PanX.kr
PanX.kr(${1:numChans: nil}, ${2: in: nil}, ${3: pos: 0.0}, ${4: level: 1.0}, ${5: width: 2.0})
endsnippet

snippet PanX2D.ar
PanX2D.ar(${1:numChansX: nil}, ${2: numChansY: nil}, ${3: in: nil}, ${4: posX: 0.0}, ${5: posY: 0.0}, ${6: level: 1.0}, ${7: widthX: 2.0}, ${8: widthY: 2.0})
endsnippet

snippet PanX2D.kr
PanX2D.kr(${1:numChansX: nil}, ${2: numChansY: nil}, ${3: in: nil}, ${4: posX: 0.0}, ${5: posY: 0.0}, ${6: level: 1.0}, ${7: widthX: 2.0}, ${8: widthY: 2.0})
endsnippet

snippet ParGroup.creationCmd
ParGroup.creationCmd(${1:})
endsnippet

snippet ParamView.new
ParamView.new(${1:parent: nil}, ${2: bounds: nil}, ${3: label: nil}, ${4: spec: nil}, ${5: action: nil}, ${6: initVal: nil}, ${7: initAction: false})
endsnippet

snippet ParsedString.new
ParsedString.new(${1:string: })
endsnippet

snippet PartConv.ar
PartConv.ar(${1:in: nil}, ${2: fftsize: nil}, ${3: irbufnum: nil}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet PartConv.calcNumPartitions
PartConv.calcNumPartitions(${1:fftsize: nil}, ${2: irbuffer: nil})
endsnippet

snippet PartConv.calcBufSize
PartConv.calcBufSize(${1:fftsize: nil}, ${2: irbuffer: nil})
endsnippet

snippet PathName.new
PathName.new(${1:path: })
endsnippet

snippet PathName.initClass
PathName.initClass(${1:})
endsnippet

snippet PatternConductor.new
PatternConductor.new(${1:patterns: nil}, ${2: event: nil}, ${3: quant: nil})
endsnippet

snippet PatternProxy.new
PatternProxy.new(${1:source: nil})
endsnippet

snippet PatternProxy.default
PatternProxy.default(${1:})
endsnippet

snippet PatternProxy.defaultValue
PatternProxy.defaultValue(${1:})
endsnippet

snippet PatternProxy.parallelise
PatternProxy.parallelise(${1:list: nil})
endsnippet

snippet PatternProxy.removeAll
PatternProxy.removeAll(${1:})
endsnippet

snippet PatternProxy.clear
PatternProxy.clear(${1:})
endsnippet

snippet PatternProxy.basicNew
PatternProxy.basicNew(${1:source: nil})
endsnippet

snippet PatternProxy.at
PatternProxy.at(${1:key: nil})
endsnippet

snippet PatternProxy.postRepository
PatternProxy.postRepository(${1:keys: nil}, ${2: stream: nil})
endsnippet

snippet PatternProxy.event
PatternProxy.event(${1:proxyClass: nil})
endsnippet

snippet PatternProxy.hasGlobalDictionary
PatternProxy.hasGlobalDictionary(${1:})
endsnippet

snippet Pause.kr
Pause.kr(${1:gate: nil}, ${2: id: nil})
endsnippet

snippet PauseSelf.kr
PauseSelf.kr(${1:in: nil})
endsnippet

snippet PauseSelfWhenDone.kr
PauseSelfWhenDone.kr(${1:src: nil})
endsnippet

snippet PauseStream.new
PauseStream.new(${1:argStream: nil}, ${2: clock: nil})
endsnippet

snippet Pavaroh.new
Pavaroh.new(${1:pattern: nil}, ${2: aroh: nil}, ${3: avaroh: nil}, ${4: stepsPerOctave: 12})
endsnippet

snippet Pbeta.new
Pbeta.new(${1:lo: 0.0}, ${2: hi: 1.0}, ${3: prob1: 1}, ${4: prob2: 1}, ${5: length: inf})
endsnippet

snippet Pbind.new
Pbind.new(${1:pairs: [  ]})
endsnippet

snippet PbindProxy.new
PbindProxy.new(${1:pairs: [  ]})
endsnippet

snippet Pbindef.new
Pbindef.new(${1:key: nil}, ${2: pairs: [  ]})
endsnippet

snippet Pbindef.hasGlobalDictionary
Pbindef.hasGlobalDictionary(${1:})
endsnippet

snippet Pbindf.new
Pbindf.new(${1:pattern: nil}, ${2: pairs: [  ]})
endsnippet

snippet Pbinop.new
Pbinop.new(${1:operator: nil}, ${2: a: nil}, ${3: b: nil}, ${4: adverb: nil})
endsnippet

snippet Pbjorklund.new
Pbjorklund.new(${1:k: nil}, ${2: n: nil}, ${3: length: inf}, ${4: offset: 0})
endsnippet

snippet Pbrown.new
Pbrown.new(${1:lo: 0.0}, ${2: hi: 1.0}, ${3: step: 0.125}, ${4: length: inf})
endsnippet

snippet Pbus.new
Pbus.new(${1:pattern: nil}, ${2: dur: 2.0}, ${3: fadeTime: 0.02}, ${4: numChannels: 2}, ${5: rate: audio})
endsnippet

snippet Pcauchy.new
Pcauchy.new(${1:mean: 0.0}, ${2: spread: 1.0}, ${3: length: inf})
endsnippet

snippet Pcbrown.new
Pcbrown.new(${1:lo: 0.0}, ${2: hi: 1.0}, ${3: step: 0.125}, ${4: center: nil}, ${5: length: inf}, ${6: startVal: nil})
endsnippet

snippet Pchain.new
Pchain.new(${1:patterns: [  ]})
endsnippet

snippet Pclump.new
Pclump.new(${1:n: nil}, ${2: pattern: nil})
endsnippet

snippet Pclutch.new
Pclutch.new(${1:pattern: nil}, ${2: connected: true})
endsnippet

snippet Pconst.new
Pconst.new(${1:sum: nil}, ${2: pattern: nil}, ${3: tolerance: 0.001})
endsnippet

snippet Pdef.new
Pdef.new(${1:key: nil}, ${2: item: nil})
endsnippet

snippet Pdef.hasGlobalDictionary
Pdef.hasGlobalDictionary(${1:})
endsnippet

snippet Pdef.initClass
Pdef.initClass(${1:})
endsnippet

snippet Pdef.gui
Pdef.gui(${1:numItems: nil}, ${2: bounds: nil}, ${3: preset: nil})
endsnippet

snippet PdefAllGui.observedClass
PdefAllGui.observedClass(${1:})
endsnippet

snippet PdefAllGui.tpGuiClass
PdefAllGui.tpGuiClass(${1:})
endsnippet

snippet PdefGui.observedClass
PdefGui.observedClass(${1:})
endsnippet

snippet Pdefn.initClass
Pdefn.initClass(${1:})
endsnippet

snippet Pdefn.new
Pdefn.new(${1:key: nil}, ${2: item: nil})
endsnippet

snippet Pdefn.hasGlobalDictionary
Pdefn.hasGlobalDictionary(${1:})
endsnippet

snippet PdefnAllGui.observedClass
PdefnAllGui.observedClass(${1:})
endsnippet

snippet PdefnAllGui.tpGuiClass
PdefnAllGui.tpGuiClass(${1:})
endsnippet

snippet PdefnGui.observedClass
PdefnGui.observedClass(${1:})
endsnippet

snippet PdegreeToKey.new
PdegreeToKey.new(${1:pattern: nil}, ${2: scale: nil}, ${3: stepsPerOctave: 12})
endsnippet

snippet Pdfsm.new
Pdfsm.new(${1:list: nil}, ${2: startState: 0}, ${3: repeats: 1})
endsnippet

snippet Pdict.new
Pdict.new(${1:dict: nil}, ${2: which: nil}, ${3: repeats: inf}, ${4: default: nil})
endsnippet

snippet Pdrop.new
Pdrop.new(${1:count: nil}, ${2: pattern: nil})
endsnippet

snippet Pdup.new
Pdup.new(${1:n: nil}, ${2: pattern: nil})
endsnippet

snippet PdurStutter.initClass
PdurStutter.initClass(${1:})
endsnippet

snippet PdurStutter.new
PdurStutter.new(${1:n: nil}, ${2: pattern: nil})
endsnippet

snippet Peak.ar
Peak.ar(${1:in: 0.0}, ${2: trig: 0.0})
endsnippet

snippet Peak.kr
Peak.kr(${1:in: 0.0}, ${2: trig: 0.0})
endsnippet

snippet PeakEQ2.ar
PeakEQ2.ar(${1:in: nil}, ${2: freq: 1200.0}, ${3: rs: 1.0}, ${4: db: 0.0})
endsnippet

snippet PeakEQ4.ar
PeakEQ4.ar(${1:in: nil}, ${2: freq: 1200.0}, ${3: rs: 1.0}, ${4: db: 0.0})
endsnippet

snippet PeakFollower.ar
PeakFollower.ar(${1:in: 0.0}, ${2: decay: 0.999})
endsnippet

snippet PeakFollower.kr
PeakFollower.kr(${1:in: 0.0}, ${2: decay: 0.999})
endsnippet

snippet Pen.push
Pen.push(${1:})
endsnippet

snippet Pen.pop
Pen.pop(${1:})
endsnippet

snippet Pen.use
Pen.use(${1:aFunction: nil})
endsnippet

snippet Pen.fillColor_
Pen.fillColor_(${1:aColor: nil})
endsnippet

snippet Pen.strokeColor_
Pen.strokeColor_(${1:aColor: nil})
endsnippet

snippet Pen.color_
Pen.color_(${1:aColor: nil})
endsnippet

snippet Pen.width_
Pen.width_(${1:width: nil})
endsnippet

snippet Pen.joinStyle_
Pen.joinStyle_(${1:style: nil})
endsnippet

snippet Pen.capStyle_
Pen.capStyle_(${1:style: nil})
endsnippet

snippet Pen.lineDash_
Pen.lineDash_(${1:pattern: nil})
endsnippet

snippet Pen.alpha_
Pen.alpha_(${1:value: nil})
endsnippet

snippet Pen.blendMode_
Pen.blendMode_(${1:mode: nil})
endsnippet

snippet Pen.beginTransparencyLayer
Pen.beginTransparencyLayer(${1:})
endsnippet

snippet Pen.endTransparencyLayer
Pen.endTransparencyLayer(${1:})
endsnippet

snippet Pen.clip
Pen.clip(${1:})
endsnippet

snippet Pen.smoothing_
Pen.smoothing_(${1:flag: nil})
endsnippet

snippet Pen.font_
Pen.font_(${1:aFont: nil})
endsnippet

snippet Pen.prSetFont
Pen.prSetFont(${1:aFont: nil})
endsnippet

snippet Pen.translate
Pen.translate(${1:x: 0}, ${2: y: 0})
endsnippet

snippet Pen.scale
Pen.scale(${1:x: 0}, ${2: y: 0})
endsnippet

snippet Pen.skew
Pen.skew(${1:x: 0}, ${2: y: 0})
endsnippet

snippet Pen.rotate
Pen.rotate(${1:angle: 0}, ${2: x: 0}, ${3: y: 0})
endsnippet

snippet Pen.rotateDeg
Pen.rotateDeg(${1:angle: 0}, ${2: x: 0}, ${3: y: 0})
endsnippet

snippet Pen.matrix
Pen.matrix(${1:})
endsnippet

snippet Pen.matrix_
Pen.matrix_(${1:matrixArray: nil})
endsnippet

snippet Pen.beginPath
Pen.beginPath(${1:})
endsnippet

snippet Pen.path
Pen.path(${1:})
endsnippet

snippet Pen.moveTo
Pen.moveTo(${1:point: nil})
endsnippet

snippet Pen.lineTo
Pen.lineTo(${1:point: nil})
endsnippet

snippet Pen.line
Pen.line(${1:p1: nil}, ${2: p2: nil})
endsnippet

snippet Pen.curveTo
Pen.curveTo(${1:endPoint: nil}, ${2: cPoint1: nil}, ${3: cPoint2: nil})
endsnippet

snippet Pen.quadCurveTo
Pen.quadCurveTo(${1:endPoint: nil}, ${2: cPoint: nil})
endsnippet

snippet Pen.arcTo
Pen.arcTo(${1:point1: nil}, ${2: point2: nil}, ${3: radius: nil})
endsnippet

snippet Pen.addRect
Pen.addRect(${1:aRect: nil})
endsnippet

snippet Pen.addRoundedRect
Pen.addRoundedRect(${1:aRect: nil}, ${2: radiusX: nil}, ${3: radiusY: nil})
endsnippet

snippet Pen.addOval
Pen.addOval(${1:rect: nil})
endsnippet

snippet Pen.addArc
Pen.addArc(${1:center: nil}, ${2: radius: nil}, ${3: startAngle: nil}, ${4: arcAngle: nil})
endsnippet

snippet Pen.prAddArc
Pen.prAddArc(${1:center: nil}, ${2: radius: nil}, ${3: startAngle: nil}, ${4: arcAngle: nil})
endsnippet

snippet Pen.addWedge
Pen.addWedge(${1:center: nil}, ${2: radius: nil}, ${3: startAngle: nil}, ${4: sweepLength: nil})
endsnippet

snippet Pen.addWedge_Deg
Pen.addWedge_Deg(${1:center: nil}, ${2: radius: nil}, ${3: startAngle: nil}, ${4: sweepLength: nil})
endsnippet

snippet Pen.addAnnularWedge
Pen.addAnnularWedge(${1:center: nil}, ${2: innerRadius: nil}, ${3: outerRadius: nil}, ${4: startAngle: nil}, ${5: sweepLength: nil})
endsnippet

snippet Pen.prAddAnnularWedge
Pen.prAddAnnularWedge(${1:center: nil}, ${2: innerRadius: nil}, ${3: outerRadius: nil}, ${4: startAngle: nil}, ${5: sweepLength: nil})
endsnippet

snippet Pen.fill
Pen.fill(${1:})
endsnippet

snippet Pen.stroke
Pen.stroke(${1:})
endsnippet

snippet Pen.draw
Pen.draw(${1:style: nil})
endsnippet

snippet Pen.fillStroke
Pen.fillStroke(${1:})
endsnippet

snippet Pen.strokeRect
Pen.strokeRect(${1:rect: nil})
endsnippet

snippet Pen.fillRect
Pen.fillRect(${1:rect: nil})
endsnippet

snippet Pen.strokeOval
Pen.strokeOval(${1:rect: nil})
endsnippet

snippet Pen.fillOval
Pen.fillOval(${1:rect: nil})
endsnippet

snippet Pen.fillAxialGradient
Pen.fillAxialGradient(${1:startPoint: nil}, ${2: endPoint: nil}, ${3: startColor: nil}, ${4: endColor: nil})
endsnippet

snippet Pen.fillRadialGradient
Pen.fillRadialGradient(${1:innerCircleCenter: nil}, ${2: outerCircleCenter: nil}, ${3: startRadius: nil}, ${4: endRadius: nil}, ${5: startColor: nil}, ${6: endColor: nil})
endsnippet

snippet Pen.setShadow
Pen.setShadow(${1:offsetPoint: nil}, ${2: blur: nil}, ${3: color: nil})
endsnippet

snippet Pen.string
Pen.string(${1:aString: nil})
endsnippet

snippet Pen.stringAtPoint
Pen.stringAtPoint(${1:string: nil}, ${2: point: nil}, ${3: font: nil}, ${4: color: nil})
endsnippet

snippet Pen.stringInRect
Pen.stringInRect(${1:string: nil}, ${2: rect: nil}, ${3: font: nil}, ${4: color: nil}, ${5: alignment: nil})
endsnippet

snippet Pen.stringCenteredIn
Pen.stringCenteredIn(${1:string: nil}, ${2: rect: nil}, ${3: font: nil}, ${4: color: nil})
endsnippet

snippet Pen.stringLeftJustIn
Pen.stringLeftJustIn(${1:string: nil}, ${2: rect: nil}, ${3: font: nil}, ${4: color: nil})
endsnippet

snippet Pen.stringRightJustIn
Pen.stringRightJustIn(${1:string: nil}, ${2: rect: nil}, ${3: font: nil}, ${4: color: nil})
endsnippet

snippet Pen.drawImage
Pen.drawImage(${1:target: nil}, ${2: image: nil}, ${3: source: nil}, ${4: operation: sourceOver}, ${5: opacity: 1.0})
endsnippet

snippet Pen.tileImage
Pen.tileImage(${1:target: nil}, ${2: image: nil}, ${3: source: nil}, ${4: operation: sourceOver}, ${5: opacity: 1.0})
endsnippet

snippet Pen.prBegin
Pen.prBegin(${1:aView: nil})
endsnippet

snippet Pen.prEnd
Pen.prEnd(${1:})
endsnippet

snippet Pen.prDrawImage
Pen.prDrawImage(${1:target: nil}, ${2: image: nil}, ${3: source: nil}, ${4: operation: nil}, ${5: opacity: nil})
endsnippet

snippet Pen.prTileImage
Pen.prTileImage(${1:target: nil}, ${2: image: nil}, ${3: source: nil}, ${4: operation: nil}, ${5: opacity: nil})
endsnippet

snippet Pen.nonimpl
Pen.nonimpl(${1:methodName: nil})
endsnippet

snippet Pen.splineCurve
Pen.splineCurve(${1:point1: nil}, ${2: point2: nil}, ${3: cpoint1: nil}, ${4: cpoint2: nil}, ${5: div: 10})
endsnippet

snippet Pen.addCurve
Pen.addCurve(${1:start: nil}, ${2: c1: nil}, ${3: c2: nil}, ${4: end: nil}, ${5: div: 10})
endsnippet

snippet Pen.addQuadCurve
Pen.addQuadCurve(${1:start: nil}, ${2: c1: nil}, ${3: end: nil}, ${4: div: 10})
endsnippet

snippet Pen.drawSpline
Pen.drawSpline(${1:start: nil}, ${2: c1: nil}, ${3: c2: nil}, ${4: end: nil}, ${5: strokeColor: nil}, ${6: controlColor: nil}, ${7: div: 10})
endsnippet

snippet Pen.roundedRect
Pen.roundedRect(${1:rect: nil}, ${2: radius: nil})
endsnippet

snippet Pen.extrudedRect
Pen.extrudedRect(${1:rect: nil}, ${2: radius: nil}, ${3: width: 2}, ${4: angle: nil}, ${5: inverse: false}, ${6: colors: nil})
endsnippet

snippet Pen.circle
Pen.circle(${1:rect: nil})
endsnippet

snippet Pen.extrudedCircle
Pen.extrudedCircle(${1:rect: nil}, ${2: width: 2}, ${3: angle: nil}, ${4: inverse: false}, ${5: colors: nil})
endsnippet

snippet Pen.arrow
Pen.arrow(${1:start: nil}, ${2: end: nil}, ${3: width: 5}, ${4: arrowAngle: 1.5707963267949})
endsnippet

snippet Pen.arrow_round
Pen.arrow_round(${1:start: nil}, ${2: end: nil}, ${3: width: 5}, ${4: arrowAngle: 1.5707963267949})
endsnippet

snippet Pen.cross
Pen.cross(${1:center: nil}, ${2: radius: 5}, ${3: shape: +})
endsnippet

snippet Pen.transformToRect
Pen.transformToRect(${1:rect: nil}, ${2: fromRect: nil}, ${3: keepRatio: false}, ${4: scale: 1}, ${5: move: 0.5})
endsnippet

snippet Pen.drawIcon
Pen.drawIcon(${1:symbol: play}, ${2: rect: nil}, ${3: args: [  ]})
endsnippet

snippet Penvir.new
Penvir.new(${1:envir: nil}, ${2: pattern: nil}, ${3: independent: true})
endsnippet

snippet PenvirGet.new
PenvirGet.new(${1:key: nil}, ${2: default: 0}, ${3: environment: nil})
endsnippet

snippet Perlin3.ar
Perlin3.ar(${1:x: 0}, ${2: y: 0}, ${3: z: 0})
endsnippet

snippet Perlin3.kr
Perlin3.kr(${1:x: 0}, ${2: y: 0}, ${3: z: 0})
endsnippet

snippet PermMod.ar
PermMod.ar(${1:in: nil}, ${2: freq: 100}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet PermModArray.ar
PermModArray.ar(${1:in: nil}, ${2: freq: 50}, ${3: pattern: nil}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet PermModT.ar
PermModT.ar(${1:in: nil}, ${2: outfreq: 440}, ${3: infreq: 5000}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet Pevent.new
Pevent.new(${1:pattern: nil}, ${2: event: nil})
endsnippet

snippet Peventmod.new
Peventmod.new(${1:func: nil}, ${2: event: nil}, ${3: repeats: inf})
endsnippet

snippet Pexprand.new
Pexprand.new(${1:lo: 0.0001}, ${2: hi: 1.0}, ${3: length: inf})
endsnippet

snippet PfadeIn.new
PfadeIn.new(${1:pattern: nil}, ${2: fadeTime: 1.0}, ${3: holdTime: 0.0}, ${4: tolerance: 0.0001})
endsnippet

snippet Pfhn.new
Pfhn.new(${1:a: 0.7}, ${2: b: 0.8}, ${3: c: 1.0}, ${4: d: 1.0}, ${5: i: nil}, ${6: u: -0.1}, ${7: v: 0.1}, ${8: n: true})
endsnippet

snippet Pfin.new
Pfin.new(${1:count: nil}, ${2: pattern: nil})
endsnippet

snippet PfinQuant.new
PfinQuant.new(${1:pattern: nil}, ${2: quant: nil}, ${3: clock: nil})
endsnippet

snippet Pfindur.new
Pfindur.new(${1:dur: nil}, ${2: pattern: nil}, ${3: tolerance: 0.001})
endsnippet

snippet Pfset.new
Pfset.new(${1:func: nil}, ${2: pattern: nil}, ${3: cleanupFunc: nil})
endsnippet

snippet Pfunc.new
Pfunc.new(${1:nextFunc: nil}, ${2: resetFunc: nil})
endsnippet

snippet Pfuncn.new
Pfuncn.new(${1:func: nil}, ${2: repeats: 1})
endsnippet

snippet Pfx.new
Pfx.new(${1:pattern: nil}, ${2: fxname: nil}, ${3: pairs: [  ]})
endsnippet

snippet Pfxb.new
Pfxb.new(${1:pattern: nil}, ${2: fxname: nil}, ${3: pairs: [  ]})
endsnippet

snippet Pgate.new
Pgate.new(${1:pattern: nil}, ${2: repeats: inf}, ${3: key: nil})
endsnippet

snippet Pgauss.new
Pgauss.new(${1:mean: 0.0}, ${2: dev: 1}, ${3: length: inf})
endsnippet

snippet Pgbman.new
Pgbman.new(${1:x: 1.2}, ${2: y: 2.1}, ${3: n: true})
endsnippet

snippet Pgeom.new
Pgeom.new(${1:start: 0}, ${2: grow: 1}, ${3: length: inf})
endsnippet

snippet Pget.new
Pget.new(${1:key: nil}, ${2: default: nil}, ${3: repeats: 1})
endsnippet

snippet Pgpar.implClass
Pgpar.implClass(${1:})
endsnippet

snippet Pgroup.eventType
Pgroup.eventType(${1:})
endsnippet

snippet Pgtpar.implClass
Pgtpar.implClass(${1:})
endsnippet

snippet Phaser.help
Phaser.help(${1:method: nil}, ${2: argument: nil})
endsnippet

snippet Phaser.kr
Phaser.kr(${1:freq: 440.0}, ${2: phase: 0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet Phaser.ar
Phaser.ar(${1:freq: 440.0}, ${2: phase: 0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet Phasor.ar
Phasor.ar(${1:trig: 0.0}, ${2: rate: 1.0}, ${3: start: 0.0}, ${4: end: 1.0}, ${5: resetPos: 0.0})
endsnippet

snippet Phasor.kr
Phasor.kr(${1:trig: 0.0}, ${2: rate: 1.0}, ${3: start: 0.0}, ${4: end: 1.0}, ${5: resetPos: 0.0})
endsnippet

snippet Phenon.new
Phenon.new(${1:a: 1.3}, ${2: b: 0.3}, ${3: x: 0.30501993062401}, ${4: y: 0.20938865431933}, ${5: n: true})
endsnippet

snippet Phrand.new
Phrand.new(${1:list: nil}, ${2: histSize: 2}, ${3: repeats: 1})
endsnippet

snippet Phrase.new
Phrase.new(${1:phrase: nil}, ${2: returnProbs: nil}, ${3: loopReturns: true})
endsnippet

snippet Pif.new
Pif.new(${1:condition: nil}, ${2: iftrue: nil}, ${3: iffalse: nil}, ${4: default: nil})
endsnippet

snippet Pindex.new
Pindex.new(${1:listPat: nil}, ${2: indexPat: nil}, ${3: repeats: 1})
endsnippet

snippet PingPong.ar
PingPong.ar(${1:bufnum: 0}, ${2: inputs: nil}, ${3: delayTime: nil}, ${4: feedback: 0.7}, ${5: rotate: 1})
endsnippet

snippet Pint.initClass
Pint.initClass(${1:})
endsnippet

snippet Pint.new
Pint.new(${1:pattern: 0.0}, ${2: rate: 1}, ${3: length: inf}, ${4: interpolation: 2})
endsnippet

snippet PintC.new
PintC.new(${1:pattern: 0.0}, ${2: rate: 1}, ${3: length: inf})
endsnippet

snippet PintL.new
PintL.new(${1:pattern: 0.0}, ${2: rate: 1}, ${3: length: inf})
endsnippet

snippet PintN.new
PintN.new(${1:pattern: 0.0}, ${2: rate: 1}, ${3: length: inf})
endsnippet

snippet Pipe.new
Pipe.new(${1:commandLine: nil}, ${2: mode: nil})
endsnippet

snippet Pipe.argv
Pipe.argv(${1:args: nil}, ${2: mode: nil})
endsnippet

snippet Pipe.call
Pipe.call(${1:command: nil}, ${2: onSuccess: nil}, ${3: onError: nil}, ${4: maxLineLength: 4096})
endsnippet

snippet Pipe.callSync
Pipe.callSync(${1:command: nil}, ${2: onSuccess: nil}, ${3: onError: nil}, ${4: maxLineLength: 4096})
endsnippet

snippet Pitch.kr
Pitch.kr(${1:in: 0.0}, ${2: initFreq: 440.0}, ${3: minFreq: 60.0}, ${4: maxFreq: 4000.0}, ${5: execFreq: 100.0}, ${6: maxBinsPerOctave: 16}, ${7: median: 1}, ${8: ampThreshold: 0.01}, ${9: peakThreshold: 0.5}, ${10: downSample: 1}, ${11: clar: 0})
endsnippet

snippet PitchShift.ar
PitchShift.ar(${1:in: 0.0}, ${2: windowSize: 0.2}, ${3: pitchRatio: 1.0}, ${4: pitchDispersion: 0.0}, ${5: timeDispersion: 0.0}, ${6: mul: 1.0}, ${7: add: 0.0})
endsnippet

snippet Pkey.new
Pkey.new(${1:key: nil}, ${2: repeats: nil})
endsnippet

snippet Plag.new
Plag.new(${1:lag: nil}, ${2: pattern: nil})
endsnippet

snippet Plambda.new
Plambda.new(${1:pattern: nil}, ${2: scope: nil})
endsnippet

snippet PlaneTree.kr
PlaneTree.kr(${1:treebuf: nil}, ${2: in: nil}, ${3: gate: 1})
endsnippet

snippet PlaneTree.categories
PlaneTree.categories(${1:})
endsnippet

snippet PlaneTree.classify
PlaneTree.classify(${1:point: nil}, ${2: treedata: nil}, ${3: pathInt: 1})
endsnippet

snippet PlaneTree.treedist
PlaneTree.treedist(${1:path1: nil}, ${2: path2: nil})
endsnippet

snippet Platform.initClass
Platform.initClass(${1:})
endsnippet

snippet Platform.case
Platform.case(${1:cases: [  ]})
endsnippet

snippet Platform.classLibraryDir
Platform.classLibraryDir(${1:})
endsnippet

snippet Platform.helpDir
Platform.helpDir(${1:})
endsnippet

snippet Platform.userHomeDir
Platform.userHomeDir(${1:})
endsnippet

snippet Platform.systemAppSupportDir
Platform.systemAppSupportDir(${1:})
endsnippet

snippet Platform.userAppSupportDir
Platform.userAppSupportDir(${1:})
endsnippet

snippet Platform.systemExtensionDir
Platform.systemExtensionDir(${1:})
endsnippet

snippet Platform.userExtensionDir
Platform.userExtensionDir(${1:})
endsnippet

snippet Platform.userConfigDir
Platform.userConfigDir(${1:})
endsnippet

snippet Platform.resourceDir
Platform.resourceDir(${1:})
endsnippet

snippet Platform.recordingsDir
Platform.recordingsDir(${1:})
endsnippet

snippet Platform.defaultTempDir
Platform.defaultTempDir(${1:})
endsnippet

snippet Platform.ideName
Platform.ideName(${1:})
endsnippet

snippet Platform.platformDir
Platform.platformDir(${1:})
endsnippet

snippet Platform.pathSeparator
Platform.pathSeparator(${1:})
endsnippet

snippet Platform.pathDelimiter
Platform.pathDelimiter(${1:})
endsnippet

snippet Platform.isPathSeparator
Platform.isPathSeparator(${1:char: nil})
endsnippet

snippet Platform.clearMetadata
Platform.clearMetadata(${1:path: nil})
endsnippet

snippet Platform.deprecatedStartupFiles
Platform.deprecatedStartupFiles(${1:paths: nil})
endsnippet

snippet Platform.when
Platform.when(${1:features: nil}, ${2: ifFunction: nil}, ${3: elseFunction: nil})
endsnippet

snippet Platform.hasQt
Platform.hasQt(${1:})
endsnippet

snippet Platform.hasQtWebEngine
Platform.hasQtWebEngine(${1:})
endsnippet

snippet Platform.architecture
Platform.architecture(${1:})
endsnippet

snippet Platform.hasBelaSupport
Platform.hasBelaSupport(${1:})
endsnippet

snippet Platoo.new
Platoo.new(${1:a: 3.0}, ${2: b: -2.0}, ${3: c: 0.7}, ${4: d: 0.9}, ${5: x: 0.34082301375036}, ${6: y: -0.38270086971332}, ${7: n: true})
endsnippet

snippet PlayBuf.ar
PlayBuf.ar(${1:numChannels: nil}, ${2: bufnum: 0}, ${3: rate: 1.0}, ${4: trigger: 1.0}, ${5: startPos: 0.0}, ${6: loop: 0.0}, ${7: doneAction: 0})
endsnippet

snippet PlayBuf.kr
PlayBuf.kr(${1:numChannels: nil}, ${2: bufnum: 0}, ${3: rate: 1.0}, ${4: trigger: 1.0}, ${5: startPos: 0.0}, ${6: loop: 0.0}, ${7: doneAction: 0})
endsnippet

snippet PlayBufAlt.ar
PlayBufAlt.ar(${1:numChannels: nil}, ${2: bufnum: 0}, ${3: rate: 1.0}, ${4: trigger: 1.0}, ${5: startPos: 0.0}, ${6: loop: 1.0}, ${7: lag: 0.05}, ${8: n: 2})
endsnippet

snippet PlayBufAlt.arOld
PlayBufAlt.arOld(${1:numChannels: nil}, ${2: bufnum: 0}, ${3: rate: 1.0}, ${4: trigger: 1.0}, ${5: startPos: 0.0}, ${6: loop: 1.0}, ${7: lag: 0.05})
endsnippet

snippet PlayBufAlt.ar1
PlayBufAlt.ar1(${1:numChannels: nil}, ${2: bufnum: 0}, ${3: rate: 1.0}, ${4: trigger: 1.0}, ${5: startPos: 0.0}, ${6: loop: 1.0}, ${7: lag: 0.05})
endsnippet

snippet PlayBufCF.ar
PlayBufCF.ar(${1:numChannels: nil}, ${2: bufnum: 0}, ${3: rate: 1.0}, ${4: trigger: 1.0}, ${5: startPos: 0.0}, ${6: loop: 0.0}, ${7: lag: 0.1}, ${8: n: 2})
endsnippet

snippet PlayBufCF.arOld
PlayBufCF.arOld(${1:numChannels: nil}, ${2: bufnum: 0}, ${3: rate: 1.0}, ${4: trigger: 1.0}, ${5: startPos: 0.0}, ${6: loop: 0.0}, ${7: lag: 0.1}, ${8: safeMode: true})
endsnippet

snippet PlayBufFree.ar
PlayBufFree.ar(${1:numChannels: nil}, ${2: bufnum: 0}, ${3: rate: 1.0}, ${4: trigger: 1.0}, ${5: startPos: 0.0}, ${6: loop: 0.0})
endsnippet

snippet PlayBufFree.generateSynthDef
PlayBufFree.generateSynthDef(${1:numCha: 1})
endsnippet

snippet PlayBufLoop.ar
PlayBufLoop.ar(${1:numChannels: nil}, ${2: bufnum: 0}, ${3: rate: 1.0}, ${4: startPos: 0.0}, ${5: endPos: 1.0}, ${6: loop: 0.0}, ${7: keepLoop: 0})
endsnippet

snippet Plazy.new
Plazy.new(${1:func: nil})
endsnippet

snippet PlazyEnvirN.new
PlazyEnvirN.new(${1:func: nil})
endsnippet

snippet Plet.new
Plet.new(${1:key: nil}, ${2: pattern: nil}, ${3: return: nil})
endsnippet

snippet PlinCong.new
PlinCong.new(${1:a: 1.1}, ${2: c: 0.1}, ${3: m: 0.5}, ${4: x: 0.0}, ${5: n: true})
endsnippet

snippet Plorenz.new
Plorenz.new(${1:s: 10}, ${2: r: 28}, ${3: b: 2.66666666667}, ${4: h: 0.01}, ${5: x: 0.090879182417163}, ${6: y: 2.97077458055}, ${7: z: 24.282041054363})
endsnippet

snippet Plot.initClass
Plot.initClass(${1:})
endsnippet

snippet Plot.new
Plot.new(${1:plotter: nil})
endsnippet

snippet PlotPoint.new
PlotPoint.new(${1:point: nil})
endsnippet

snippet Plotter.new
Plotter.new(${1:name: nil}, ${2: bounds: nil}, ${3: parent: nil})
endsnippet

snippet Pluck.ar
Pluck.ar(${1:in: 0.0}, ${2: trig: 1.0}, ${3: maxdelaytime: 0.2}, ${4: delaytime: 0.2}, ${5: decaytime: 1.0}, ${6: coef: 0.5}, ${7: mul: 1.0}, ${8: add: 0.0})
endsnippet

snippet Pmono.new
Pmono.new(${1:name: nil}, ${2: pairs: [  ]})
endsnippet

snippet PmonoStream.new
PmonoStream.new(${1:pattern: nil})
endsnippet

snippet Pn.new
Pn.new(${1:pattern: nil}, ${2: repeats: inf}, ${3: key: nil})
endsnippet

snippet Pnaryop.new
Pnaryop.new(${1:operator: nil}, ${2: a: nil}, ${3: arglist: nil})
endsnippet

snippet Point.new
Point.new(${1:x: 0}, ${2: y: 0})
endsnippet

snippet Point.big
Point.big(${1:x: nil}, ${2: y: nil})
endsnippet

snippet Point.rand
Point.rand(${1:x: 1.0}, ${2: y: 1.0})
endsnippet

snippet Point.rand2
Point.rand2(${1:x: 1.0}, ${2: y: 1.0})
endsnippet

snippet PointArray.new
PointArray.new(${1:n: nil})
endsnippet

snippet PointSource.new
PointSource.new(${1:argsig: nil}, ${2: argthepolar: nil})
endsnippet

snippet PointSource.newt
PointSource.newt(${1:argsig: nil}, ${2: rho: 0.0}, ${3: theta: 0.0}, ${4: phi: nil})
endsnippet

snippet Polar.new
Polar.new(${1:rho: nil}, ${2: theta: nil})
endsnippet

snippet Poll.ar
Poll.ar(${1:trig: nil}, ${2: in: nil}, ${3: label: nil}, ${4: trigid: -1})
endsnippet

snippet Poll.kr
Poll.kr(${1:trig: nil}, ${2: in: nil}, ${3: label: nil}, ${4: trigid: -1})
endsnippet

snippet Poll.new
Poll.new(${1:trig: nil}, ${2: in: nil}, ${3: label: nil}, ${4: trigid: -1})
endsnippet

snippet Poll.new1
Poll.new1(${1:rate: nil}, ${2: trig: nil}, ${3: in: nil}, ${4: label: nil}, ${5: trigid: nil})
endsnippet

snippet PolyLine.new
PolyLine.new(${1:points: [  ]})
endsnippet

snippet PolySpline.new
PolySpline.new(${1:points: [  ]})
endsnippet

snippet PopUpMenu.qtClass
PopUpMenu.qtClass(${1:})
endsnippet

snippet PosRatio.ar
PosRatio.ar(${1:in: nil}, ${2: period: 100}, ${3: thresh: 0.1})
endsnippet

snippet Post.initClass
Post.initClass(${1:})
endsnippet

snippet Post.put
Post.put(${1:item: nil})
endsnippet

snippet Post.putAll
Post.putAll(${1:aCollection: nil})
endsnippet

snippet Post.comma
Post.comma(${1:})
endsnippet

snippet Post.space
Post.space(${1:})
endsnippet

snippet Post.nl
Post.nl(${1:})
endsnippet

snippet Post.ff
Post.ff(${1:})
endsnippet

snippet Post.tab
Post.tab(${1:})
endsnippet

snippet Post.close
Post.close(${1:})
endsnippet

snippet PowerOfTwoAllocator.new
PowerOfTwoAllocator.new(${1:size: nil}, ${2: pos: 0})
endsnippet

snippet PowerOfTwoBlock.new
PowerOfTwoBlock.new(${1:address: nil}, ${2: size: nil})
endsnippet

snippet PparGroup.eventType
PparGroup.eventType(${1:})
endsnippet

snippet Ppatmod.new
Ppatmod.new(${1:pattern: nil}, ${2: func: nil}, ${3: repeats: nil})
endsnippet

snippet Pplayer.new
Pplayer.new(${1:playerPattern: nil}, ${2: subPattern: nil})
endsnippet

snippet Ppoisson.new
Ppoisson.new(${1:mean: 1}, ${2: length: inf})
endsnippet

snippet Ppostln.new
Ppostln.new(${1:pattern: nil}, ${2: prefix: nil})
endsnippet

snippet Pprob.new
Pprob.new(${1:distribution: nil}, ${2: lo: 0.0}, ${3: hi: 1.0}, ${4: length: inf}, ${5: tableSize: nil})
endsnippet

snippet Pprotect.new
Pprotect.new(${1:pattern: nil}, ${2: func: nil})
endsnippet

snippet Pproto.new
Pproto.new(${1:makeFunction: nil}, ${2: pattern: nil}, ${3: cleanupFunc: nil})
endsnippet

snippet Pquad.new
Pquad.new(${1:a: -3.741}, ${2: b: 3.741}, ${3: c: 0}, ${4: x: 0.1}, ${5: n: true})
endsnippet

snippet Pretty.new
Pretty.new(${1:out: nil})
endsnippet

snippet PrettyState.new
PrettyState.new(${1:pretty: nil})
endsnippet

snippet Prewrite.new
Prewrite.new(${1:pattern: nil}, ${2: dict: nil}, ${3: levels: 1})
endsnippet

snippet PrimitiveFailedError.new
PrimitiveFailedError.new(${1:receiver: nil})
endsnippet

snippet PrintVal.kr
PrintVal.kr(${1:in: nil}, ${2: numblocks: 100}, ${3: id: 0})
endsnippet

snippet PrivateIn.busClass
PrivateIn.busClass(${1:})
endsnippet

snippet PrivateIn.ar
PrivateIn.ar(${1:bus: 0}, ${2: numChannels: 1})
endsnippet

snippet PrivateInFeedback.busClass
PrivateInFeedback.busClass(${1:})
endsnippet

snippet PrivateOffsetOut.busClass
PrivateOffsetOut.busClass(${1:})
endsnippet

snippet PrivateOut.busClass
PrivateOut.busClass(${1:})
endsnippet

snippet PrivateOut.ar
PrivateOut.ar(${1:bus: 0}, ${2: channelsArray: nil})
endsnippet

snippet PrivatePanOut.busClass
PrivatePanOut.busClass(${1:})
endsnippet

snippet PrivateReplaceOut.busClass
PrivateReplaceOut.busClass(${1:})
endsnippet

snippet PrivateXOut.busClass
PrivateXOut.busClass(${1:})
endsnippet

snippet PrivateXOut.ar
PrivateXOut.ar(${1:bus: 0}, ${2: xfade: nil}, ${3: channelsArray: nil})
endsnippet

snippet Process.tailCallOptimize
Process.tailCallOptimize(${1:})
endsnippet

snippet Process.tailCallOptimize_
Process.tailCallOptimize_(${1:bool: nil})
endsnippet

snippet Process.elapsedTime
Process.elapsedTime(${1:})
endsnippet

snippet Process.monotonicClockTime
Process.monotonicClockTime(${1:})
endsnippet

snippet ProgramChangeResponder.new
ProgramChangeResponder.new(${1:function: nil}, ${2: src: nil}, ${3: chan: nil}, ${4: value: nil}, ${5: install: true})
endsnippet

snippet ProgramChangeResponder.init
ProgramChangeResponder.init(${1:})
endsnippet

snippet ProgramChangeResponder.initialized
ProgramChangeResponder.initialized(${1:})
endsnippet

snippet ProgramChangeResponder.responders
ProgramChangeResponder.responders(${1:})
endsnippet

snippet ProgramChangeResponder.add
ProgramChangeResponder.add(${1:resp: nil})
endsnippet

snippet ProgramChangeResponder.remove
ProgramChangeResponder.remove(${1:resp: nil})
endsnippet

snippet Prorate.new
Prorate.new(${1:proportion: nil}, ${2: pattern: 1})
endsnippet

snippet Prout.new
Prout.new(${1:routineFunc: nil})
endsnippet

snippet ProxyMixer.new
ProxyMixer.new(${1:obj: nil}, ${2: numItems: 16}, ${3: parent: nil}, ${4: bounds: nil}, ${5: makeSkip: true}, ${6: options: nil})
endsnippet

snippet ProxyMixer.small
ProxyMixer.small(${1:obj: nil}, ${2: numItems: 16}, ${3: parent: nil}, ${4: bounds: nil}, ${5: makeSkip: true})
endsnippet

snippet ProxyMonitorGui.new
ProxyMonitorGui.new(${1:proxy: nil}, ${2: w: nil}, ${3: bounds: nil}, ${4: showLevel: false}, ${5: showPlayN: true}, ${6: showName: true}, ${7: showPauseSend: true}, ${8: makeWatcher: true}, ${9: skin: nil})
endsnippet

snippet ProxyMonitorGui.initClass
ProxyMonitorGui.initClass(${1:})
endsnippet

snippet ProxySpace.initClass
ProxySpace.initClass(${1:})
endsnippet

snippet ProxySpace.new
ProxySpace.new(${1:server: nil}, ${2: name: nil}, ${3: clock: nil})
endsnippet

snippet ProxySpace.push
ProxySpace.push(${1:server: nil}, ${2: name: nil}, ${3: clock: nil})
endsnippet

snippet ProxySpace.clearAll
ProxySpace.clearAll(${1:})
endsnippet

snippet ProxySpace.findSpace
ProxySpace.findSpace(${1:proxy: nil}, ${2: getCode: false})
endsnippet

snippet ProxySynthDef.new
ProxySynthDef.new(${1:name: nil}, ${2: func: nil}, ${3: rates: nil}, ${4: prependArgs: nil}, ${5: makeFadeEnv: true}, ${6: channelOffset: 0}, ${7: chanConstraint: nil}, ${8: rateConstraint: nil})
endsnippet

snippet Pseed.new
Pseed.new(${1:randSeed: nil}, ${2: pattern: nil})
endsnippet

snippet Pseg.new
Pseg.new(${1:levels: nil}, ${2: durs: 1}, ${3: curves: lin}, ${4: repeats: 1})
endsnippet

snippet Pseq.new
Pseq.new(${1:list: nil}, ${2: repeats: 1}, ${3: offset: 0})
endsnippet

snippet Pseries.new
Pseries.new(${1:start: 0}, ${2: step: 1}, ${3: length: inf})
endsnippet

snippet Pset.new
Pset.new(${1:name: nil}, ${2: value: nil}, ${3: pattern: nil})
endsnippet

snippet Psetpre.new
Psetpre.new(${1:name: nil}, ${2: value: nil}, ${3: pattern: nil})
endsnippet

snippet Pslide.new
Pslide.new(${1:list: nil}, ${2: repeats: 1}, ${3: len: 3}, ${4: step: 1}, ${5: start: 0}, ${6: wrapAtEnd: true})
endsnippet

snippet Pspawn.new
Pspawn.new(${1:pattern: nil}, ${2: spawnProtoEvent: nil})
endsnippet

snippet Pstandard.new
Pstandard.new(${1:k: 1.5}, ${2: x: 4.9789799812499}, ${3: y: 5.7473416156381}, ${4: n: true})
endsnippet

snippet Pstep.new
Pstep.new(${1:levels: nil}, ${2: durs: 1}, ${3: repeats: 1})
endsnippet

snippet Pstep2add.new
Pstep2add.new(${1:pattern1: nil}, ${2: pattern2: nil})
endsnippet

snippet Pstep3add.new
Pstep3add.new(${1:pattern1: nil}, ${2: pattern2: nil}, ${3: pattern3: nil})
endsnippet

snippet PstepNadd.new
PstepNadd.new(${1:patterns: [  ]})
endsnippet

snippet PstepNfunc.new
PstepNfunc.new(${1:function: nil}, ${2: patterns: nil})
endsnippet

snippet Pstretch.new
Pstretch.new(${1:value: nil}, ${2: pattern: nil})
endsnippet

snippet Pstutter.initClass
Pstutter.initClass(${1:})
endsnippet

snippet Pstutter.new
Pstutter.new(${1:n: nil}, ${2: pattern: nil})
endsnippet

snippet Pswitch.new
Pswitch.new(${1:list: nil}, ${2: which: 0})
endsnippet

snippet Psym.new
Psym.new(${1:pattern: nil}, ${2: dict: nil})
endsnippet

snippet Psync.new
Psync.new(${1:pattern: nil}, ${2: quant: nil}, ${3: maxdur: nil}, ${4: tolerance: 0.001}, ${5: mindur: 0})
endsnippet

snippet Ptime.new
Ptime.new(${1:repeats: inf})
endsnippet

snippet Ptrace.new
Ptrace.new(${1:pattern: nil}, ${2: key: nil}, ${3: printStream: nil}, ${4: prefix: })
endsnippet

snippet Ptsym.new
Ptsym.new(${1:pattern: nil}, ${2: dict: nil}, ${3: quant: nil}, ${4: dur: nil}, ${5: tolerance: 0.001})
endsnippet

snippet Pulse.ar
Pulse.ar(${1:freq: 440.0}, ${2: width: 0.5}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet Pulse.kr
Pulse.kr(${1:freq: 440.0}, ${2: width: 0.5}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet PulseCount.ar
PulseCount.ar(${1:trig: 0.0}, ${2: reset: 0.0})
endsnippet

snippet PulseCount.kr
PulseCount.kr(${1:trig: 0.0}, ${2: reset: 0.0})
endsnippet

snippet PulseDPW.ar
PulseDPW.ar(${1:freq: 440.0}, ${2: width: 0.5}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet PulseDPW.kr
PulseDPW.kr(${1:freq: 440.0}, ${2: width: 0.5}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet PulseDPW.new
PulseDPW.new(${1:rate: ar}, ${2: freq: 440.0}, ${3: width: 0.5}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet PulseDivider.ar
PulseDivider.ar(${1:trig: 0.0}, ${2: div: 2.0}, ${3: start: 0.0})
endsnippet

snippet PulseDivider.kr
PulseDivider.kr(${1:trig: 0.0}, ${2: div: 2.0}, ${3: start: 0.0})
endsnippet

snippet PulseTrain.ar
PulseTrain.ar(${1:in: nil}, ${2: n: 4}, ${3: t: 0.25}, ${4: lfirst: 0}, ${5: lrest: 1})
endsnippet

snippet PulseTrain.arD
PulseTrain.arD(${1:in: nil}, ${2: n: 3}, ${3: t: 0.25}, ${4: lfirst: 0}, ${5: lrest: 1}, ${6: maxN: 3}, ${7: maxDel: 1.0})
endsnippet

snippet PulseTrain.kr
PulseTrain.kr(${1:in: nil}, ${2: n: 4}, ${3: t: 0.25}, ${4: lfirst: 0}, ${5: lrest: 1})
endsnippet

snippet Punop.new
Punop.new(${1:operator: nil}, ${2: a: nil})
endsnippet

snippet Pwalk.new
Pwalk.new(${1:list: nil}, ${2: stepPattern: nil}, ${3: directionPattern: 1}, ${4: startPos: 0})
endsnippet

snippet Pwhite.new
Pwhite.new(${1:lo: 0.0}, ${2: hi: 1.0}, ${3: length: inf})
endsnippet

snippet Pwrand.new
Pwrand.new(${1:list: nil}, ${2: weights: nil}, ${3: repeats: 1})
endsnippet

snippet Pwrap.new
Pwrap.new(${1:pattern: nil}, ${2: lo: nil}, ${3: hi: nil})
endsnippet

snippet QAlignment.initClass
QAlignment.initClass(${1:})
endsnippet

snippet QAlignment.new
QAlignment.new(${1:alignment: nil})
endsnippet

snippet QCallback.qtClass
QCallback.qtClass(${1:})
endsnippet

snippet QCallback.new
QCallback.new(${1:func: nil})
endsnippet

snippet QCallback.newFrom
QCallback.newFrom(${1:other: nil})
endsnippet

snippet QColorGroup.new
QColorGroup.new(${1:name: nil})
endsnippet

snippet QColorRole.new
QColorRole.new(${1:name: nil})
endsnippet

snippet QCurve.new
QCurve.new(${1:curve: nil})
endsnippet

snippet QKeyModifiers.toCocoa
QKeyModifiers.toCocoa(${1:mods: nil})
endsnippet

snippet QLevelIndicatorStyle.new
QLevelIndicatorStyle.new(${1:style: nil})
endsnippet

snippet QLimits.initClass
QLimits.initClass(${1:})
endsnippet

snippet QLimits.new
QLimits.new(${1:limit: nil})
endsnippet

snippet QMenuRole.new
QMenuRole.new(${1:name: nil})
endsnippet

snippet QMetaObject.new
QMetaObject.new(${1:className: nil})
endsnippet

snippet QObject.qtClass
QObject.qtClass(${1:})
endsnippet

snippet QObject.meta
QObject.meta(${1:})
endsnippet

snippet QObject.new
QObject.new(${1:argumentArray: nil})
endsnippet

snippet QObject.heap
QObject.heap(${1:})
endsnippet

snippet QOrientation.initClass
QOrientation.initClass(${1:})
endsnippet

snippet QOrientation.new
QOrientation.new(${1:alignment: nil})
endsnippet

snippet QPalette.new
QPalette.new(${1:})
endsnippet

snippet QPalette.auto
QPalette.auto(${1:buttonColor: nil}, ${2: windowColor: nil})
endsnippet

snippet QPalette.system
QPalette.system(${1:})
endsnippet

snippet QPalette.light
QPalette.light(${1:})
endsnippet

snippet QPalette.dark
QPalette.dark(${1:})
endsnippet

snippet QPenPrinter.qtClass
QPenPrinter.qtClass(${1:})
endsnippet

snippet QPenPrinter.new
QPenPrinter.new(${1:})
endsnippet

snippet QPenPrinter.print
QPenPrinter.print(${1:printFunc: nil}, ${2: cancelFunc: nil})
endsnippet

snippet QRenderProcessTerminationStatus.new
QRenderProcessTerminationStatus.new(${1:symbol: nil})
endsnippet

snippet QToolButtonStyle.new
QToolButtonStyle.new(${1:name: nil})
endsnippet

snippet QWebAttribute.new
QWebAttribute.new(${1:symbol: nil})
endsnippet

snippet QWebFontFamily.new
QWebFontFamily.new(${1:symbol: nil})
endsnippet

snippet QWebPageAction.new
QWebPageAction.new(${1:symbol: nil})
endsnippet

snippet Qitch.kr
Qitch.kr(${1:in: 0.0}, ${2: databufnum: nil}, ${3: ampThreshold: 0.01}, ${4: algoflag: 1}, ${5: ampbufnum: nil}, ${6: minfreq: 0}, ${7: maxfreq: 2500})
endsnippet

snippet QtGUI.initClass
QtGUI.initClass(${1:})
endsnippet

snippet QtGUI.id
QtGUI.id(${1:})
endsnippet

snippet QtGUI.stop
QtGUI.stop(${1:})
endsnippet

snippet QtGUI.debugLevel
QtGUI.debugLevel(${1:})
endsnippet

snippet QtGUI.debugLevel_
QtGUI.debugLevel_(${1:level: nil})
endsnippet

snippet QtGUI.view
QtGUI.view(${1:})
endsnippet

snippet QtGUI.compositeView
QtGUI.compositeView(${1:})
endsnippet

snippet QtGUI.hLayoutView
QtGUI.hLayoutView(${1:})
endsnippet

snippet QtGUI.vLayoutView
QtGUI.vLayoutView(${1:})
endsnippet

snippet QtGUI.window
QtGUI.window(${1:})
endsnippet

snippet QtGUI.scrollView
QtGUI.scrollView(${1:})
endsnippet

snippet QtGUI.staticText
QtGUI.staticText(${1:})
endsnippet

snippet QtGUI.button
QtGUI.button(${1:})
endsnippet

snippet QtGUI.checkBox
QtGUI.checkBox(${1:})
endsnippet

snippet QtGUI.textField
QtGUI.textField(${1:})
endsnippet

snippet QtGUI.numberBox
QtGUI.numberBox(${1:})
endsnippet

snippet QtGUI.slider
QtGUI.slider(${1:})
endsnippet

snippet QtGUI.multiSliderView
QtGUI.multiSliderView(${1:})
endsnippet

snippet QtGUI.rangeSlider
QtGUI.rangeSlider(${1:})
endsnippet

snippet QtGUI.slider2D
QtGUI.slider2D(${1:})
endsnippet

snippet QtGUI.knob
QtGUI.knob(${1:})
endsnippet

snippet QtGUI.listView
QtGUI.listView(${1:})
endsnippet

snippet QtGUI.treeView
QtGUI.treeView(${1:})
endsnippet

snippet QtGUI.popUpMenu
QtGUI.popUpMenu(${1:})
endsnippet

snippet QtGUI.textView
QtGUI.textView(${1:})
endsnippet

snippet QtGUI.freqScope
QtGUI.freqScope(${1:})
endsnippet

snippet QtGUI.freqScopeView
QtGUI.freqScopeView(${1:})
endsnippet

snippet QtGUI.scopeView
QtGUI.scopeView(${1:})
endsnippet

snippet QtGUI.stethoscope1
QtGUI.stethoscope1(${1:})
endsnippet

snippet QtGUI.stethoscope
QtGUI.stethoscope(${1:})
endsnippet

snippet QtGUI.soundFileView
QtGUI.soundFileView(${1:})
endsnippet

snippet QtGUI.envelopeView
QtGUI.envelopeView(${1:})
endsnippet

snippet QtGUI.levelIndicator
QtGUI.levelIndicator(${1:})
endsnippet

snippet QtGUI.webView
QtGUI.webView(${1:})
endsnippet

snippet QtGUI.userView
QtGUI.userView(${1:})
endsnippet

snippet QtGUI.dragSource
QtGUI.dragSource(${1:})
endsnippet

snippet QtGUI.dragSink
QtGUI.dragSink(${1:})
endsnippet

snippet QtGUI.dragBoth
QtGUI.dragBoth(${1:})
endsnippet

snippet QtGUI.dialog
QtGUI.dialog(${1:})
endsnippet

snippet QtGUI.ezScroller
QtGUI.ezScroller(${1:})
endsnippet

snippet QtGUI.ezSlider
QtGUI.ezSlider(${1:})
endsnippet

snippet QtGUI.ezListView
QtGUI.ezListView(${1:})
endsnippet

snippet QtGUI.ezPopUpMenu
QtGUI.ezPopUpMenu(${1:})
endsnippet

snippet QtGUI.ezNumber
QtGUI.ezNumber(${1:})
endsnippet

snippet QtGUI.ezRanger
QtGUI.ezRanger(${1:})
endsnippet

snippet QtGUI.hLayout
QtGUI.hLayout(${1:})
endsnippet

snippet QtGUI.vLayout
QtGUI.vLayout(${1:})
endsnippet

snippet QtGUI.gridLayout
QtGUI.gridLayout(${1:})
endsnippet

snippet QtGUI.stackLayout
QtGUI.stackLayout(${1:})
endsnippet

snippet QtGUI.pen
QtGUI.pen(${1:})
endsnippet

snippet QtGUI.font
QtGUI.font(${1:})
endsnippet

snippet QtGUI.image
QtGUI.image(${1:})
endsnippet

snippet QtGUI.qcView
QtGUI.qcView(${1:})
endsnippet

snippet QtGUI.notImplemented
QtGUI.notImplemented(${1:class: nil})
endsnippet

snippet QtGUI.cursorPosition
QtGUI.cursorPosition(${1:})
endsnippet

snippet QtGUI.availableStyles
QtGUI.availableStyles(${1:})
endsnippet

snippet QtGUI.style_
QtGUI.style_(${1:styleName: nil})
endsnippet

snippet QtGUI.stringBounds
QtGUI.stringBounds(${1:aString: nil}, ${2: aFont: nil})
endsnippet

snippet QtGUI.palette
QtGUI.palette(${1:})
endsnippet

snippet QtGUI.palette_
QtGUI.palette_(${1:p: nil})
endsnippet

snippet QtGUI.focusView
QtGUI.focusView(${1:})
endsnippet

snippet QtGUI.selectedText
QtGUI.selectedText(${1:})
endsnippet

snippet QtGUI.prStringBounds
QtGUI.prStringBounds(${1:aString: nil}, ${2: aFont: nil})
endsnippet

snippet QtGUI.prSetStyle
QtGUI.prSetStyle(${1:name: nil})
endsnippet

snippet QuadN.ar
QuadN.ar(${1:freq: 22050}, ${2: a: 1}, ${3: b: -1}, ${4: c: -0.75}, ${5: xi: 0}, ${6: mul: 1}, ${7: add: 0})
endsnippet

snippet Quant.default
Quant.default(${1:})
endsnippet

snippet Quant.default_
Quant.default_(${1:quant: nil})
endsnippet

snippet Quant.new
Quant.new(${1:quant: 0}, ${2: phase: nil}, ${3: timingOffset: nil})
endsnippet

snippet Quark.new
Quark.new(${1:name: nil}, ${2: refspec: nil}, ${3: url: nil}, ${4: localPath: nil})
endsnippet

snippet Quark.fromLocalPath
Quark.fromLocalPath(${1:path: nil})
endsnippet

snippet Quark.fromDirectoryEntry
Quark.fromDirectoryEntry(${1:name: nil}, ${2: directoryEntry: nil})
endsnippet

snippet Quark.parseDependency
Quark.parseDependency(${1:dep: nil}, ${2: forQuark: nil})
endsnippet

snippet Quark.prMakeDep
Quark.prMakeDep(${1:name: nil}, ${2: refspec: nil})
endsnippet

snippet Quark.parseQuarkName
Quark.parseQuarkName(${1:name: nil}, ${2: refspec: nil}, ${3: url: nil}, ${4: localPath: nil})
endsnippet

snippet QuarkRowView.new
QuarkRowView.new(${1:parent: nil}, ${2: quark: nil}, ${3: quarksGui: nil})
endsnippet

snippet Quarks.install
Quarks.install(${1:name: nil}, ${2: refspec: nil})
endsnippet

snippet Quarks.uninstall
Quarks.uninstall(${1:name: nil})
endsnippet

snippet Quarks.uninstallQuark
Quarks.uninstallQuark(${1:quark: nil})
endsnippet

snippet Quarks.clear
Quarks.clear(${1:})
endsnippet

snippet Quarks.clearCache
Quarks.clearCache(${1:})
endsnippet

snippet Quarks.load
Quarks.load(${1:path: nil}, ${2: done: nil})
endsnippet

snippet Quarks.save
Quarks.save(${1:path: nil})
endsnippet

snippet Quarks.update
Quarks.update(${1:name: nil})
endsnippet

snippet Quarks.installed
Quarks.installed(${1:})
endsnippet

snippet Quarks.installedPaths
Quarks.installedPaths(${1:})
endsnippet

snippet Quarks.isInstalled
Quarks.isInstalled(${1:name: nil})
endsnippet

snippet Quarks.pathIsInstalled
Quarks.pathIsInstalled(${1:path: nil})
endsnippet

snippet Quarks.openFolder
Quarks.openFolder(${1:})
endsnippet

snippet Quarks.gui
Quarks.gui(${1:})
endsnippet

snippet Quarks.installQuark
Quarks.installQuark(${1:quark: nil})
endsnippet

snippet Quarks.link
Quarks.link(${1:path: nil})
endsnippet

snippet Quarks.unlink
Quarks.unlink(${1:path: nil})
endsnippet

snippet Quarks.initClass
Quarks.initClass(${1:})
endsnippet

snippet Quarks.at
Quarks.at(${1:name: nil})
endsnippet

snippet Quarks.findQuarkURL
Quarks.findQuarkURL(${1:name: nil})
endsnippet

snippet Quarks.directory
Quarks.directory(${1:})
endsnippet

snippet Quarks.addFolder
Quarks.addFolder(${1:path: nil})
endsnippet

snippet Quarks.all
Quarks.all(${1:})
endsnippet

snippet Quarks.fetchDirectory
Quarks.fetchDirectory(${1:force: true})
endsnippet

snippet Quarks.checkForUpdates
Quarks.checkForUpdates(${1:done: nil}, ${2: quarkAction: nil})
endsnippet

snippet Quarks.prReadDirectoryFile
Quarks.prReadDirectoryFile(${1:dirTxtPath: nil})
endsnippet

snippet Quarks.prFetchDirectory
Quarks.prFetchDirectory(${1:})
endsnippet

snippet Quarks.quarkNameAsLocalPath
Quarks.quarkNameAsLocalPath(${1:name: nil})
endsnippet

snippet Quarks.isPath
Quarks.isPath(${1:string: nil})
endsnippet

snippet Quarks.asAbsolutePath
Quarks.asAbsolutePath(${1:path: nil}, ${2: relativeTo: nil})
endsnippet

snippet Quarks.asRelativePath
Quarks.asRelativePath(${1:path: nil}, ${2: relativeToDir: nil})
endsnippet

snippet Quarks.classesInPackage
Quarks.classesInPackage(${1:packageName: nil})
endsnippet

snippet QuarksGui.new
QuarksGui.new(${1:})
endsnippet

snippet QuartzComposerView.qtClass
QuartzComposerView.qtClass(${1:})
endsnippet

snippet RLPF.ar
RLPF.ar(${1:in: 0.0}, ${2: freq: 440.0}, ${3: rq: 1.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet RLPF.kr
RLPF.kr(${1:in: 0.0}, ${2: freq: 440.0}, ${3: rq: 1.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet RLPFD.ar
RLPFD.ar(${1:in: nil}, ${2: ffreq: 440.0}, ${3: res: 0.0}, ${4: dist: 0.0}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet RLPFD.kr
RLPFD.kr(${1:in: nil}, ${2: ffreq: 440.0}, ${3: res: 0.0}, ${4: dist: 0.0}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet RMAFoodChainL.ar
RMAFoodChainL.ar(${1:freq: 22050}, ${2: a1: 5.0}, ${3: b1: 3.0}, ${4: d1: 0.4}, ${5: a2: 0.1}, ${6: b2: 2.0}, ${7: d2: 0.01}, ${8: k: 1.0943}, ${9: r: 0.8904}, ${10: h: 0.05}, ${11: xi: 0.1}, ${12: yi: 0}, ${13: zi: 0}, ${14: mul: 1.0}, ${15: add: 0.0})
endsnippet

snippet RMAFoodChainL.categories
RMAFoodChainL.categories(${1:})
endsnippet

snippet RMEQ.ar
RMEQ.ar(${1:in: nil}, ${2: freq: 440}, ${3: rq: 0.1}, ${4: k: 0}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet RMEQSuite.categories
RMEQSuite.categories(${1:})
endsnippet

snippet RMS.ar
RMS.ar(${1:in: nil}, ${2: lpFreq: 10})
endsnippet

snippet RMS.kr
RMS.kr(${1:in: nil}, ${2: lpFreq: 10})
endsnippet

snippet RMShelf.ar
RMShelf.ar(${1:in: nil}, ${2: freq: 440.0}, ${3: k: 0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet RMShelf2.ar
RMShelf2.ar(${1:in: nil}, ${2: freq: 440.0}, ${3: k: 0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet RadialGradient.new
RadialGradient.new(${1:innerCircleCenter: nil}, ${2: outerCircleCenter: nil}, ${3: startRadius: nil}, ${4: endRadius: nil}, ${5: color0: nil}, ${6: color1: nil})
endsnippet

snippet Rand.new
Rand.new(${1:lo: 0.0}, ${2: hi: 1.0})
endsnippet

snippet RandID.kr
RandID.kr(${1:id: 0})
endsnippet

snippet RandID.ir
RandID.ir(${1:id: 0})
endsnippet

snippet RandSeed.ar
RandSeed.ar(${1:trig: 0.0}, ${2: seed: 56789})
endsnippet

snippet RandSeed.kr
RandSeed.kr(${1:trig: 0.0}, ${2: seed: 56789})
endsnippet

snippet RandSeed.ir
RandSeed.ir(${1:trig: 0.0}, ${2: seed: 56789})
endsnippet

snippet Range.new
Range.new(${1:start: nil}, ${2: size: nil})
endsnippet

snippet RangeSlider.qtClass
RangeSlider.qtClass(${1:})
endsnippet

snippet RangeSlider.new
RangeSlider.new(${1:parent: nil}, ${2: bounds: nil})
endsnippet

snippet ReadableNodeIDAllocator.new
ReadableNodeIDAllocator.new(${1:clientID: 0}, ${2: lowestTempID: 1000}, ${3: numClients: 32})
endsnippet

snippet ReceiveReply.defaultCmdName
ReceiveReply.defaultCmdName(${1:})
endsnippet

snippet ReceiveReply.initClass
ReceiveReply.initClass(${1:})
endsnippet

snippet ReceiveReply.new
ReceiveReply.new(${1:source: nil}, ${2: action: nil}, ${3: cmdName: nil}, ${4: id: nil})
endsnippet

snippet ReceiveReply.free
ReceiveReply.free(${1:})
endsnippet

snippet ReceiveReply.remove
ReceiveReply.remove(${1:})
endsnippet

snippet ReceiveReply.cmdPeriod
ReceiveReply.cmdPeriod(${1:})
endsnippet

snippet ReceiveReply.oneShot
ReceiveReply.oneShot(${1:source: nil}, ${2: action: nil}, ${3: cmdName: nil}, ${4: id: nil})
endsnippet

snippet ReceiveTrig.defaultCmdName
ReceiveTrig.defaultCmdName(${1:})
endsnippet

snippet ReceiveTrig.new
ReceiveTrig.new(${1:source: nil}, ${2: action: nil}, ${3: id: nil})
endsnippet

snippet RecordBuf.ar
RecordBuf.ar(${1:inputArray: nil}, ${2: bufnum: 0}, ${3: offset: 0.0}, ${4: recLevel: 1.0}, ${5: preLevel: 0.0}, ${6: run: 1.0}, ${7: loop: 1.0}, ${8: trigger: 1.0}, ${9: doneAction: 0})
endsnippet

snippet RecordBuf.kr
RecordBuf.kr(${1:inputArray: nil}, ${2: bufnum: 0}, ${3: offset: 0.0}, ${4: recLevel: 1.0}, ${5: preLevel: 0.0}, ${6: run: 1.0}, ${7: loop: 1.0}, ${8: trigger: 1.0}, ${9: doneAction: 0})
endsnippet

snippet Recorder.new
Recorder.new(${1:server: nil})
endsnippet

snippet Rect.new
Rect.new(${1:left: 0}, ${2: top: 0}, ${3: width: 0}, ${4: height: 0})
endsnippet

snippet Rect.newSides
Rect.newSides(${1:left: 0}, ${2: top: 0}, ${3: right: 0}, ${4: bottom: 0})
endsnippet

snippet Rect.fromPoints
Rect.fromPoints(${1:pt1: nil}, ${2: pt2: nil})
endsnippet

snippet Rect.fromRect
Rect.fromRect(${1:rect: nil})
endsnippet

snippet Rect.fromArray
Rect.fromArray(${1:array: nil})
endsnippet

snippet Rect.aboutPoint
Rect.aboutPoint(${1:point: nil}, ${2: dx: nil}, ${3: dy: nil})
endsnippet

snippet Rect.rand
Rect.rand(${1:x: 1.0}, ${2: y: 1.0}, ${3: w: 1.0}, ${4: h: 1.0})
endsnippet

snippet Rect.rand2
Rect.rand2(${1:x: 1.0}, ${2: y: 1.0}, ${3: w: 1.0}, ${4: h: 1.0})
endsnippet

snippet Rect.multiNew
Rect.multiNew(${1:args: [  ]})
endsnippet

snippet Ref.new
Ref.new(${1:thing: nil})
endsnippet

snippet Reflections.ar
Reflections.ar(${1:pointsource: nil}, ${2: rooml: nil}, ${3: roomw: nil}, ${4: absorbtion: 0.9}, ${5: directivity: nil}, ${6: spkrs: [  ]})
endsnippet

snippet RemoveBadValues.ar
RemoveBadValues.ar(${1:in: nil}, ${2: post: 2})
endsnippet

snippet RemoveBadValues.kr
RemoveBadValues.kr(${1:in: nil}, ${2: post: 2})
endsnippet

snippet Resonz.ar
Resonz.ar(${1:in: 0.0}, ${2: freq: 440.0}, ${3: bwr: 1.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet Resonz.kr
Resonz.kr(${1:in: 0.0}, ${2: freq: 440.0}, ${3: bwr: 1.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet Rest.new
Rest.new(${1:value: 1})
endsnippet

snippet Rest.embedInStream
Rest.embedInStream(${1:inval: nil})
endsnippet

snippet Rest.asStream
Rest.asStream(${1:})
endsnippet

snippet RingBuffer.new
RingBuffer.new(${1:size: nil}, ${2: collectionClass: nil})
endsnippet

snippet RingNumberAllocator.new
RingNumberAllocator.new(${1:lo: nil}, ${2: hi: nil})
endsnippet

snippet Ringz.ar
Ringz.ar(${1:in: 0.0}, ${2: freq: 440.0}, ${3: decaytime: 1.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet Ringz.kr
Ringz.kr(${1:in: 0.0}, ${2: freq: 440.0}, ${3: decaytime: 1.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet RootNode.new
RootNode.new(${1:server: nil})
endsnippet

snippet RootNode.initClass
RootNode.initClass(${1:})
endsnippet

snippet RootNode.freeAll
RootNode.freeAll(${1:})
endsnippet

snippet RosslerL.ar
RosslerL.ar(${1:freq: 22050}, ${2: a: 0.2}, ${3: b: 0.2}, ${4: c: 5.7}, ${5: h: 0.05}, ${6: xi: 0.1}, ${7: yi: 0}, ${8: zi: 0}, ${9: mul: 1.0}, ${10: add: 0.0})
endsnippet

snippet RosslerL.categories
RosslerL.categories(${1:})
endsnippet

snippet RosslerResL.ar
RosslerResL.ar(${1:in: nil}, ${2: stiff: 1.0}, ${3: freq: 22050}, ${4: a: 0.2}, ${5: b: 0.2}, ${6: c: 5.7}, ${7: h: 0.05}, ${8: xi: 0.1}, ${9: yi: 0}, ${10: zi: 0}, ${11: mul: 1.0}, ${12: add: 0.0})
endsnippet

snippet Rotate.ar
Rotate.ar(${1:w: nil}, ${2: x: nil}, ${3: y: nil}, ${4: z: nil}, ${5: rotate: nil})
endsnippet

snippet Rotate2.ar
Rotate2.ar(${1:x: nil}, ${2: y: nil}, ${3: pos: 0.0})
endsnippet

snippet Rotate2.kr
Rotate2.kr(${1:x: nil}, ${2: y: nil}, ${3: pos: 0.0})
endsnippet

snippet RotateL.selectClass
RotateL.selectClass(${1:})
endsnippet

snippet RotateN.new1
RotateN.new1(${1:rate: nil}, ${2: n: 0}, ${3: array: nil})
endsnippet

snippet RotateN.ar
RotateN.ar(${1:n: 0}, ${2: array: nil})
endsnippet

snippet RotateN.kr
RotateN.kr(${1:n: 0}, ${2: array: nil})
endsnippet

snippet RotateN.selectClass
RotateN.selectClass(${1:})
endsnippet

snippet RoundButton.paletteExample
RoundButton.paletteExample(${1:parent: nil}, ${2: bounds: nil})
endsnippet

snippet RoundNumberBox.initClass
RoundNumberBox.initClass(${1:})
endsnippet

snippet RoundNumberBox.defaultFont
RoundNumberBox.defaultFont(${1:})
endsnippet

snippet RoundNumberBox.defaultFont_
RoundNumberBox.defaultFont_(${1:font: nil})
endsnippet

snippet RoundNumberBox.paletteExample
RoundNumberBox.paletteExample(${1:parent: nil}, ${2: bounds: nil})
endsnippet

snippet RoundPan.ar
RoundPan.ar(${1:numChans: 2}, ${2: in: nil}, ${3: pos: 0.0}, ${4: level: 1}, ${5: distance: 1}, ${6: orientation: 0.5}, ${7: speakerRadius: 0.19}, ${8: dbFactor: 0}, ${9: panAzAmt: 1})
endsnippet

snippet RoundView.new
RoundView.new(${1:parent: nil}, ${2: bounds: nil}, ${3: rest: [  ]})
endsnippet

snippet RoundView.prShouldExpand
RoundView.prShouldExpand(${1:v: nil})
endsnippet

snippet RoundView.useWithSkin
RoundView.useWithSkin(${1:skin: nil}, ${2: function: nil})
endsnippet

snippet RoundView.pushSkin
RoundView.pushSkin(${1:skin: nil})
endsnippet

snippet RoundView.popSkin
RoundView.popSkin(${1:})
endsnippet

snippet RoundView.skin_
RoundView.skin_(${1:skin: nil})
endsnippet

snippet RoundView.skin
RoundView.skin(${1:})
endsnippet

snippet RoundedRect.new
RoundedRect.new(${1:left: 0}, ${2: top: 0}, ${3: width: 0}, ${4: height: 0}, ${5: radius: nil})
endsnippet

snippet RoundedRect.fromRect
RoundedRect.fromRect(${1:inRect: nil}, ${2: radius: nil})
endsnippet

snippet Routine.run
Routine.run(${1:func: nil}, ${2: stackSize: nil}, ${3: clock: nil}, ${4: quant: nil})
endsnippet

snippet RunningSum.ar
RunningSum.ar(${1:in: nil}, ${2: numsamp: 40})
endsnippet

snippet RunningSum.kr
RunningSum.kr(${1:in: nil}, ${2: numsamp: 40})
endsnippet

snippet RunningSum.rms
RunningSum.rms(${1:in: nil}, ${2: numsamp: 40})
endsnippet

snippet SCAlert.new
SCAlert.new(${1:string: Warning!}, ${2: buttons: nil}, ${3: actions: nil}, ${4: color: nil}, ${5: background: nil}, ${6: iconName: warning}, ${7: border: true})
endsnippet

snippet SCDoc.parseFileFull
SCDoc.parseFileFull(${1:path: nil})
endsnippet

snippet SCDoc.parseFilePartial
SCDoc.parseFilePartial(${1:path: nil})
endsnippet

snippet SCDoc.parseFileMetaData
SCDoc.parseFileMetaData(${1:dir: nil}, ${2: path: nil})
endsnippet

snippet SCDoc.prParseFile
SCDoc.prParseFile(${1:path: nil}, ${2: mode: nil})
endsnippet

snippet SCDoc.indexOldHelp
SCDoc.indexOldHelp(${1:})
endsnippet

snippet SCDoc.indexAllDocuments
SCDoc.indexAllDocuments(${1:clearCache: false})
endsnippet

snippet SCDoc.didIndexDocuments
SCDoc.didIndexDocuments(${1:})
endsnippet

snippet SCDoc.documents
SCDoc.documents(${1:})
endsnippet

snippet SCDoc.prRescanHelpSourceDirs
SCDoc.prRescanHelpSourceDirs(${1:})
endsnippet

snippet SCDoc.helpSourceDirs
SCDoc.helpSourceDirs(${1:})
endsnippet

snippet SCDoc.exportDocMapJS
SCDoc.exportDocMapJS(${1:path: nil})
endsnippet

snippet SCDoc.helpSourceDir_
SCDoc.helpSourceDir_(${1:path: nil})
endsnippet

snippet SCDoc.helpTargetDir_
SCDoc.helpTargetDir_(${1:path: nil})
endsnippet

snippet SCDoc.postMsg
SCDoc.postMsg(${1:txt: nil}, ${2: lvl: 0})
endsnippet

snippet SCDoc.parseDoc
SCDoc.parseDoc(${1:doc: nil})
endsnippet

snippet SCDoc.parseAndRender
SCDoc.parseAndRender(${1:doc: nil})
endsnippet

snippet SCDoc.prepareHelpForURL
SCDoc.prepareHelpForURL(${1:url: nil})
endsnippet

snippet SCDoc.initClass
SCDoc.initClass(${1:})
endsnippet

snippet SCDoc.classHasArKrIr
SCDoc.classHasArKrIr(${1:c: nil})
endsnippet

snippet SCDoc.checkVersion
SCDoc.checkVersion(${1:clearCache: false})
endsnippet

snippet SCDoc.renderAll
SCDoc.renderAll(${1:includeExtensions: true})
endsnippet

snippet SCDoc.makeClassTemplate
SCDoc.makeClassTemplate(${1:doc: nil})
endsnippet

snippet SCDoc.renderUndocClass
SCDoc.renderUndocClass(${1:doc: nil})
endsnippet

snippet SCDoc.getMethodDoc
SCDoc.getMethodDoc(${1:classname: nil}, ${2: methodname: nil})
endsnippet

snippet SCDoc.handleCopyMethods
SCDoc.handleCopyMethods(${1:node: nil}, ${2: doc: nil})
endsnippet

snippet SCDoc.findHelpFile
SCDoc.findHelpFile(${1:str: nil})
endsnippet

snippet SCDoc.getOldWrapUrl
SCDoc.getOldWrapUrl(${1:url: nil})
endsnippet

snippet SCDocEntry.new
SCDocEntry.new(${1:node: nil}, ${2: path: nil})
endsnippet

snippet SCDocEntry.newUndocClass
SCDocEntry.newUndocClass(${1:name: nil})
endsnippet

snippet SCDocHTMLRenderer.escapeSpecialChars
SCDocHTMLRenderer.escapeSpecialChars(${1:str: nil})
endsnippet

snippet SCDocHTMLRenderer.escapeSpacesInAnchor
SCDocHTMLRenderer.escapeSpacesInAnchor(${1:str: nil})
endsnippet

snippet SCDocHTMLRenderer.prLinkTargetForInternalLink
SCDocHTMLRenderer.prLinkTargetForInternalLink(${1:linkBase: nil}, ${2: linkAnchor: nil}, ${3: originalLink: nil})
endsnippet

snippet SCDocHTMLRenderer.prLinkTargetForExternalLink
SCDocHTMLRenderer.prLinkTargetForExternalLink(${1:linkBase: nil}, ${2: linkAnchor: nil})
endsnippet

snippet SCDocHTMLRenderer.prLinkTextForInternalLink
SCDocHTMLRenderer.prLinkTextForInternalLink(${1:linkBase: nil}, ${2: linkAnchor: nil}, ${3: linkText: nil})
endsnippet

snippet SCDocHTMLRenderer.htmlForLink
SCDocHTMLRenderer.htmlForLink(${1:link: nil}, ${2: escape: true})
endsnippet

snippet SCDocHTMLRenderer.makeArgString
SCDocHTMLRenderer.makeArgString(${1:m: nil}, ${2: par: true})
endsnippet

snippet SCDocHTMLRenderer.renderHeader
SCDocHTMLRenderer.renderHeader(${1:stream: nil}, ${2: doc: nil}, ${3: body: nil})
endsnippet

snippet SCDocHTMLRenderer.renderChildren
SCDocHTMLRenderer.renderChildren(${1:stream: nil}, ${2: node: nil})
endsnippet

snippet SCDocHTMLRenderer.renderMethod
SCDocHTMLRenderer.renderMethod(${1:stream: nil}, ${2: node: nil}, ${3: methodType: nil}, ${4: cls: nil}, ${5: icls: nil})
endsnippet

snippet SCDocHTMLRenderer.renderSubTree
SCDocHTMLRenderer.renderSubTree(${1:stream: nil}, ${2: node: nil})
endsnippet

snippet SCDocHTMLRenderer.renderTOC
SCDocHTMLRenderer.renderTOC(${1:stream: nil}, ${2: node: nil})
endsnippet

snippet SCDocHTMLRenderer.addUndocumentedMethods
SCDocHTMLRenderer.addUndocumentedMethods(${1:list: nil}, ${2: body: nil}, ${3: id2: nil}, ${4: id: nil}, ${5: title: nil})
endsnippet

snippet SCDocHTMLRenderer.renderClassTree
SCDocHTMLRenderer.renderClassTree(${1:stream: nil}, ${2: cls: nil})
endsnippet

snippet SCDocHTMLRenderer.renderFootNotes
SCDocHTMLRenderer.renderFootNotes(${1:stream: nil})
endsnippet

snippet SCDocHTMLRenderer.renderFooter
SCDocHTMLRenderer.renderFooter(${1:stream: nil}, ${2: doc: nil})
endsnippet

snippet SCDocHTMLRenderer.renderOnStream
SCDocHTMLRenderer.renderOnStream(${1:stream: nil}, ${2: doc: nil}, ${3: root: nil})
endsnippet

snippet SCDocHTMLRenderer.renderToFile
SCDocHTMLRenderer.renderToFile(${1:filename: nil}, ${2: doc: nil}, ${3: root: nil})
endsnippet

snippet SCNvim.sendJSON
SCNvim.sendJSON(${1:data: nil})
endsnippet

snippet SCNvim.luaeval
SCNvim.luaeval(${1:luacode: nil})
endsnippet

snippet SCNvim.eval
SCNvim.eval(${1:expr: nil}, ${2: callback_id: nil})
endsnippet

snippet SCNvim.updateStatusLine
SCNvim.updateStatusLine(${1:interval: 1})
endsnippet

snippet SCNvim.generateAssets
SCNvim.generateAssets(${1:cacheDir: nil}, ${2: snippetFormat: ultisnips})
endsnippet

snippet SCNvim.generateSyntax
SCNvim.generateSyntax(${1:outputPath: nil})
endsnippet

snippet SCNvim.generateTags
SCNvim.generateTags(${1:outputPath: nil})
endsnippet

snippet SCNvim.generateSnippets
SCNvim.generateSnippets(${1:outputPath: nil}, ${2: snippetFormat: nil})
endsnippet

snippet SCNvim.methodArgs
SCNvim.methodArgs(${1:method: nil})
endsnippet

snippet SCNvim.prepareHelpFor
SCNvim.prepareHelpFor(${1:text: nil})
endsnippet

snippet SCNvim.getHelpUri
SCNvim.getHelpUri(${1:subject: nil})
endsnippet

snippet SCNvim.getFileNameFromUri
SCNvim.getFileNameFromUri(${1:uri: nil})
endsnippet

snippet SCNvimDoc.exportDocMapJson
SCNvimDoc.exportDocMapJson(${1:path: nil})
endsnippet

snippet SCNvimDoc.parseFileMetaData
SCNvimDoc.parseFileMetaData(${1:dir: nil}, ${2: path: nil})
endsnippet

snippet SCNvimDoc.indexAllDocuments
SCNvimDoc.indexAllDocuments(${1:clearCache: false})
endsnippet

snippet SCNvimDoc.findHelpFile
SCNvimDoc.findHelpFile(${1:str: nil})
endsnippet

snippet SCNvimDoc.prepareHelpForURL
SCNvimDoc.prepareHelpForURL(${1:url: nil})
endsnippet

snippet SCNvimDocRenderer.renderTOC
SCNvimDocRenderer.renderTOC(${1:})
endsnippet

snippet SCNvimDocRenderer.renderHeader
SCNvimDocRenderer.renderHeader(${1:stream: nil}, ${2: doc: nil}, ${3: body: nil})
endsnippet

snippet SCNvimDocRenderer.renderFooter
SCNvimDocRenderer.renderFooter(${1:stream: nil}, ${2: doc: nil})
endsnippet

snippet SCNvimDocRenderer.renderMethod
SCNvimDocRenderer.renderMethod(${1:stream: nil}, ${2: node: nil}, ${3: methodType: nil}, ${4: cls: nil}, ${5: icls: nil})
endsnippet

snippet SCNvimDocRenderer.renderSubTree
SCNvimDocRenderer.renderSubTree(${1:stream: nil}, ${2: node: nil})
endsnippet

snippet SCNvimJSON.initClass
SCNvimJSON.initClass(${1:})
endsnippet

snippet SCNvimJSON.stringify
SCNvimJSON.stringify(${1:object: nil})
endsnippet

snippet SCNvimJSON.parse
SCNvimJSON.parse(${1:string: nil})
endsnippet

snippet SCNvimJSON.prParseRecursive
SCNvimJSON.prParseRecursive(${1:object: nil})
endsnippet

snippet SCNvimJSON.prAddAssoc
SCNvimJSON.prAddAssoc(${1:key: nil}, ${2: value: nil}, ${3: isLastItem: nil})
endsnippet

snippet SCRequestString.new
SCRequestString.new(${1:default: }, ${2: question: Please enter string:}, ${3: action: nil})
endsnippet

snippet SCScope.qtClass
SCScope.qtClass(${1:})
endsnippet

snippet SLOnset.kr
SLOnset.kr(${1:input: nil}, ${2: memorysize1: 20}, ${3: before: 5}, ${4: after: 5}, ${5: threshold: 10}, ${6: hysteresis: 10}, ${7: mul: 1.0}, ${8: add: 0.0})
endsnippet

snippet SMPTE.initClass
SMPTE.initClass(${1:})
endsnippet

snippet SMPTE.new
SMPTE.new(${1:inSeconds: 0}, ${2: fps: nil})
endsnippet

snippet SMPTE.hours
SMPTE.hours(${1:inHours: 0}, ${2: fps: nil})
endsnippet

snippet SMPTE.minutes
SMPTE.minutes(${1:inMinutes: 0}, ${2: fps: nil})
endsnippet

snippet SMPTE.frames
SMPTE.frames(${1:inFrames: 0}, ${2: fps: nil})
endsnippet

snippet SMPTE.subFrames
SMPTE.subFrames(${1:inSubFrames: 0}, ${2: fps: nil})
endsnippet

snippet SMPTE.array
SMPTE.array(${1:inArray: nil}, ${2: fps: nil})
endsnippet

snippet SMPTE.type
SMPTE.type(${1:input: 0}, ${2: type: nil}, ${3: fps: nil})
endsnippet

snippet SMPTE.fromMIDIFileArray
SMPTE.fromMIDIFileArray(${1:inArray: nil})
endsnippet

snippet SMPTE.fromDate
SMPTE.fromDate(${1:date: nil})
endsnippet

snippet SMPTE.fromDateHours
SMPTE.fromDateHours(${1:date: nil})
endsnippet

snippet SMPTE.localtime
SMPTE.localtime(${1:})
endsnippet

snippet SMPTE.fromString
SMPTE.fromString(${1:string: nil}, ${2: fps: nil})
endsnippet

snippet SMPTE.minSec
SMPTE.minSec(${1:minutes: 0}, ${2: seconds: 0})
endsnippet

snippet SMPTEView.new
SMPTEView.new(${1:parent: nil}, ${2: bnds: nil}, ${3: fontSize: 20})
endsnippet

snippet SMS.ar
SMS.ar(${1:input: nil}, ${2: maxpeaks: 80}, ${3: currentpeaks: 80}, ${4: tolerance: 4}, ${5: noisefloor: 0.2}, ${6: freqmult: 1.0}, ${7: freqadd: 0.0}, ${8: formantpreserve: 0}, ${9: useifft: 0}, ${10: ampmult: 1.0}, ${11: graphicsbufnum: nil}, ${12: mul: 1.0}, ${13: add: 0.0})
endsnippet

snippet SOMAreaWr.kr
SOMAreaWr.kr(${1:bufnum: nil}, ${2: inputdata: nil}, ${3: coords: nil}, ${4: netsize: 10}, ${5: numdims: 2}, ${6: nhood: 0.5}, ${7: gate: 1})
endsnippet

snippet SOMRd.kr
SOMRd.kr(${1:bufnum: nil}, ${2: inputdata: nil}, ${3: netsize: 10}, ${4: numdims: 2}, ${5: gate: 1})
endsnippet

snippet SOMRd.ar
SOMRd.ar(${1:bufnum: nil}, ${2: inputdata: nil}, ${3: netsize: 10}, ${4: numdims: 2}, ${5: gate: 1})
endsnippet

snippet SOMRd.coordsToBufIndex
SOMRd.coordsToBufIndex(${1:coords: nil}, ${2: netsize: 10})
endsnippet

snippet SOMRd.bufIndexToCoords
SOMRd.bufIndexToCoords(${1:bufindex: nil}, ${2: netsize: 10}, ${3: numdims: 3})
endsnippet

snippet SOMTrain.kr
SOMTrain.kr(${1:bufnum: nil}, ${2: inputdata: nil}, ${3: netsize: 10}, ${4: numdims: 2}, ${5: traindur: 5000}, ${6: nhood: 0.5}, ${7: gate: 1}, ${8: initweight: 1})
endsnippet

snippet SOMTrain.categories
SOMTrain.categories(${1:})
endsnippet

snippet SOMTrain.allocBuf
SOMTrain.allocBuf(${1:server: nil}, ${2: netsize: nil}, ${3: numdims: nil}, ${4: numinputchannels: nil}, ${5: init: nil})
endsnippet

snippet SOMTrain.initBufRand
SOMTrain.initBufRand(${1:buf: nil}, ${2: minval: -1}, ${3: maxval: 1})
endsnippet

snippet SOMTrain.initBufGrid
SOMTrain.initBufGrid(${1:buf: nil}, ${2: netsize: nil}, ${3: numdims: nil}, ${4: spinmatrix: nil}, ${5: offsets: 0}, ${6: scales: 1})
endsnippet

snippet SOMTrain.makeGrid
SOMTrain.makeGrid(${1:numchans: nil}, ${2: netsize: nil}, ${3: numdims: nil}, ${4: spinmatrix: nil}, ${5: offsets: 0}, ${6: scales: 1})
endsnippet

snippet SOMTrain.initBufGridRand
SOMTrain.initBufGridRand(${1:buf: nil}, ${2: netsize: nil}, ${3: numdims: nil}, ${4: offsets: 0}, ${5: scales: 1})
endsnippet

snippet SOMTrain.pr_makegrid
SOMTrain.pr_makegrid(${1:from: nil}, ${2: step: nil}, ${3: to: nil}, ${4: dims: nil})
endsnippet

snippet SOMTrain.trainFromFile
SOMTrain.trainFromFile(${1:path: nil}, ${2: init: gridrand}, ${3: numdims: 2}, ${4: netsize: 10}, ${5: numruns: 1}, ${6: server: nil}, ${7: action: nil}, ${8: nhood: 0.5}, ${9: initweight: 1})
endsnippet

snippet SOS.ar
SOS.ar(${1:in: 0.0}, ${2: a0: 0.0}, ${3: a1: 0.0}, ${4: a2: 0.0}, ${5: b1: 0.0}, ${6: b2: 0.0}, ${7: mul: 1.0}, ${8: add: 0.0})
endsnippet

snippet SOS.kr
SOS.kr(${1:in: 0.0}, ${2: a0: 0.0}, ${3: a1: 0.0}, ${4: a2: 0.0}, ${5: b1: 0.0}, ${6: b2: 0.0}, ${7: mul: 1.0}, ${8: add: 0.0})
endsnippet

snippet SOS.coeffs
SOS.coeffs(${1:sr: 44100}, ${2: a0: 0.0}, ${3: a1: 0.0}, ${4: a2: 0.0}, ${5: b1: 0.0}, ${6: b2: 0.0})
endsnippet

snippet SSHServer.new
SSHServer.new(${1:name: nil}, ${2: addr: nil}, ${3: options: nil}, ${4: clientID: 0}, ${5: sshLogin: nil})
endsnippet

snippet SSHServer.quitAll
SSHServer.quitAll(${1:})
endsnippet

snippet SSHServer.killAll
SSHServer.killAll(${1:login: nil})
endsnippet

snippet SVF.ar
SVF.ar(${1:signal: nil}, ${2: cutoff: 2200.0}, ${3: res: 0.1}, ${4: lowpass: 1.0}, ${5: bandpass: 0.0}, ${6: highpass: 0.0}, ${7: notch: 0.0}, ${8: peak: 0.0}, ${9: mul: 1.0}, ${10: add: 0.0})
endsnippet

snippet SVF.kr
SVF.kr(${1:signal: nil}, ${2: cutoff: 2200.0}, ${3: res: 0.1}, ${4: lowpass: 1.0}, ${5: bandpass: 0.0}, ${6: highpass: 0.0}, ${7: notch: 0.0}, ${8: peak: 0.0}, ${9: mul: 1.0}, ${10: add: 0.0})
endsnippet

snippet SVGCircle.new
SVGCircle.new(${1:cx: 0}, ${2: cy: 0}, ${3: r: 0}, ${4: name: nil}, ${5: strokeColor: nil}, ${6: fillColor: nil}, ${7: strokeWidth: nil}, ${8: transform: nil})
endsnippet

snippet SVGCircle.fromDOMElement
SVGCircle.fromDOMElement(${1:tag: nil})
endsnippet

snippet SVGEllipse.new
SVGEllipse.new(${1:cx: 0}, ${2: cy: 0}, ${3: rx: 0}, ${4: ry: 0}, ${5: name: nil}, ${6: strokeColor: nil}, ${7: fillColor: nil}, ${8: strokeWidth: nil}, ${9: transform: nil})
endsnippet

snippet SVGEllipse.fromRect
SVGEllipse.fromRect(${1:rect: nil}, ${2: name: nil}, ${3: strokeColor: nil}, ${4: fillColor: nil}, ${5: strokeWidth: nil}, ${6: transform: nil})
endsnippet

snippet SVGEllipse.fromDOMElement
SVGEllipse.fromDOMElement(${1:tag: nil})
endsnippet

snippet SVGFile.new
SVGFile.new(${1:path: nil}, ${2: objects: nil}, ${3: width: nil}, ${4: height: nil})
endsnippet

snippet SVGFile.read
SVGFile.read(${1:path: nil})
endsnippet

snippet SVGFile.parseXML
SVGFile.parseXML(${1:xml: }, ${2: path: nil})
endsnippet

snippet SVGFile.headerFilePath
SVGFile.headerFilePath(${1:})
endsnippet

snippet SVGGraphicObject.newCopyArgs
SVGGraphicObject.newCopyArgs(${1:args: [  ]})
endsnippet

snippet SVGGroup.new
SVGGroup.new(${1:objects: nil}, ${2: name: nil}, ${3: transform: nil})
endsnippet

snippet SVGGroup.fromDOMElement
SVGGroup.fromDOMElement(${1:tag: nil})
endsnippet

snippet SVGLine.new
SVGLine.new(${1:x1: 0}, ${2: y1: 0}, ${3: x2: 0}, ${4: y2: 0}, ${5: name: nil}, ${6: strokeColor: nil}, ${7: fillColor: nil}, ${8: strokeWidth: nil}, ${9: transform: nil})
endsnippet

snippet SVGLine.fromPoints
SVGLine.fromPoints(${1:points: nil}, ${2: name: nil}, ${3: strokeColor: nil}, ${4: fillColor: nil}, ${5: strokeWidth: nil}, ${6: transform: nil})
endsnippet

snippet SVGLine.fromDOMElement
SVGLine.fromDOMElement(${1:tag: nil})
endsnippet

snippet SVGObject.classFromTagName
SVGObject.classFromTagName(${1:tagName: desc})
endsnippet

snippet SVGObject.prFromDOMElement
SVGObject.prFromDOMElement(${1:element: nil})
endsnippet

snippet SVGPath.new
SVGPath.new(${1:segments: nil}, ${2: name: nil}, ${3: strokeColor: nil}, ${4: fillColor: nil}, ${5: strokeWidth: nil}, ${6: transform: nil}, ${7: cleanSegments: true})
endsnippet

snippet SVGPath.fromSVGPolyLine
SVGPath.fromSVGPolyLine(${1:aSVGPolyLine: nil}, ${2: curve: true}, ${3: close: false})
endsnippet

snippet SVGPath.convertString
SVGPath.convertString(${1:string: })
endsnippet

snippet SVGPath.convertToString
SVGPath.convertToString(${1:segmentsArray: nil})
endsnippet

snippet SVGPath.cleanSegments
SVGPath.cleanSegments(${1:segmentsArray: nil})
endsnippet

snippet SVGPath.fromDOMElement
SVGPath.fromDOMElement(${1:tag: nil})
endsnippet

snippet SVGPathSegment.initClass
SVGPathSegment.initClass(${1:})
endsnippet

snippet SVGPathSegment.new
SVGPathSegment.new(${1:type: nil}, ${2: args: [  ]})
endsnippet

snippet SVGPathSegment.getType
SVGPathSegment.getType(${1:type: nil})
endsnippet

snippet SVGPathSegment.getPropertiesFor
SVGPathSegment.getPropertiesFor(${1:type: nil})
endsnippet

snippet SVGPolyLine.new
SVGPolyLine.new(${1:points: nil}, ${2: name: nil}, ${3: strokeColor: nil}, ${4: fillColor: nil}, ${5: strokeWidth: nil}, ${6: transform: nil})
endsnippet

snippet SVGPolyLine.fromDOMElement
SVGPolyLine.fromDOMElement(${1:tag: nil})
endsnippet

snippet SVGRect.new
SVGRect.new(${1:x: 0}, ${2: y: 0}, ${3: width: 0}, ${4: height: 0}, ${5: rx: 0}, ${6: ry: 0}, ${7: name: nil}, ${8: strokeColor: nil}, ${9: fillColor: nil}, ${10: strokeWidth: nil}, ${11: transform: nil})
endsnippet

snippet SVGRect.fromRect
SVGRect.fromRect(${1:rect: nil}, ${2: name: nil}, ${3: strokeColor: nil}, ${4: fillColor: nil}, ${5: strokeWidth: nil}, ${6: transform: nil})
endsnippet

snippet SVGRect.fromDOMElement
SVGRect.fromDOMElement(${1:tag: nil})
endsnippet

snippet SVGText.new
SVGText.new(${1:string: nil}, ${2: x: nil}, ${3: y: nil}, ${4: fontName: nil}, ${5: fontSize: nil}, ${6: fillColor: nil}, ${7: dx: nil}, ${8: dy: nil}, ${9: name: nil}, ${10: transform: nil})
endsnippet

snippet SVGText.fromDOMElement
SVGText.fromDOMElement(${1:tag: nil})
endsnippet

snippet SVGTransform.new
SVGTransform.new(${1:string: nil})
endsnippet

snippet SVGTransform.fromDOMElement
SVGTransform.fromDOMElement(${1:tag: nil})
endsnippet

snippet SVGUnknown.new
SVGUnknown.new(${1:element: nil})
endsnippet

snippet Sanitize.ar
Sanitize.ar(${1:in: 0.0}, ${2: replace: 0.0})
endsnippet

snippet Sanitize.kr
Sanitize.kr(${1:in: 0.0}, ${2: replace: 0.0})
endsnippet

snippet Saw.ar
Saw.ar(${1:freq: 440.0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet Saw.kr
Saw.kr(${1:freq: 440.0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet SawDPW.ar
SawDPW.ar(${1:freq: 440.0}, ${2: iphase: 0.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet SawDPW.kr
SawDPW.kr(${1:freq: 440.0}, ${2: iphase: 0.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet Scale.new
Scale.new(${1:degrees: ionian}, ${2: pitchesPerOctave: nil}, ${3: tuning: nil}, ${4: name: Unknown Scale})
endsnippet

snippet Scale.at
Scale.at(${1:key: nil})
endsnippet

snippet Scale.doesNotUnderstand
Scale.doesNotUnderstand(${1:selector: nil}, ${2: args: nil})
endsnippet

snippet Scale.newFromKey
Scale.newFromKey(${1:key: nil}, ${2: tuning: nil})
endsnippet

snippet Scale.chromatic
Scale.chromatic(${1:tuning: et12})
endsnippet

snippet Scale.choose
Scale.choose(${1:size: 7}, ${2: pitchesPerOctave: 12})
endsnippet

snippet Scale.chooseFromSelected
Scale.chooseFromSelected(${1:selectFunc: nil})
endsnippet

snippet Scale.names
Scale.names(${1:})
endsnippet

snippet Scale.directory
Scale.directory(${1:})
endsnippet

snippet Scale.initClass
Scale.initClass(${1:})
endsnippet

snippet ScaleAD.new
ScaleAD.new(${1:degrees: nil}, ${2: pitchesPerOctave: nil}, ${3: descDegrees: nil}, ${4: tuning: nil}, ${5: name: Unknown Scale})
endsnippet

snippet ScaleLP.new
ScaleLP.new(${1:})
endsnippet

snippet ScaleStream.new
ScaleStream.new(${1:scale: nil}, ${2: startDegree: 0})
endsnippet

snippet ScaledUserView.initClass
ScaledUserView.initClass(${1:})
endsnippet

snippet ScaledUserView.new
ScaledUserView.new(${1:window: nil}, ${2: bounds: nil}, ${3: fromBounds: nil})
endsnippet

snippet ScaledUserView.window
ScaledUserView.window(${1:name: nil}, ${2: bounds: nil}, ${3: fromBounds: nil}, ${4: viewOffset: nil})
endsnippet

snippet ScaledUserView.withSliders
ScaledUserView.withSliders(${1:window: nil}, ${2: bounds: nil}, ${3: fromBounds: nil})
endsnippet

snippet ScaledUserViewContainer.initClass
ScaledUserViewContainer.initClass(${1:})
endsnippet

snippet ScaledUserViewContainer.new
ScaledUserViewContainer.new(${1:parent: nil}, ${2: bounds: nil}, ${3: fromBounds: nil}, ${4: viewOffset: nil})
endsnippet

snippet ScaledUserViewWindow.initClass
ScaledUserViewWindow.initClass(${1:})
endsnippet

snippet ScaledUserViewWindow.new
ScaledUserViewWindow.new(${1:name: nil}, ${2: bounds: nil}, ${3: fromBounds: nil}, ${4: viewOffset: nil})
endsnippet

snippet Scheduler.new
Scheduler.new(${1:clock: nil}, ${2: drift: false}, ${3: recursive: true})
endsnippet

snippet ScopeBuffer.alloc
ScopeBuffer.alloc(${1:server: nil}, ${2: numChannels: 1})
endsnippet

snippet ScopeBuffer.new
ScopeBuffer.new(${1:index: 0}, ${2: numChannels: 1}, ${3: server: nil})
endsnippet

snippet ScopeOut.ar
ScopeOut.ar(${1:inputArray: nil}, ${2: bufnum: 0})
endsnippet

snippet ScopeOut.kr
ScopeOut.kr(${1:inputArray: nil}, ${2: bufnum: 0})
endsnippet

snippet ScopeOut2.ar
ScopeOut2.ar(${1:inputArray: nil}, ${2: scopeNum: 0}, ${3: maxFrames: 4096}, ${4: scopeFrames: nil})
endsnippet

snippet ScopeOut2.kr
ScopeOut2.kr(${1:inputArray: nil}, ${2: scopeNum: 0}, ${3: maxFrames: 4096}, ${4: scopeFrames: nil})
endsnippet

snippet ScopeView.qtClass
ScopeView.qtClass(${1:})
endsnippet

snippet Score.initClass
Score.initClass(${1:})
endsnippet

snippet Score.new
Score.new(${1:list: nil})
endsnippet

snippet Score.newFromFile
Score.newFromFile(${1:path: nil})
endsnippet

snippet Score.playFromFile
Score.playFromFile(${1:path: nil}, ${2: server: nil})
endsnippet

snippet Score.play
Score.play(${1:list: nil}, ${2: server: nil})
endsnippet

snippet Score.recordNRT
Score.recordNRT(${1:list: nil}, ${2: oscFilePath: nil}, ${3: outputFilePath: nil}, ${4: inputFilePath: nil}, ${5: sampleRate: 44100}, ${6: headerFormat: AIFF}, ${7: sampleFormat: int16}, ${8: options: nil}, ${9: completionString: }, ${10: duration: nil}, ${11: action: nil})
endsnippet

snippet Score.writeFromFile
Score.writeFromFile(${1:path: nil}, ${2: oscFilePath: nil}, ${3: clock: nil})
endsnippet

snippet Score.write
Score.write(${1:list: nil}, ${2: oscFilePath: nil}, ${3: clock: nil})
endsnippet

snippet ScoreStreamPlayer.new
ScoreStreamPlayer.new(${1:})
endsnippet

snippet Scramble.ar
Scramble.ar(${1:array: nil}, ${2: trig: 1})
endsnippet

snippet Scramble.kr
Scramble.kr(${1:array: nil}, ${2: trig: 1})
endsnippet

snippet Scramble.indices
Scramble.indices(${1:size: 10}, ${2: trig: 1})
endsnippet

snippet ScrollCanvas.qtClass
ScrollCanvas.qtClass(${1:})
endsnippet

snippet ScrollTopView.qtClass
ScrollTopView.qtClass(${1:})
endsnippet

snippet ScrollTopView.new
ScrollTopView.new(${1:win: nil}, ${2: name: nil}, ${3: bounds: nil}, ${4: resizable: nil}, ${5: border: nil})
endsnippet

snippet ScrollView.new
ScrollView.new(${1:parent: nil}, ${2: bounds: nil})
endsnippet

snippet ScrollView.qtClass
ScrollView.qtClass(${1:})
endsnippet

snippet SegWarp.initClass
SegWarp.initClass(${1:})
endsnippet

snippet SegWarp.new
SegWarp.new(${1:array: nil})
endsnippet

snippet SegWarp.cleanArray
SegWarp.cleanArray(${1:inArray: nil})
endsnippet

snippet SegWarp.simplifyArray
SegWarp.simplifyArray(${1:inArray: nil})
endsnippet

snippet SegWarp.arrayFromEnv
SegWarp.arrayFromEnv(${1:env: nil})
endsnippet

snippet Select.ar
Select.ar(${1:which: nil}, ${2: array: nil})
endsnippet

snippet Select.kr
Select.kr(${1:which: nil}, ${2: array: nil})
endsnippet

snippet SelectCF.new
SelectCF.new(${1:which: nil}, ${2: array: nil}, ${3: lag: 0.1}, ${4: equalPower: 1})
endsnippet

snippet SelectCF.ar
SelectCF.ar(${1:which: nil}, ${2: array: nil}, ${3: lag: 0.1}, ${4: equalPower: 1})
endsnippet

snippet SelectCF.kr
SelectCF.kr(${1:which: nil}, ${2: array: nil}, ${3: lag: 0.1}, ${4: equalPower: 1})
endsnippet

snippet SelectCF.getLevels
SelectCF.getLevels(${1:which: nil}, ${2: n: 10}, ${3: lag: 0.1}, ${4: equalPower: 1})
endsnippet

snippet SelectL.ar
SelectL.ar(${1:which: nil}, ${2: array: nil})
endsnippet

snippet SelectL.arSwitch
SelectL.arSwitch(${1:which: nil}, ${2: array: nil})
endsnippet

snippet SelectL.kr
SelectL.kr(${1:which: nil}, ${2: array: nil})
endsnippet

snippet SelectX.new1
SelectX.new1(${1:rate: nil}, ${2: which: nil}, ${3: array: nil})
endsnippet

snippet SelectX.ar
SelectX.ar(${1:which: nil}, ${2: array: nil}, ${3: wrap: 1})
endsnippet

snippet SelectX.kr
SelectX.kr(${1:which: nil}, ${2: array: nil}, ${3: wrap: 1})
endsnippet

snippet SelectX.crossfadeClass
SelectX.crossfadeClass(${1:})
endsnippet

snippet SelectXFocus.new
SelectXFocus.new(${1:which: nil}, ${2: array: nil}, ${3: focus: 1}, ${4: wrap: false})
endsnippet

snippet SelectXFocus.ar
SelectXFocus.ar(${1:which: nil}, ${2: array: nil}, ${3: focus: 1}, ${4: wrap: false})
endsnippet

snippet SelectXFocus.kr
SelectXFocus.kr(${1:which: nil}, ${2: array: nil}, ${3: focus: 1}, ${4: wrap: false})
endsnippet

snippet Semaphore.new
Semaphore.new(${1:count: 1})
endsnippet

snippet SendPeakRMS.kr
SendPeakRMS.kr(${1:sig: nil}, ${2: replyRate: 20.0}, ${3: peakLag: 3}, ${4: cmdName: /reply}, ${5: replyID: -1})
endsnippet

snippet SendPeakRMS.ar
SendPeakRMS.ar(${1:sig: nil}, ${2: replyRate: 20.0}, ${3: peakLag: 3}, ${4: cmdName: /reply}, ${5: replyID: -1})
endsnippet

snippet SendPeakRMS.new1
SendPeakRMS.new1(${1:rate: nil}, ${2: sig: nil}, ${3: replyRate: nil}, ${4: peakLag: nil}, ${5: cmdName: nil}, ${6: replyID: nil})
endsnippet

snippet SendReply.kr
SendReply.kr(${1:trig: 0.0}, ${2: cmdName: /reply}, ${3: values: nil}, ${4: replyID: -1})
endsnippet

snippet SendReply.ar
SendReply.ar(${1:trig: 0.0}, ${2: cmdName: /reply}, ${3: values: nil}, ${4: replyID: -1})
endsnippet

snippet SendReply.new1
SendReply.new1(${1:rate: nil}, ${2: trig: 0.0}, ${3: cmdName: /reply}, ${4: values: nil}, ${5: replyID: -1})
endsnippet

snippet SendTrig.ar
SendTrig.ar(${1:in: 0.0}, ${2: id: 0}, ${3: value: 0.0})
endsnippet

snippet SendTrig.kr
SendTrig.kr(${1:in: 0.0}, ${2: id: 0}, ${3: value: 0.0})
endsnippet

snippet SensoryDissonance.kr
SensoryDissonance.kr(${1:fft: nil}, ${2: maxpeaks: 100}, ${3: peakthreshold: 0.1}, ${4: norm: nil}, ${5: clamp: 1.0})
endsnippet

snippet SequenceableCollection.series
SequenceableCollection.series(${1:size: nil}, ${2: start: 0}, ${3: step: 1})
endsnippet

snippet SequenceableCollection.geom
SequenceableCollection.geom(${1:size: nil}, ${2: start: nil}, ${3: grow: nil})
endsnippet

snippet SequenceableCollection.fib
SequenceableCollection.fib(${1:size: nil}, ${2: a: 0.0}, ${3: b: 1.0})
endsnippet

snippet SequenceableCollection.rand
SequenceableCollection.rand(${1:size: nil}, ${2: minVal: nil}, ${3: maxVal: nil})
endsnippet

snippet SequenceableCollection.exprand
SequenceableCollection.exprand(${1:size: nil}, ${2: minVal: nil}, ${3: maxVal: nil})
endsnippet

snippet SequenceableCollection.rand2
SequenceableCollection.rand2(${1:size: nil}, ${2: val: nil})
endsnippet

snippet SequenceableCollection.linrand
SequenceableCollection.linrand(${1:size: nil}, ${2: minVal: nil}, ${3: maxVal: nil})
endsnippet

snippet SequenceableCollection.interpolation
SequenceableCollection.interpolation(${1:size: nil}, ${2: start: 0.0}, ${3: end: 1.0})
endsnippet

snippet SequenceableCollection.streamContents
SequenceableCollection.streamContents(${1:function: nil})
endsnippet

snippet SequenceableCollection.streamContentsLimit
SequenceableCollection.streamContentsLimit(${1:function: nil}, ${2: limit: 2000})
endsnippet

snippet SequenceableCollection.newFromFile
SequenceableCollection.newFromFile(${1:path: nil}, ${2: columnSeparator:  }, ${3: rowSeparator: 
})
endsnippet

snippet SequenceableCollection.tuningScale
SequenceableCollection.tuningScale(${1:rootFreq: 440}, ${2: stepRatios: [ 1.5}, ${3: 2 ]}, ${4: loFreqBound: 20}, ${5: hiFreqBound: 20000})
endsnippet

snippet SerialPort.initClass
SerialPort.initClass(${1:})
endsnippet

snippet SerialPort.devices
SerialPort.devices(${1:})
endsnippet

snippet SerialPort.listDevices
SerialPort.listDevices(${1:})
endsnippet

snippet SerialPort.new
SerialPort.new(${1:port: nil}, ${2: baudrate: 9600}, ${3: databits: 8}, ${4: stopbit: true}, ${5: parity: nil}, ${6: crtscts: false}, ${7: xonxoff: false}, ${8: exclusive: false})
endsnippet

snippet SerialPort.closeAll
SerialPort.closeAll(${1:})
endsnippet

snippet SerialPort.cleanupAll
SerialPort.cleanupAll(${1:})
endsnippet

snippet Server.initClass
Server.initClass(${1:})
endsnippet

snippet Server.fromName
Server.fromName(${1:name: nil})
endsnippet

snippet Server.default_
Server.default_(${1:server: nil})
endsnippet

snippet Server.new
Server.new(${1:name: nil}, ${2: addr: nil}, ${3: options: nil}, ${4: clientID: nil})
endsnippet

snippet Server.remote
Server.remote(${1:name: nil}, ${2: addr: nil}, ${3: options: nil}, ${4: clientID: nil})
endsnippet

snippet Server.resumeThreads
Server.resumeThreads(${1:})
endsnippet

snippet Server.quitAll
Server.quitAll(${1:watchShutDown: true})
endsnippet

snippet Server.killAll
Server.killAll(${1:})
endsnippet

snippet Server.freeAll
Server.freeAll(${1:evenRemote: false})
endsnippet

snippet Server.hardFreeAll
Server.hardFreeAll(${1:evenRemote: false})
endsnippet

snippet Server.allBootedServers
Server.allBootedServers(${1:})
endsnippet

snippet Server.allRunningServers
Server.allRunningServers(${1:})
endsnippet

snippet Server.scsynth
Server.scsynth(${1:})
endsnippet

snippet Server.supernova
Server.supernova(${1:})
endsnippet

snippet Server.set
Server.set(${1:})
endsnippet

snippet Server.set_
Server.set_(${1:item: nil})
endsnippet

snippet Server.freeAllRemote
Server.freeAllRemote(${1:includeLocal: true})
endsnippet

snippet ServerBoot.functionSelector
ServerBoot.functionSelector(${1:})
endsnippet

snippet ServerMeter.new
ServerMeter.new(${1:server: nil}, ${2: numIns: nil}, ${3: numOuts: nil})
endsnippet

snippet ServerMeterView.new
ServerMeterView.new(${1:aserver: nil}, ${2: parent: nil}, ${3: leftUp: nil}, ${4: numIns: nil}, ${5: numOuts: nil})
endsnippet

snippet ServerMeterView.getWidth
ServerMeterView.getWidth(${1:numIns: nil}, ${2: numOuts: nil}, ${3: server: nil})
endsnippet

snippet ServerOptions.initClass
ServerOptions.initClass(${1:})
endsnippet

snippet ServerOptions.new
ServerOptions.new(${1:})
endsnippet

snippet ServerOptions.prListDevices
ServerOptions.prListDevices(${1:in: nil}, ${2: out: nil})
endsnippet

snippet ServerOptions.devices
ServerOptions.devices(${1:})
endsnippet

snippet ServerOptions.inDevices
ServerOptions.inDevices(${1:})
endsnippet

snippet ServerOptions.outDevices
ServerOptions.outDevices(${1:})
endsnippet

snippet ServerQuit.functionSelector
ServerQuit.functionSelector(${1:})
endsnippet

snippet ServerRecordWindow.new
ServerRecordWindow.new(${1:server: nil}, ${2: nodeID: nil})
endsnippet

snippet ServerShmInterface.new
ServerShmInterface.new(${1:port: nil})
endsnippet

snippet ServerStatusWatcher.new
ServerStatusWatcher.new(${1:server: nil})
endsnippet

snippet ServerTree.functionSelector
ServerTree.functionSelector(${1:})
endsnippet

snippet Set.new
Set.new(${1:n: 2})
endsnippet

snippet SetBuf.new
SetBuf.new(${1:buf: nil}, ${2: values: nil}, ${3: offset: 0})
endsnippet

snippet SharedIn.kr
SharedIn.kr(${1:bus: 0}, ${2: numChannels: 1})
endsnippet

snippet SharedOut.kr
SharedOut.kr(${1:bus: nil}, ${2: channelsArray: nil})
endsnippet

snippet SharedOut.numFixedArgs
SharedOut.numFixedArgs(${1:})
endsnippet

snippet Shift90.filt
Shift90.filt(${1:in: nil})
endsnippet

snippet Shift90.fft
Shift90.fft(${1:src: nil}, ${2: fftsize: nil}, ${3: numffts: nil})
endsnippet

snippet ShouldNotImplementError.new
ShouldNotImplementError.new(${1:receiver: nil}, ${2: method: nil}, ${3: class: nil})
endsnippet

snippet ShutDown.run
ShutDown.run(${1:})
endsnippet

snippet Sieve1.ar
Sieve1.ar(${1:bufnum: nil}, ${2: gap: 2}, ${3: alternate: 1}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet Sieve1.kr
Sieve1.kr(${1:bufnum: nil}, ${2: gap: 2}, ${3: alternate: 1}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet Signal.sineFill
Signal.sineFill(${1:size: nil}, ${2: amplitudes: nil}, ${3: phases: nil})
endsnippet

snippet Signal.chebyFill
Signal.chebyFill(${1:size: nil}, ${2: amplitudes: nil}, ${3: normalize: true}, ${4: zeroOffset: false})
endsnippet

snippet Signal.hammingWindow_old
Signal.hammingWindow_old(${1:size: nil}, ${2: pad: 0})
endsnippet

snippet Signal.hammingWindow
Signal.hammingWindow(${1:size: nil}, ${2: pad: 0})
endsnippet

snippet Signal.hanningWindow
Signal.hanningWindow(${1:size: nil}, ${2: pad: 0})
endsnippet

snippet Signal.welchWindow
Signal.welchWindow(${1:size: nil}, ${2: pad: 0})
endsnippet

snippet Signal.rectWindow
Signal.rectWindow(${1:size: nil}, ${2: pad: 0})
endsnippet

snippet Signal.readNew
Signal.readNew(${1:file: nil})
endsnippet

snippet Signal.fftCosTable
Signal.fftCosTable(${1:fftsize: nil})
endsnippet

snippet Silent.ar
Silent.ar(${1:numChannels: 1})
endsnippet

snippet SimpleController.new
SimpleController.new(${1:model: nil})
endsnippet

snippet SimpleMIDIFile.new
SimpleMIDIFile.new(${1:pathName: nil})
endsnippet

snippet SimpleMIDIFile.read
SimpleMIDIFile.read(${1:pathName: nil})
endsnippet

snippet SimpleMIDIFile.fromPattern
SimpleMIDIFile.fromPattern(${1:pattern: nil}, ${2: maxEvents: 1000}, ${3: maxAmp: 0.2}, ${4: startTime: 0}, ${5: inTracks: 2}, ${6: inTempo: 120}, ${7: timeSignature: nil})
endsnippet

snippet SimpleNumber.new
SimpleNumber.new(${1:})
endsnippet

snippet SinGrain.ar
SinGrain.ar(${1:trigger: 0}, ${2: dur: 1}, ${3: freq: 440}, ${4: mul: 1}, ${5: add: 0})
endsnippet

snippet SinGrainB.ar
SinGrainB.ar(${1:trigger: 0}, ${2: dur: 1}, ${3: freq: 440}, ${4: envbuf: nil}, ${5: mul: 1}, ${6: add: 0})
endsnippet

snippet SinGrainBBF.ar
SinGrainBBF.ar(${1:trigger: 0}, ${2: dur: 1}, ${3: freq: 440}, ${4: envbuf: nil}, ${5: azimuth: 0}, ${6: elevation: 0}, ${7: rho: 1}, ${8: wComp: 0}, ${9: mul: 1}, ${10: add: 0})
endsnippet

snippet SinGrainBF.ar
SinGrainBF.ar(${1:trigger: 0}, ${2: dur: 1}, ${3: freq: 440}, ${4: azimuth: 0}, ${5: elevation: 0}, ${6: rho: 1}, ${7: wComp: 0}, ${8: mul: 1}, ${9: add: 0})
endsnippet

snippet SinGrainI.ar
SinGrainI.ar(${1:trigger: 0}, ${2: dur: 1}, ${3: freq: 440}, ${4: envbuf1: nil}, ${5: envbuf2: nil}, ${6: ifac: 0.5}, ${7: mul: 1}, ${8: add: 0})
endsnippet

snippet SinGrainIBF.ar
SinGrainIBF.ar(${1:trigger: 0}, ${2: dur: 1}, ${3: freq: 440}, ${4: envbuf1: nil}, ${5: envbuf2: nil}, ${6: ifac: 0.5}, ${7: azimuth: 0}, ${8: elevation: 0}, ${9: rho: 1}, ${10: wComp: 0}, ${11: mul: 1}, ${12: add: 0})
endsnippet

snippet SinOsc.ar
SinOsc.ar(${1:freq: 440.0}, ${2: phase: 0.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet SinOsc.kr
SinOsc.kr(${1:freq: 440.0}, ${2: phase: 0.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet SinOscFB.ar
SinOscFB.ar(${1:freq: 440.0}, ${2: feedback: 0.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet SinOscFB.kr
SinOscFB.kr(${1:freq: 440.0}, ${2: feedback: 0.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet SinTone.ar
SinTone.ar(${1:freq: 440}, ${2: phase: 0}, ${3: mul: 1}, ${4: add: 0})
endsnippet

snippet SineShaper.ar
SineShaper.ar(${1:in: nil}, ${2: limit: 1.0}, ${3: mul: 1.0}, ${4: add: 0})
endsnippet

snippet Siren.ar
Siren.ar(${1:freq: nil}, ${2: sharpness: 2}, ${3: iphase: 0}, ${4: modPhase: 0}, ${5: noiseLevel: 0}, ${6: mul: 1}, ${7: add: 0})
endsnippet

snippet Siren.kr
Siren.kr(${1:freq: nil}, ${2: sharpness: 2}, ${3: iphase: 0}, ${4: modPhase: 0}, ${5: mul: 1}, ${6: add: 0})
endsnippet

snippet Size.new
Size.new(${1:width: 0}, ${2: height: 0})
endsnippet

snippet SkipJack.new
SkipJack.new(${1:updateFunc: nil}, ${2: dt: 0.2}, ${3: stopTest: false}, ${4: name: anon}, ${5: clock: nil}, ${6: autostart: true})
endsnippet

snippet SkipJack.initClass
SkipJack.initClass(${1:})
endsnippet

snippet SkipJack.stop
SkipJack.stop(${1:name: nil})
endsnippet

snippet SkipJack.stopAll
SkipJack.stopAll(${1:})
endsnippet

snippet SkipNeedle.ar
SkipNeedle.ar(${1:range: 44100}, ${2: rate: 10}, ${3: offset: 0})
endsnippet

snippet Slew.ar
Slew.ar(${1:in: 0.0}, ${2: up: 1.0}, ${3: dn: 1.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet Slew.kr
Slew.kr(${1:in: 0.0}, ${2: up: 1.0}, ${3: dn: 1.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet Slider.qtClass
Slider.qtClass(${1:})
endsnippet

snippet Slider.new
Slider.new(${1:parent: nil}, ${2: bounds: nil})
endsnippet

snippet Slider2D.qtClass
Slider2D.qtClass(${1:})
endsnippet

snippet Slider2D.new
Slider2D.new(${1:parent: nil}, ${2: bounds: nil})
endsnippet

snippet Slope.ar
Slope.ar(${1:in: 0.0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet Slope.kr
Slope.kr(${1:in: 0.0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet SlotInspector.new
SlotInspector.new(${1:inspector: nil}, ${2: index: nil}, ${3: vpos: nil})
endsnippet

snippet SmoothDecimator.ar
SmoothDecimator.ar(${1:in: nil}, ${2: rate: 44100.0}, ${3: smoothing: 0.5}, ${4: mul: 1.0}, ${5: add: 0})
endsnippet

snippet SmoothScrollView.new
SmoothScrollView.new(${1:parent: nil}, ${2: bounds: nil})
endsnippet

snippet SmoothSlider.viewClass
SmoothSlider.viewClass(${1:})
endsnippet

snippet SoftClipAmp.ar
SoftClipAmp.ar(${1:in: nil}, ${2: pregain: 1}, ${3: mul: 1}, ${4: add: 0})
endsnippet

snippet SoftClipAmp4.ar
SoftClipAmp4.ar(${1:in: nil}, ${2: pregain: 1}, ${3: mul: 1}, ${4: add: 0})
endsnippet

snippet SoftClipAmp8.ar
SoftClipAmp8.ar(${1:in: nil}, ${2: pregain: 1}, ${3: mul: 1}, ${4: add: 0})
endsnippet

snippet SoftClipper4.ar
SoftClipper4.ar(${1:in: nil})
endsnippet

snippet SoftClipper8.ar
SoftClipper8.ar(${1:in: nil})
endsnippet

snippet SoftKneeCompressor.ar
SoftKneeCompressor.ar(${1:in: nil}, ${2: control: nil}, ${3: thresh: -10}, ${4: ratio: 1}, ${5: knee: 6}, ${6: attack: 0}, ${7: release: 0.05}, ${8: makeUp: 0}, ${9: rms: 0})
endsnippet

snippet SoftKneeCompressor.kr
SoftKneeCompressor.kr(${1:in: nil}, ${2: control: nil}, ${3: thresh: -10}, ${4: ratio: 1}, ${5: knee: 6}, ${6: attack: 0}, ${7: release: 0.05}, ${8: makeUp: 0}, ${9: rms: 0})
endsnippet

snippet SoftKneeCompressor.peak
SoftKneeCompressor.peak(${1:in: nil}, ${2: control: nil}, ${3: thresh: -10}, ${4: ratio: 1}, ${5: knee: 6}, ${6: attack: 0}, ${7: release: 0.05}, ${8: makeUp: 0})
endsnippet

snippet SoftKneeCompressor.rms
SoftKneeCompressor.rms(${1:in: nil}, ${2: control: nil}, ${3: thresh: -10}, ${4: ratio: 1}, ${5: knee: 6}, ${6: attack: 0}, ${7: release: 0.05}, ${8: makeUp: 0}, ${9: rms: 40})
endsnippet

snippet SoftKneeCompressor.d
SoftKneeCompressor.d(${1:in: nil}, ${2: control: nil}, ${3: thresh: -10}, ${4: ratio: 1}, ${5: knee: 6}, ${6: attack: 0.05}, ${7: release: 0.1}, ${8: makeUp: 0}, ${9: rms: 0})
endsnippet

snippet SoftSwitchIn.ar
SoftSwitchIn.ar(${1:bus: 0}, ${2: numChannels: 1}, ${3: fadeTime: 0.1}, ${4: trigger: nil})
endsnippet

snippet SortBuf.ar
SortBuf.ar(${1:bufnum: 0}, ${2: sortrate: 10}, ${3: reset: 0})
endsnippet

snippet SortedList.new
SortedList.new(${1:size: 8}, ${2: function: nil})
endsnippet

snippet SortedRand.new
SortedRand.new(${1:n: 10}, ${2: minVal: 0}, ${3: maxVal: 1}, ${4: warp: lin}, ${5: spread: 1})
endsnippet

snippet SortedRand.ir
SortedRand.ir(${1:n: 10}, ${2: minVal: 0}, ${3: maxVal: 1}, ${4: warp: lin}, ${5: spread: 1})
endsnippet

snippet SortedRand.kr
SortedRand.kr(${1:trig: 0}, ${2: n: 10}, ${3: minVal: 0}, ${4: maxVal: 1}, ${5: warp: lin}, ${6: spread: 1})
endsnippet

snippet SortedRand.ar
SortedRand.ar(${1:trig: 0}, ${2: n: 10}, ${3: minVal: 0}, ${4: maxVal: 1}, ${5: warp: lin}, ${6: spread: 1})
endsnippet

snippet SortedRand.prMapValues
SortedRand.prMapValues(${1:values: nil}, ${2: minVal: 0}, ${3: maxVal: 1}, ${4: warp: lin}, ${5: spread: 1})
endsnippet

snippet SoundFile.closeAll
SoundFile.closeAll(${1:})
endsnippet

snippet SoundFile.new
SoundFile.new(${1:pathName: nil})
endsnippet

snippet SoundFile.openRead
SoundFile.openRead(${1:pathName: nil})
endsnippet

snippet SoundFile.openWrite
SoundFile.openWrite(${1:pathName: nil}, ${2: headerFormat: nil}, ${3: sampleFormat: nil}, ${4: numChannels: nil}, ${5: sampleRate: nil})
endsnippet

snippet SoundFile.use
SoundFile.use(${1:path: nil}, ${2: function: nil})
endsnippet

snippet SoundFile.normalize
SoundFile.normalize(${1:path: nil}, ${2: outPath: nil}, ${3: newHeaderFormat: nil}, ${4: newSampleFormat: nil}, ${5: startFrame: 0}, ${6: numFrames: nil}, ${7: maxAmp: 1.0}, ${8: linkChannels: true}, ${9: chunkSize: 4194304}, ${10: threaded: false})
endsnippet

snippet SoundFile.groupNormalize
SoundFile.groupNormalize(${1:paths: nil}, ${2: outDir: nil}, ${3: newHeaderFormat: nil}, ${4: newSampleFormat: nil}, ${5: maxAmp: 1.0}, ${6: chunkSize: 4194304}, ${7: threaded: true})
endsnippet

snippet SoundFile.collect
SoundFile.collect(${1:path: sounds/*})
endsnippet

snippet SoundFile.collectIntoBuffers
SoundFile.collectIntoBuffers(${1:path: sounds/*}, ${2: server: nil})
endsnippet

snippet SoundFileView.qtClass
SoundFileView.qtClass(${1:})
endsnippet

snippet SoundIn.ar
SoundIn.ar(${1:bus: 0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet SoundIn.channelOffset
SoundIn.channelOffset(${1:})
endsnippet

snippet SparseArray.newClear
SparseArray.newClear(${1:size: nil}, ${2: default: nil})
endsnippet

snippet SparseArray.reduceArray
SparseArray.reduceArray(${1:array: nil}, ${2: default: nil})
endsnippet

snippet Spawner.new
Spawner.new(${1:func: nil}, ${2: stackSize: 64})
endsnippet

snippet Speakers.quad
Speakers.quad(${1:distance: 1}, ${2: clockwise: true})
endsnippet

snippet Speakers.eight
Speakers.eight(${1:distance: 1}, ${2: clockwise: true})
endsnippet

snippet Speakers.n
Speakers.n(${1:n: nil}, ${2: distance: 1}, ${3: clockwise: true})
endsnippet

snippet Spec.initClass
Spec.initClass(${1:})
endsnippet

snippet Spec.add
Spec.add(${1:name: nil}, ${2: args: nil})
endsnippet

snippet Spec.guess
Spec.guess(${1:key: nil}, ${2: value: nil})
endsnippet

snippet Spec.suggestString
Spec.suggestString(${1:key: nil}, ${2: value: nil})
endsnippet

snippet SpecCentroid.kr
SpecCentroid.kr(${1:buffer: nil})
endsnippet

snippet SpecFlatness.kr
SpecFlatness.kr(${1:buffer: nil})
endsnippet

snippet SpecPcile.kr
SpecPcile.kr(${1:buffer: nil}, ${2: fraction: 0.5}, ${3: interpolate: 0})
endsnippet

snippet SpectralEntropy.kr
SpectralEntropy.kr(${1:fft: nil}, ${2: fftsize: 2048}, ${3: numbands: 1})
endsnippet

snippet Spkr.newt
Spkr.newt(${1:argpoint: nil}, ${2: argamp: 1.0})
endsnippet

snippet Spkr.new
Spkr.new(${1:x: nil}, ${2: y: nil}, ${3: argamp: 1.0})
endsnippet

snippet Splay.new1
Splay.new1(${1:rate: nil}, ${2: spread: 1}, ${3: level: 1}, ${4: center: 0.0}, ${5: levelComp: true}, ${6: inArray: [  ]})
endsnippet

snippet Splay.kr
Splay.kr(${1:inArray: nil}, ${2: spread: 1}, ${3: level: 1}, ${4: center: 0.0}, ${5: levelComp: true})
endsnippet

snippet Splay.ar
Splay.ar(${1:inArray: nil}, ${2: spread: 1}, ${3: level: 1}, ${4: center: 0.0}, ${5: levelComp: true})
endsnippet

snippet Splay.arFill
Splay.arFill(${1:n: nil}, ${2: function: nil}, ${3: spread: 1}, ${4: level: 1}, ${5: center: 0.0}, ${6: levelComp: true})
endsnippet

snippet SplayAz.kr
SplayAz.kr(${1:numChans: 4}, ${2: inArray: nil}, ${3: spread: 1}, ${4: level: 1}, ${5: width: 2}, ${6: center: 0.0}, ${7: orientation: 0.5}, ${8: levelComp: true})
endsnippet

snippet SplayAz.ar
SplayAz.ar(${1:numChans: 4}, ${2: inArray: nil}, ${3: spread: 1}, ${4: level: 1}, ${5: width: 2}, ${6: center: 0.0}, ${7: orientation: 0.5}, ${8: levelComp: true})
endsnippet

snippet SplayAz.arFill
SplayAz.arFill(${1:numChans: 4}, ${2: n: nil}, ${3: function: nil}, ${4: spread: 1}, ${5: level: 1}, ${6: width: 2}, ${7: center: 0.0}, ${8: orientation: 0.5}, ${9: levelComp: true})
endsnippet

snippet SplayZ.ar
SplayZ.ar(${1:numChans: 4}, ${2: inArray: nil}, ${3: spread: 1}, ${4: level: 1}, ${5: width: 2}, ${6: center: 0.0}, ${7: orientation: 0.5}, ${8: levelComp: true})
endsnippet

snippet SplayZ.arFill
SplayZ.arFill(${1:numChans: 4}, ${2: n: nil}, ${3: function: nil}, ${4: spread: 1}, ${5: level: 1}, ${6: width: 2}, ${7: center: 0.0}, ${8: orientation: 0.5}, ${9: levelComp: true})
endsnippet

snippet Spreader.ar
Spreader.ar(${1:in: nil}, ${2: theta: 1.5707963267949}, ${3: filtsPerOctave: 8}, ${4: mul: 1}, ${5: add: 0})
endsnippet

snippet Spring.ar
Spring.ar(${1:in: 0.0}, ${2: spring: 1}, ${3: damp: 0})
endsnippet

snippet Spring.kr
Spring.kr(${1:in: 0.0}, ${2: spring: 1}, ${3: damp: 0})
endsnippet

snippet SpruceBudworm.ar
SpruceBudworm.ar(${1:reset: 0}, ${2: rate: 0.1}, ${3: k1: 27.9}, ${4: k2: 1.5}, ${5: alpha: 0.1}, ${6: beta: 10.1}, ${7: mu: 0.3}, ${8: rho: 10.1}, ${9: initx: 0.9}, ${10: inity: 0.1}, ${11: mul: 1.0}, ${12: add: 0.0})
endsnippet

snippet Squiz.ar
Squiz.ar(${1:in: nil}, ${2: pitchratio: 2}, ${3: zcperchunk: 1}, ${4: memlen: 0.1}, ${5: mul: 1}, ${6: add: 0})
endsnippet

snippet Squiz.kr
Squiz.kr(${1:in: nil}, ${2: pitchratio: 2}, ${3: zcperchunk: 1}, ${4: memlen: 0.1}, ${5: mul: 1}, ${6: add: 0})
endsnippet

snippet Squiz.categories
Squiz.categories(${1:})
endsnippet

snippet StackLayout.qtClass
StackLayout.qtClass(${1:})
endsnippet

snippet StackLayout.new
StackLayout.new(${1:views: [  ]})
endsnippet

snippet StackNumberAllocator.new
StackNumberAllocator.new(${1:lo: nil}, ${2: hi: nil})
endsnippet

snippet StageLimiter.activate
StageLimiter.activate(${1:numChannels: 2})
endsnippet

snippet StageLimiter.deactivate
StageLimiter.deactivate(${1:})
endsnippet

snippet Standard2DN.ar
Standard2DN.ar(${1:minfreq: 11025}, ${2: maxfreq: 22050}, ${3: k: 1.4}, ${4: x0: 4.9789799812499}, ${5: y0: 5.7473416156381}, ${6: mul: 1}, ${7: add: 0.0})
endsnippet

snippet Standard2DN.kr
Standard2DN.kr(${1:minfreq: 40}, ${2: maxfreq: 100}, ${3: k: 1.4}, ${4: x0: 4.9789799812499}, ${5: y0: 5.7473416156381}, ${6: mul: 1}, ${7: add: 0.0})
endsnippet

snippet StandardN.ar
StandardN.ar(${1:freq: 22050}, ${2: k: 1.0}, ${3: xi: 0.5}, ${4: yi: 0}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet StandardTrig.ar
StandardTrig.ar(${1:minfreq: 5}, ${2: maxfreq: 10}, ${3: k: 1.4}, ${4: x0: 4.9789799812499}, ${5: y0: 5.7473416156381}, ${6: mul: 1}, ${7: add: 0.0})
endsnippet

snippet StandardTrig.kr
StandardTrig.kr(${1:minfreq: 5}, ${2: maxfreq: 10}, ${3: k: 1.4}, ${4: x0: 4.9789799812499}, ${5: y0: 5.7473416156381}, ${6: mul: 1}, ${7: add: 0.0})
endsnippet

snippet StartUp.run
StartUp.run(${1:})
endsnippet

snippet StartUp.defer
StartUp.defer(${1:object: nil})
endsnippet

snippet StaticText.qtClass
StaticText.qtClass(${1:})
endsnippet

snippet StaticText.new
StaticText.new(${1:parent: nil}, ${2: bounds: nil})
endsnippet

snippet Stepper.ar
Stepper.ar(${1:trig: 0}, ${2: reset: 0}, ${3: min: 0}, ${4: max: 7}, ${5: step: 1}, ${6: resetval: nil})
endsnippet

snippet Stepper.kr
Stepper.kr(${1:trig: 0}, ${2: reset: 0}, ${3: min: 0}, ${4: max: 7}, ${5: step: 1}, ${6: resetval: nil})
endsnippet

snippet StereoConvolution2L.ar
StereoConvolution2L.ar(${1:in: nil}, ${2: kernelL: nil}, ${3: kernelR: nil}, ${4: trigger: 0}, ${5: framesize: 2048}, ${6: crossfade: 1}, ${7: mul: 1.0}, ${8: add: 0.0})
endsnippet

snippet Stethoscope.isValidServer
Stethoscope.isValidServer(${1:aServer: nil})
endsnippet

snippet Stethoscope.ugenScopes
Stethoscope.ugenScopes(${1:})
endsnippet

snippet Stethoscope.tileBounds
Stethoscope.tileBounds(${1:})
endsnippet

snippet Stethoscope.new
Stethoscope.new(${1:server: nil}, ${2: numChannels: 2}, ${3: index: 0}, ${4: bufsize: 4096}, ${5: zoom: 1.0}, ${6: rate: audio}, ${7: view: nil}, ${8: bufnum: nil})
endsnippet

snippet Stk.initClass
Stk.initClass(${1:})
endsnippet

snippet Stk.at
Stk.at(${1:name: nil})
endsnippet

snippet StkBandedWG.ar
StkBandedWG.ar(${1:freq: 440}, ${2: instr: 0}, ${3: bowpressure: 0}, ${4: bowmotion: 0}, ${5: integration: 0}, ${6: modalresonance: 64}, ${7: bowvelocity: 0}, ${8: setstriking: 0}, ${9: trig: 1}, ${10: mul: 1.0}, ${11: add: 0.0})
endsnippet

snippet StkBandedWG.kr
StkBandedWG.kr(${1:freq: 440}, ${2: instr: 0}, ${3: bowpressure: 0}, ${4: bowmotion: 0}, ${5: integration: 0}, ${6: modalresonance: 64}, ${7: bowvelocity: 0}, ${8: setstriking: 0}, ${9: trig: 1}, ${10: mul: 1.0}, ${11: add: 0.0})
endsnippet

snippet StkBeeThree.ar
StkBeeThree.ar(${1:freq: 440}, ${2: op4gain: 10}, ${3: op3gain: 20}, ${4: lfospeed: 64}, ${5: lfodepth: 0}, ${6: adsrtarget: 64}, ${7: trig: 1}, ${8: mul: 1.0}, ${9: add: 0.0})
endsnippet

snippet StkBeeThree.kr
StkBeeThree.kr(${1:freq: 440}, ${2: op4gain: 10}, ${3: op3gain: 20}, ${4: lfospeed: 64}, ${5: lfodepth: 0}, ${6: adsrtarget: 64}, ${7: trig: 1}, ${8: mul: 1.0}, ${9: add: 0.0})
endsnippet

snippet StkBlowHole.ar
StkBlowHole.ar(${1:freq: 440}, ${2: reedstiffness: 64}, ${3: noisegain: 20}, ${4: tonehole: 64}, ${5: register: 11}, ${6: breathpressure: 64}, ${7: mul: 1.0}, ${8: add: 0.0})
endsnippet

snippet StkBlowHole.kr
StkBlowHole.kr(${1:freq: 440}, ${2: reedstiffness: 64}, ${3: noisegain: 4}, ${4: tonehole: 64}, ${5: register: 11}, ${6: breathpressure: 64}, ${7: mul: 1.0}, ${8: add: 0.0})
endsnippet

snippet StkBowed.ar
StkBowed.ar(${1:freq: 220}, ${2: bowpressure: 64}, ${3: bowposition: 64}, ${4: vibfreq: 64}, ${5: vibgain: 64}, ${6: loudness: 64}, ${7: gate: 1}, ${8: attackrate: 1}, ${9: decayrate: 1}, ${10: mul: 1.0}, ${11: add: 0.0})
endsnippet

snippet StkBowed.kr
StkBowed.kr(${1:freq: 220}, ${2: bowpressure: 64}, ${3: bowposition: 64}, ${4: vibfreq: 64}, ${5: vibgain: 64}, ${6: loudness: 64}, ${7: trig: 1}, ${8: mul: 1.0}, ${9: add: 0.0})
endsnippet

snippet StkBowedI.ar
StkBowedI.ar(${1:freq: 220}, ${2: gate: 1}, ${3: onamp: 1}, ${4: offamp: 1}, ${5: bowpressure: 64}, ${6: bowposition: 64}, ${7: vibfreq: 64}, ${8: vibgain: 64}, ${9: loudness: 64})
endsnippet

snippet StkClarinet.ar
StkClarinet.ar(${1:freq: 440}, ${2: reedstiffness: 64}, ${3: noisegain: 4}, ${4: vibfreq: 64}, ${5: vibgain: 11}, ${6: breathpressure: 64}, ${7: trig: 1}, ${8: mul: 1.0}, ${9: add: 0.0})
endsnippet

snippet StkClarinet.kr
StkClarinet.kr(${1:freq: 440}, ${2: reedstiffness: 64}, ${3: noisegain: 4}, ${4: vibfreq: 64}, ${5: vibgain: 11}, ${6: breathpressure: 64}, ${7: trig: 1}, ${8: mul: 1.0}, ${9: add: 0.0})
endsnippet

snippet StkFlute.ar
StkFlute.ar(${1:freq: 440}, ${2: jetDelay: 49}, ${3: noisegain: 0.15}, ${4: jetRatio: 0.32}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet StkFlute.kr
StkFlute.kr(${1:freq: 220}, ${2: jetDelay: 49}, ${3: noisegain: 0.15}, ${4: jetRatio: 0.32}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet StkGlobals.ar
StkGlobals.ar(${1:showWarnings: nil}, ${2: printErrors: nil}, ${3: rawfilepath: nil})
endsnippet

snippet StkInst.ar
StkInst.ar(${1:instNumber: 6}, ${2: freq: 220}, ${3: gate: 1}, ${4: onamp: 1}, ${5: offamp: 0.5}, ${6: args: nil})
endsnippet

snippet StkMandolin.ar
StkMandolin.ar(${1:freq: 520}, ${2: bodysize: 64}, ${3: pickposition: 64}, ${4: stringdamping: 69}, ${5: stringdetune: 10}, ${6: aftertouch: 64}, ${7: trig: 1}, ${8: mul: 1.0}, ${9: add: 0.0})
endsnippet

snippet StkMandolin.kr
StkMandolin.kr(${1:freq: 220}, ${2: bodysize: 64}, ${3: pickposition: 64}, ${4: stringdamping: 69}, ${5: stringdetune: 10}, ${6: aftertouch: 64}, ${7: trig: 1}, ${8: mul: 1.0}, ${9: add: 0.0})
endsnippet

snippet StkModalBar.ar
StkModalBar.ar(${1:freq: 440}, ${2: instrument: 0}, ${3: stickhardness: 64}, ${4: stickposition: 64}, ${5: vibratogain: 20}, ${6: vibratofreq: 20}, ${7: directstickmix: 64}, ${8: volume: 64}, ${9: trig: 1}, ${10: mul: 1.0}, ${11: add: 0.0})
endsnippet

snippet StkModalBar.kr
StkModalBar.kr(${1:freq: 440}, ${2: instrument: 0}, ${3: stickhardness: 64}, ${4: stickposition: 64}, ${5: vibratogain: 20}, ${6: vibratofreq: 20}, ${7: directstickmix: 64}, ${8: volume: 64}, ${9: trig: 1}, ${10: mul: 1.0}, ${11: add: 0.0})
endsnippet

snippet StkMoog.ar
StkMoog.ar(${1:freq: 440}, ${2: filterQ: 10}, ${3: sweeprate: 20}, ${4: vibfreq: 64}, ${5: vibgain: 0}, ${6: gain: 64}, ${7: trig: 1}, ${8: mul: 1.0}, ${9: add: 0.0})
endsnippet

snippet StkMoog.kr
StkMoog.kr(${1:freq: 440}, ${2: filterQ: 10}, ${3: sweeprate: 20}, ${4: vibfreq: 64}, ${5: vibgain: 0}, ${6: gain: 64}, ${7: trig: 1}, ${8: mul: 1.0}, ${9: add: 0.0})
endsnippet

snippet StkPluck.ar
StkPluck.ar(${1:freq: 440}, ${2: decay: 0.99}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet StkPluck.kr
StkPluck.kr(${1:freq: 440}, ${2: decay: 0.99}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet StkSaxofony.ar
StkSaxofony.ar(${1:freq: 220}, ${2: reedstiffness: 64}, ${3: reedaperture: 64}, ${4: noisegain: 20}, ${5: blowposition: 26}, ${6: vibratofrequency: 20}, ${7: vibratogain: 20}, ${8: breathpressure: 128}, ${9: trig: 1}, ${10: mul: 1.0}, ${11: add: 0.0})
endsnippet

snippet StkSaxofony.kr
StkSaxofony.kr(${1:freq: 220}, ${2: reedstiffness: 64}, ${3: reedaperture: 64}, ${4: noisegain: 20}, ${5: blowposition: 26}, ${6: vibratofrequency: 20}, ${7: vibratogain: 20}, ${8: breathpressure: 128}, ${9: trig: 1}, ${10: mul: 1.0}, ${11: add: 0.0})
endsnippet

snippet StkShakers.ar
StkShakers.ar(${1:instr: 0}, ${2: energy: 64}, ${3: decay: 64}, ${4: objects: 64}, ${5: resfreq: 64}, ${6: mul: 1.0}, ${7: add: 0.0})
endsnippet

snippet StkShakers.kr
StkShakers.kr(${1:instr: 0}, ${2: energy: 64}, ${3: decay: 64}, ${4: objects: 64}, ${5: resfreq: 64}, ${6: mul: 1.0}, ${7: add: 0.0})
endsnippet

snippet StkVoicForm.ar
StkVoicForm.ar(${1:freq: 440}, ${2: vuvmix: 64}, ${3: vowelphon: 64}, ${4: vibfreq: 64}, ${5: vibgain: 20}, ${6: loudness: 64}, ${7: trig: 1}, ${8: mul: 1.0}, ${9: add: 0.0})
endsnippet

snippet StkVoicForm.kr
StkVoicForm.kr(${1:freq: 440}, ${2: vuvmix: 64}, ${3: vowelphon: 64}, ${4: vibfreq: 64}, ${5: vibgain: 20}, ${6: loudness: 64}, ${7: trig: 1}, ${8: mul: 1.0}, ${9: add: 0.0})
endsnippet

snippet StreamClutch.new
StreamClutch.new(${1:pattern: nil}, ${2: connected: true})
endsnippet

snippet Streson.ar
Streson.ar(${1:input: nil}, ${2: delayTime: 0.003}, ${3: res: 0.9}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet Streson.kr
Streson.kr(${1:input: nil}, ${2: delayTime: 0.003}, ${3: res: 0.9}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet String.initClass
String.initClass(${1:})
endsnippet

snippet String.doUnixCmdAction
String.doUnixCmdAction(${1:res: nil}, ${2: pid: nil})
endsnippet

snippet String.readNew
String.readNew(${1:file: nil})
endsnippet

snippet String.scDir
String.scDir(${1:})
endsnippet

snippet String.fillJoin
String.fillJoin(${1:size: nil}, ${2: function: nil}, ${3: joiner: nil}, ${4: excludeNil: true})
endsnippet

snippet String.notesDict
String.notesDict(${1:})
endsnippet

snippet String.makeNoteName
String.makeNoteName(${1:name: C}, ${2: alt: 0}, ${3: octave: 3}, ${4: cents: 0}, ${5: maxAlt: 3})
endsnippet

snippet String.widthM9
String.widthM9(${1:n: 1})
endsnippet

snippet String.heightM9
String.heightM9(${1:n: 1})
endsnippet

snippet SubclassResponsibilityError.new
SubclassResponsibilityError.new(${1:receiver: nil}, ${2: method: nil}, ${3: class: nil})
endsnippet

snippet Sum3.new
Sum3.new(${1:in0: nil}, ${2: in1: nil}, ${3: in2: nil})
endsnippet

snippet Sum3.new1
Sum3.new1(${1:dummyRate: nil}, ${2: in0: nil}, ${3: in1: nil}, ${4: in2: nil})
endsnippet

snippet Sum4.new
Sum4.new(${1:in0: nil}, ${2: in1: nil}, ${3: in2: nil}, ${4: in3: nil})
endsnippet

snippet Sum4.new1
Sum4.new1(${1:dummyRate: nil}, ${2: in0: nil}, ${3: in1: nil}, ${4: in2: nil}, ${5: in3: nil})
endsnippet

snippet Summer.ar
Summer.ar(${1:trig: 0}, ${2: step: 1}, ${3: reset: 0}, ${4: resetval: 0})
endsnippet

snippet Summer.kr
Summer.kr(${1:trig: 0}, ${2: step: 1}, ${3: reset: 0}, ${4: resetval: 0})
endsnippet

snippet SuperDirt.new
SuperDirt.new(${1:numChannels: 2}, ${2: server: nil})
endsnippet

snippet SuperDirt.resetEverything
SuperDirt.resetEverything(${1:})
endsnippet

snippet SuperDirt.postTidalParameters
SuperDirt.postTidalParameters(${1:synthNames: nil}, ${2: excluding: nil})
endsnippet

snippet SuperDirt.tidalParameterString
SuperDirt.tidalParameterString(${1:keys: nil})
endsnippet

snippet SuperDirt.predefinedSynthParameters
SuperDirt.predefinedSynthParameters(${1:})
endsnippet

snippet SuperDirt.start
SuperDirt.start(${1:numChannels: 2}, ${2: server: nil}, ${3: numOrbits: 12}, ${4: port: 57120}, ${5: senderAddr: nil}, ${6: path: nil})
endsnippet

snippet Sweep.ar
Sweep.ar(${1:trig: 0.0}, ${2: rate: 1.0})
endsnippet

snippet Sweep.kr
Sweep.kr(${1:trig: 0.0}, ${2: rate: 1.0})
endsnippet

snippet SwitchDelay.ar
SwitchDelay.ar(${1:in: nil}, ${2: drylevel: 1.0}, ${3: wetlevel: 1.0}, ${4: delaytime: 1.0}, ${5: delayfactor: 0.7}, ${6: maxdelaytime: 20.0}, ${7: mul: 1.0}, ${8: add: 0.0})
endsnippet

snippet Symbol.new
Symbol.new(${1:})
endsnippet

snippet SyncSaw.ar
SyncSaw.ar(${1:syncFreq: 440.0}, ${2: sawFreq: 440.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet SyncSaw.kr
SyncSaw.kr(${1:syncFreq: 440.0}, ${2: sawFreq: 440.0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet Synth.new
Synth.new(${1:defName: nil}, ${2: args: nil}, ${3: target: nil}, ${4: addAction: addToHead})
endsnippet

snippet Synth.newPaused
Synth.newPaused(${1:defName: nil}, ${2: args: nil}, ${3: target: nil}, ${4: addAction: addToHead})
endsnippet

snippet Synth.replace
Synth.replace(${1:nodeToReplace: nil}, ${2: defName: nil}, ${3: args: nil}, ${4: sameID: false})
endsnippet

snippet Synth.basicNew
Synth.basicNew(${1:defName: nil}, ${2: server: nil}, ${3: nodeID: nil})
endsnippet

snippet Synth.after
Synth.after(${1:aNode: nil}, ${2: defName: nil}, ${3: args: nil})
endsnippet

snippet Synth.before
Synth.before(${1:aNode: nil}, ${2: defName: nil}, ${3: args: nil})
endsnippet

snippet Synth.head
Synth.head(${1:aGroup: nil}, ${2: defName: nil}, ${3: args: nil})
endsnippet

snippet Synth.tail
Synth.tail(${1:aGroup: nil}, ${2: defName: nil}, ${3: args: nil})
endsnippet

snippet Synth.grain
Synth.grain(${1:defName: nil}, ${2: args: nil}, ${3: target: nil}, ${4: addAction: addToHead})
endsnippet

snippet Synth.track
Synth.track(${1:defName: nil}, ${2: args: nil}, ${3: target: nil}, ${4: addAction: addToHead}, ${5: canRelease: nil}, ${6: maxCount: inf})
endsnippet

snippet Synth.newKeepArgs
Synth.newKeepArgs(${1:defName: nil}, ${2: args: nil}, ${3: target: nil}, ${4: addAction: addToHead})
endsnippet

snippet Synth.sched
Synth.sched(${1:time: 0.2}, ${2: defName: nil}, ${3: args: nil}, ${4: target: nil}, ${5: addAction: addToHead}, ${6: nodeID: nil})
endsnippet

snippet Synth.newMsg
Synth.newMsg(${1:defName: nil}, ${2: args: nil}, ${3: target: nil}, ${4: addAction: addToHead}, ${5: nodeID: nil})
endsnippet

snippet SynthDef.synthDefDir_
SynthDef.synthDefDir_(${1:dir: nil})
endsnippet

snippet SynthDef.initClass
SynthDef.initClass(${1:})
endsnippet

snippet SynthDef.new
SynthDef.new(${1:name: nil}, ${2: ugenGraphFunc: nil}, ${3: rates: nil}, ${4: prependArgs: nil}, ${5: variants: nil}, ${6: metadata: nil})
endsnippet

snippet SynthDef.wrap
SynthDef.wrap(${1:func: nil}, ${2: rates: nil}, ${3: prependArgs: nil})
endsnippet

snippet SynthDef.writeOnce
SynthDef.writeOnce(${1:name: nil}, ${2: func: nil}, ${3: rates: nil}, ${4: prependArgs: nil}, ${5: variants: nil}, ${6: dir: nil}, ${7: metadata: nil}, ${8: mdPlugin: nil})
endsnippet

snippet SynthDef.removeAt
SynthDef.removeAt(${1:name: nil}, ${2: libname: global})
endsnippet

snippet SynthDef.record
SynthDef.record(${1:name: nil}, ${2: ugenGraphFunc: nil}, ${3: duration: 1}, ${4: addPath: sounds/}, ${5: headerFormat: aiff}, ${6: sampleFormat: int24})
endsnippet

snippet SynthDef.recordDialog
SynthDef.recordDialog(${1:name: nil}, ${2: ugenGraphFunc: nil}, ${3: duration: 1}, ${4: headerFormat: aiff}, ${5: sampleFormat: int24})
endsnippet

snippet SynthDefOld.new
SynthDefOld.new(${1:name: nil}, ${2: ugenGraphFunc: nil}, ${3: rates: nil}, ${4: prependArgs: nil}, ${5: variants: nil}, ${6: metadata: nil})
endsnippet

snippet SynthDesc.newFrom
SynthDesc.newFrom(${1:synthdef: nil})
endsnippet

snippet SynthDesc.initClass
SynthDesc.initClass(${1:})
endsnippet

snippet SynthDesc.read
SynthDesc.read(${1:path: nil}, ${2: keepDefs: false}, ${3: dict: nil})
endsnippet

snippet SynthDesc.readFile
SynthDesc.readFile(${1:stream: nil}, ${2: keepDefs: false}, ${3: dict: nil}, ${4: path: nil})
endsnippet

snippet SynthDesc.defNameFromBytes
SynthDesc.defNameFromBytes(${1:int8Array: nil})
endsnippet

snippet SynthDescLib.new
SynthDescLib.new(${1:name: nil}, ${2: servers: nil})
endsnippet

snippet SynthDescLib.initClass
SynthDescLib.initClass(${1:})
endsnippet

snippet SynthDescLib.getLib
SynthDescLib.getLib(${1:libname: nil})
endsnippet

snippet SynthDescLib.default
SynthDescLib.default(${1:})
endsnippet

snippet SynthDescLib.send
SynthDescLib.send(${1:server: nil}, ${2: tryToLoadReconstructedDefs: true})
endsnippet

snippet SynthDescLib.read
SynthDescLib.read(${1:path: nil})
endsnippet

snippet SynthDescLib.at
SynthDescLib.at(${1:i: nil})
endsnippet

snippet SynthDescLib.match
SynthDescLib.match(${1:key: nil})
endsnippet

snippet SynthTracker.new
SynthTracker.new(${1:defName: nil}, ${2: args: nil}, ${3: canRelease: nil}, ${4: maxCount: inf}, ${5: addAction: addToTail})
endsnippet

snippet SynthTracker.loadSavedDefs
SynthTracker.loadSavedDefs(${1:filter: nil})
endsnippet

snippet SynthTracker.fullReset
SynthTracker.fullReset(${1:})
endsnippet

snippet SynthTracker.initClass
SynthTracker.initClass(${1:})
endsnippet

snippet SynthTracker.initialize
SynthTracker.initialize(${1:})
endsnippet

snippet SynthTracker.cmdPeriod
SynthTracker.cmdPeriod(${1:})
endsnippet

snippet SynthTracker.window
SynthTracker.window(${1:names: nil})
endsnippet

snippet SynthTracker.deleteUnused
SynthTracker.deleteUnused(${1:})
endsnippet

snippet SynthTracker.doWhenStopped
SynthTracker.doWhenStopped(${1:defName: nil}, ${2: func: nil}, ${3: time: 0.5}, ${4: minCount: 1})
endsnippet

snippet SynthTracker.doAlwaysWhenStopped
SynthTracker.doAlwaysWhenStopped(${1:defName: nil}, ${2: func: nil}, ${3: time: 0.5}, ${4: minCount: 1})
endsnippet

snippet SynthTracker.killRoutines
SynthTracker.killRoutines(${1:})
endsnippet

snippet SynthTracker.killRoutine
SynthTracker.killRoutine(${1:defName: nil})
endsnippet

snippet SynthTracker.cleanRoutines
SynthTracker.cleanRoutines(${1:})
endsnippet

snippet SynthTracker.routinesPlaying
SynthTracker.routinesPlaying(${1:})
endsnippet

snippet SynthTracker.register
SynthTracker.register(${1:synthToRegister: nil}, ${2: canRelease: nil}, ${3: isPlaying: true})
endsnippet

snippet SynthTracker.unregister
SynthTracker.unregister(${1:synthToUnRegister: nil})
endsnippet

snippet SynthTracker.reset
SynthTracker.reset(${1:defName: nil})
endsnippet

snippet SynthTracker.report
SynthTracker.report(${1:defName: nil}, ${2: nodeIDs: true}, ${3: cleanUp: true})
endsnippet

snippet SynthTracker.fullReport
SynthTracker.fullReport(${1:cleanUp: false}, ${2: includeNonPlaying: false}, ${3: includeReleasable: true})
endsnippet

snippet SynthTracker.canRelease
SynthTracker.canRelease(${1:defName: nil})
endsnippet

snippet SynthTracker.findByNodeID
SynthTracker.findByNodeID(${1:nodeID: 1000})
endsnippet

snippet SynthTracker.findNameByNodeID
SynthTracker.findNameByNodeID(${1:nodeID: 1000})
endsnippet

snippet SynthTracker.findSynth
SynthTracker.findSynth(${1:synth: nil})
endsnippet

snippet SynthTracker.allSynths
SynthTracker.allSynths(${1:defName: nil})
endsnippet

snippet SynthTracker.getSavedDefs
SynthTracker.getSavedDefs(${1:})
endsnippet

snippet SynthTracker.getUserDefs
SynthTracker.getUserDefs(${1:})
endsnippet

snippet SynthTracker.reportSavedDefs
SynthTracker.reportSavedDefs(${1:post: true})
endsnippet

snippet SynthTracker.cleanUp
SynthTracker.cleanUp(${1:go: true})
endsnippet

snippet SynthTracker.isRunning
SynthTracker.isRunning(${1:defName: nil}, ${2: minCount: 1}, ${3: cleanUp: true})
endsnippet

snippet SynthTracker.synthIsRunning
SynthTracker.synthIsRunning(${1:synth: nil})
endsnippet

snippet SynthTracker.nodeIDIsRunning
SynthTracker.nodeIDIsRunning(${1:nodeID: 1000})
endsnippet

snippet SynthTracker.remove
SynthTracker.remove(${1:defName: nil}, ${2: index: 0}, ${3: cleanUp: true})
endsnippet

snippet SynthTracker.removeAll
SynthTracker.removeAll(${1:defName: nil})
endsnippet

snippet SynthTracker.removeSynth
SynthTracker.removeSynth(${1:synth: nil})
endsnippet

snippet SynthTracker.release
SynthTracker.release(${1:defName: nil}, ${2: cleanUp: true})
endsnippet

snippet SynthTracker.releaseLast
SynthTracker.releaseLast(${1:defName: nil}, ${2: cleanUp: true})
endsnippet

snippet SynthTracker.releaseAt
SynthTracker.releaseAt(${1:defName: nil}, ${2: index: 0}, ${3: cleanUp: true})
endsnippet

snippet SynthTracker.releaseAll
SynthTracker.releaseAll(${1:defName: nil}, ${2: cleanUp: true})
endsnippet

snippet SynthTracker.free
SynthTracker.free(${1:defName: nil}, ${2: cleanUp: true})
endsnippet

snippet SynthTracker.freeLast
SynthTracker.freeLast(${1:defName: nil}, ${2: cleanUp: true})
endsnippet

snippet SynthTracker.freeAt
SynthTracker.freeAt(${1:defName: nil}, ${2: index: 0}, ${3: cleanUp: true})
endsnippet

snippet SynthTracker.freeAll
SynthTracker.freeAll(${1:defName: nil}, ${2: cleanUp: true})
endsnippet

snippet SynthTracker.matchArgs
SynthTracker.matchArgs(${1:args: nil}, ${2: defName: default})
endsnippet

snippet SynthTracker.matchArgsAsIndexes
SynthTracker.matchArgsAsIndexes(${1:args: nil}, ${2: defName: default})
endsnippet

snippet SynthTracker.releaseArgs
SynthTracker.releaseArgs(${1:defName: nil}, ${2: args: nil}, ${3: cleanUp: true})
endsnippet

snippet SynthTracker.freeArgs
SynthTracker.freeArgs(${1:defName: nil}, ${2: args: nil}, ${3: cleanUp: true})
endsnippet

snippet SynthTracker.toggle
SynthTracker.toggle(${1:defName: nil}, ${2: args: nil}, ${3: canRelease: nil}, ${4: maxCount: 1}, ${5: addAction: addToTail})
endsnippet

snippet SynthTracker.replace
SynthTracker.replace(${1:defName: nil}, ${2: args: nil}, ${3: canRelease: nil}, ${4: maxCount: 1}, ${5: addAction: addToTail})
endsnippet

snippet SynthTracker.controls
SynthTracker.controls(${1:defName: default})
endsnippet

snippet SynthTracker.set
SynthTracker.set(${1:defName: default}, ${2: argsArray: nil})
endsnippet

snippet SynthTracker.setLast
SynthTracker.setLast(${1:defName: default}, ${2: argsArray: nil})
endsnippet

snippet SynthTracker.setAt
SynthTracker.setAt(${1:index: 0}, ${2: defName: default}, ${3: argsArray: nil})
endsnippet

snippet SynthTracker.setMatchArgs
SynthTracker.setMatchArgs(${1:defname: default}, ${2: argsToSet: nil}, ${3: argsToMatch: nil})
endsnippet

snippet SynthTracker.setn
SynthTracker.setn(${1:defName: default}, ${2: argsArray: nil})
endsnippet

snippet SynthTracker.setnLast
SynthTracker.setnLast(${1:defName: default}, ${2: argsArray: nil})
endsnippet

snippet SynthTracker.setnAt
SynthTracker.setnAt(${1:index: 0}, ${2: defName: default}, ${3: argsArray: nil})
endsnippet

snippet SynthTrackerWindow.new
SynthTrackerWindow.new(${1:names: nil}, ${2: mode: toggle})
endsnippet

snippet SynthTrackerWindow.cmdPeriod
SynthTrackerWindow.cmdPeriod(${1:})
endsnippet

snippet SynthTrackerWindow.update
SynthTrackerWindow.update(${1:name: nil})
endsnippet

snippet SynthTrackerWindow.updateAll
SynthTrackerWindow.updateAll(${1:names: nil})
endsnippet

snippet SynthWithArgs.newKeepArgs
SynthWithArgs.newKeepArgs(${1:defName: nil}, ${2: args: nil}, ${3: target: nil}, ${4: addAction: addToHead})
endsnippet

snippet Synth_ID.new
Synth_ID.new(${1:defName: nil}, ${2: args: nil}, ${3: target: nil}, ${4: addAction: addToHead}, ${5: nodeID: nil})
endsnippet

snippet Synth_ID.newPaused
Synth_ID.newPaused(${1:defName: nil}, ${2: args: nil}, ${3: target: nil}, ${4: addAction: addToHead}, ${5: nodeID: nil})
endsnippet

snippet Synth_ID.after
Synth_ID.after(${1:aNode: nil}, ${2: defName: nil}, ${3: args: nil}, ${4: nodeID: nil})
endsnippet

snippet Synth_ID.before
Synth_ID.before(${1:aNode: nil}, ${2: defName: nil}, ${3: args: nil}, ${4: nodeID: nil})
endsnippet

snippet Synth_ID.head
Synth_ID.head(${1:aGroup: nil}, ${2: defName: nil}, ${3: args: nil}, ${4: nodeID: nil})
endsnippet

snippet Synth_ID.tail
Synth_ID.tail(${1:aGroup: nil}, ${2: defName: nil}, ${3: args: nil}, ${4: nodeID: nil})
endsnippet

snippet Synth_ID.replace
Synth_ID.replace(${1:nodeToReplace: nil}, ${2: defName: nil}, ${3: args: nil}, ${4: nodeID: nil})
endsnippet

snippet SystemClock.clear
SystemClock.clear(${1:})
endsnippet

snippet SystemClock.sched
SystemClock.sched(${1:delta: nil}, ${2: item: nil})
endsnippet

snippet SystemClock.schedAbs
SystemClock.schedAbs(${1:time: nil}, ${2: item: nil})
endsnippet

snippet SystemClock.prClear
SystemClock.prClear(${1:})
endsnippet

snippet SystemClock.tempo_
SystemClock.tempo_(${1:})
endsnippet

snippet SystemClock.tempo
SystemClock.tempo(${1:})
endsnippet

snippet SystemSynthDefs.generateTempName
SystemSynthDefs.generateTempName(${1:})
endsnippet

snippet SystemSynthDefs.initClass
SystemSynthDefs.initClass(${1:})
endsnippet

snippet T2A.ar
T2A.ar(${1:in: 0.0}, ${2: offset: 0})
endsnippet

snippet TBall.ar
TBall.ar(${1:in: 0.0}, ${2: g: 10}, ${3: damp: 0}, ${4: friction: 0.01})
endsnippet

snippet TBall.kr
TBall.kr(${1:in: 0.0}, ${2: g: 10}, ${3: damp: 0}, ${4: friction: 0.01})
endsnippet

snippet TBetaRand.ar
TBetaRand.ar(${1:lo: 0}, ${2: hi: 1.0}, ${3: prob1: nil}, ${4: prob2: nil}, ${5: trig: 0.0}, ${6: mul: 1.0}, ${7: add: 0.0})
endsnippet

snippet TBetaRand.kr
TBetaRand.kr(${1:lo: 0}, ${2: hi: 1.0}, ${3: prob1: nil}, ${4: prob2: nil}, ${5: trig: 0.0}, ${6: mul: 1.0}, ${7: add: 0.0})
endsnippet

snippet TBrownRand.ar
TBrownRand.ar(${1:lo: 0}, ${2: hi: 1.0}, ${3: dev: 1.0}, ${4: dist: 0}, ${5: trig: 0}, ${6: mul: 1.0}, ${7: add: 0.0})
endsnippet

snippet TBrownRand.kr
TBrownRand.kr(${1:lo: 0}, ${2: hi: 1.0}, ${3: dev: 1.0}, ${4: dist: 0}, ${5: trig: 0}, ${6: mul: 1.0}, ${7: add: 0.0})
endsnippet

snippet TChoose.ar
TChoose.ar(${1:trig: nil}, ${2: array: nil})
endsnippet

snippet TChoose.kr
TChoose.kr(${1:trig: nil}, ${2: array: nil})
endsnippet

snippet TDuty.ar
TDuty.ar(${1:dur: 1.0}, ${2: reset: 0.0}, ${3: level: 1.0}, ${4: doneAction: 0}, ${5: gapFirst: 0})
endsnippet

snippet TDuty.kr
TDuty.kr(${1:dur: 1.0}, ${2: reset: 0.0}, ${3: level: 1.0}, ${4: doneAction: 0}, ${5: gapFirst: 0})
endsnippet

snippet TExpRand.ar
TExpRand.ar(${1:lo: 0.01}, ${2: hi: 1.0}, ${3: trig: 0.0})
endsnippet

snippet TExpRand.kr
TExpRand.kr(${1:lo: 0.01}, ${2: hi: 1.0}, ${3: trig: 0.0})
endsnippet

snippet TGaussRand.ar
TGaussRand.ar(${1:lo: 0}, ${2: hi: 1.0}, ${3: trig: 0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet TGaussRand.kr
TGaussRand.kr(${1:lo: 0}, ${2: hi: 1.0}, ${3: trig: 0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet TGrains.ar
TGrains.ar(${1:numChannels: nil}, ${2: trigger: 0}, ${3: bufnum: 0}, ${4: rate: 1}, ${5: centerPos: 0}, ${6: dur: 0.1}, ${7: pan: 0}, ${8: amp: 0.1}, ${9: interp: 4})
endsnippet

snippet TGrains2.ar
TGrains2.ar(${1:numChannels: nil}, ${2: trigger: 0}, ${3: bufnum: 0}, ${4: rate: 1}, ${5: centerPos: 0}, ${6: dur: 0.1}, ${7: pan: 0}, ${8: amp: 0.1}, ${9: att: 0.5}, ${10: dec: 0.5}, ${11: interp: 4})
endsnippet

snippet TGrains3.ar
TGrains3.ar(${1:numChannels: nil}, ${2: trigger: 0}, ${3: bufnum: 0}, ${4: rate: 1}, ${5: centerPos: 0}, ${6: dur: 0.1}, ${7: pan: 0}, ${8: amp: 0.1}, ${9: att: 0.5}, ${10: dec: 0.5}, ${11: window: 1}, ${12: interp: 4})
endsnippet

snippet TIRand.kr
TIRand.kr(${1:lo: 0}, ${2: hi: 127}, ${3: trig: 0.0})
endsnippet

snippet TIRand.ar
TIRand.ar(${1:lo: 0}, ${2: hi: 127}, ${3: trig: 0.0})
endsnippet

snippet TPV.ar
TPV.ar(${1:chain: nil}, ${2: windowsize: 1024}, ${3: hopsize: 512}, ${4: maxpeaks: 80}, ${5: currentpeaks: nil}, ${6: freqmult: 1.0}, ${7: tolerance: 4}, ${8: noisefloor: 0.2}, ${9: mul: 1.0}, ${10: add: 0.0})
endsnippet

snippet TRand.ar
TRand.ar(${1:lo: 0.0}, ${2: hi: 1.0}, ${3: trig: 0.0})
endsnippet

snippet TRand.kr
TRand.kr(${1:lo: 0.0}, ${2: hi: 1.0}, ${3: trig: 0.0})
endsnippet

snippet TScramble.kr
TScramble.kr(${1:array: nil}, ${2: trigger: nil}, ${3: lag: 0})
endsnippet

snippet TScramble.ar
TScramble.ar(${1:array: nil}, ${2: trigger: nil}, ${3: lag: 0})
endsnippet

snippet TScramble.new1
TScramble.new1(${1:rate: audio}, ${2: array: nil}, ${3: trigger: nil}, ${4: lag: 0})
endsnippet

snippet TScramble.getIndices
TScramble.getIndices(${1:trigger: nil}, ${2: size: 10})
endsnippet

snippet TTendency.ar
TTendency.ar(${1:trigger: nil}, ${2: dist: 0}, ${3: parX: 0}, ${4: parY: 1}, ${5: parA: 0}, ${6: parB: 0})
endsnippet

snippet TTendency.kr
TTendency.kr(${1:trigger: nil}, ${2: dist: 0}, ${3: parX: 0}, ${4: parY: 1}, ${5: parA: 0}, ${6: parB: 0})
endsnippet

snippet TWChoose.ar
TWChoose.ar(${1:trig: nil}, ${2: array: nil}, ${3: weights: nil}, ${4: normalize: 0})
endsnippet

snippet TWChoose.kr
TWChoose.kr(${1:trig: nil}, ${2: array: nil}, ${3: weights: nil}, ${4: normalize: 0})
endsnippet

snippet TWindex.ar
TWindex.ar(${1:in: nil}, ${2: array: nil}, ${3: normalize: 0})
endsnippet

snippet TWindex.kr
TWindex.kr(${1:in: nil}, ${2: array: nil}, ${3: normalize: 0})
endsnippet

snippet Tap.ar
Tap.ar(${1:bufnum: 0}, ${2: numChannels: 1}, ${3: delaytime: 0.2})
endsnippet

snippet TapN.ar
TapN.ar(${1:bufnum: nil}, ${2: numChannels: 1}, ${3: delaytime: 0.2}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet Tartini.kr
Tartini.kr(${1:in: 0.0}, ${2: threshold: 0.93}, ${3: n: 2048}, ${4: k: 0}, ${5: overlap: 1024}, ${6: smallCutoff: 0.5})
endsnippet

snippet Task.new
Task.new(${1:func: nil}, ${2: clock: nil})
endsnippet

snippet TaskProxy.default
TaskProxy.default(${1:})
endsnippet

snippet TaskProxyAllGui.observedClass
TaskProxyAllGui.observedClass(${1:})
endsnippet

snippet TaskProxyAllGui.tpGuiClass
TaskProxyAllGui.tpGuiClass(${1:})
endsnippet

snippet TaskProxyAllGui.observedAll
TaskProxyAllGui.observedAll(${1:})
endsnippet

snippet TaskProxyAllGui.new
TaskProxyAllGui.new(${1:numItems: 16}, ${2: parent: nil}, ${3: bounds: nil}, ${4: makeSkip: true}, ${5: options: [  ]})
endsnippet

snippet TaskProxyGui.observedClass
TaskProxyGui.observedClass(${1:})
endsnippet

snippet Tdef.initClass
Tdef.initClass(${1:})
endsnippet

snippet Tdef.new
Tdef.new(${1:key: nil}, ${2: item: nil})
endsnippet

snippet Tdef.hasGlobalDictionary
Tdef.hasGlobalDictionary(${1:})
endsnippet

snippet Tdef.gui
Tdef.gui(${1:numItems: nil}, ${2: bounds: nil}, ${3: preset: nil})
endsnippet

snippet TdefAllGui.observedClass
TdefAllGui.observedClass(${1:})
endsnippet

snippet TdefAllGui.tpGuiClass
TdefAllGui.tpGuiClass(${1:})
endsnippet

snippet TdefGui.observedClass
TdefGui.observedClass(${1:})
endsnippet

snippet TempoBusClock.new
TempoBusClock.new(${1:control: nil}, ${2: tempo: nil}, ${3: beats: nil}, ${4: seconds: nil})
endsnippet

snippet TempoClock.new
TempoClock.new(${1:tempo: nil}, ${2: beats: nil}, ${3: seconds: nil}, ${4: queueSize: 256})
endsnippet

snippet TempoClock.initClass
TempoClock.initClass(${1:})
endsnippet

snippet TempoClock.cmdPeriod
TempoClock.cmdPeriod(${1:})
endsnippet

snippet TempoClock.stop
TempoClock.stop(${1:})
endsnippet

snippet TempoClock.play
TempoClock.play(${1:task: nil}, ${2: quant: nil})
endsnippet

snippet TempoClock.sched
TempoClock.sched(${1:delta: nil}, ${2: item: nil})
endsnippet

snippet TempoClock.schedAbs
TempoClock.schedAbs(${1:beat: nil}, ${2: item: nil})
endsnippet

snippet TempoClock.clear
TempoClock.clear(${1:releaseNodes: nil})
endsnippet

snippet TempoClock.tempo_
TempoClock.tempo_(${1:newTempo: nil})
endsnippet

snippet TempoClock.etempo_
TempoClock.etempo_(${1:newTempo: nil})
endsnippet

snippet TempoClock.tempo
TempoClock.tempo(${1:})
endsnippet

snippet TempoClock.beats
TempoClock.beats(${1:})
endsnippet

snippet TempoClock.beats2secs
TempoClock.beats2secs(${1:beats: nil})
endsnippet

snippet TempoClock.secs2beats
TempoClock.secs2beats(${1:secs: nil})
endsnippet

snippet TempoClock.nextTimeOnGrid
TempoClock.nextTimeOnGrid(${1:quant: 1}, ${2: phase: 0})
endsnippet

snippet TempoClock.timeToNextBeat
TempoClock.timeToNextBeat(${1:quant: 1})
endsnippet

snippet TempoClock.setTempoAtBeat
TempoClock.setTempoAtBeat(${1:newTempo: nil}, ${2: beats: nil})
endsnippet

snippet TempoClock.setTempoAtSec
TempoClock.setTempoAtSec(${1:newTempo: nil}, ${2: secs: nil})
endsnippet

snippet TempoClock.setMeterAtBeat
TempoClock.setMeterAtBeat(${1:newBeatsPerBar: nil}, ${2: beats: nil})
endsnippet

snippet TempoClock.beatsPerBar
TempoClock.beatsPerBar(${1:})
endsnippet

snippet TempoClock.baseBarBeat
TempoClock.baseBarBeat(${1:})
endsnippet

snippet TempoClock.baseBar
TempoClock.baseBar(${1:})
endsnippet

snippet TempoClock.playNextBar
TempoClock.playNextBar(${1:task: nil})
endsnippet

snippet TempoClock.beatDur
TempoClock.beatDur(${1:})
endsnippet

snippet TempoClock.elapsedBeats
TempoClock.elapsedBeats(${1:})
endsnippet

snippet TempoClock.beatsPerBar_
TempoClock.beatsPerBar_(${1:newBeatsPerBar: nil})
endsnippet

snippet TempoClock.beats2bars
TempoClock.beats2bars(${1:beats: nil})
endsnippet

snippet TempoClock.bars2beats
TempoClock.bars2beats(${1:bars: nil})
endsnippet

snippet TempoClock.bar
TempoClock.bar(${1:})
endsnippet

snippet TempoClock.nextBar
TempoClock.nextBar(${1:beat: nil})
endsnippet

snippet TempoClock.beatInBar
TempoClock.beatInBar(${1:})
endsnippet

snippet TempoClock.isRunning
TempoClock.isRunning(${1:})
endsnippet

snippet TempoClock.newBig
TempoClock.newBig(${1:tempo: nil}, ${2: beats: nil}, ${3: seconds: nil}, ${4: size: 1024})
endsnippet

snippet TermanWang.ar
TermanWang.ar(${1:input: 0}, ${2: reset: 0}, ${3: ratex: 0.01}, ${4: ratey: 0.01}, ${5: alpha: 1.0}, ${6: beta: 1.0}, ${7: eta: 1.0}, ${8: initx: 0}, ${9: inity: 0}, ${10: mul: 1.0}, ${11: add: 0.0})
endsnippet

snippet TextArchiveMDPlugin.writeMetadataFile
TextArchiveMDPlugin.writeMetadataFile(${1:metadata: nil}, ${2: synthdef: nil}, ${3: path: nil})
endsnippet

snippet TextArchiveMDPlugin.readMetadataFile
TextArchiveMDPlugin.readMetadataFile(${1:path: nil})
endsnippet

snippet TextArchiveMDPlugin.mdExtension
TextArchiveMDPlugin.mdExtension(${1:})
endsnippet

snippet TextField.qtClass
TextField.qtClass(${1:})
endsnippet

snippet TextVU.ar
TextVU.ar(${1:trig: 2}, ${2: in: nil}, ${3: label: nil}, ${4: width: 21}, ${5: reset: 0}, ${6: ana: nil})
endsnippet

snippet TextVU.kr
TextVU.kr(${1:trig: 2}, ${2: in: nil}, ${3: label: nil}, ${4: width: 21}, ${5: reset: 0}, ${6: ana: nil})
endsnippet

snippet TextVU.new
TextVU.new(${1:trig: 2}, ${2: in: nil}, ${3: label: nil}, ${4: width: 21}, ${5: reset: 0}, ${6: ana: nil})
endsnippet

snippet TextVU.new1
TextVU.new1(${1:rate: nil}, ${2: trig: nil}, ${3: in: nil}, ${4: label: nil}, ${5: width: 21}, ${6: reset: 0}, ${7: ana: nil})
endsnippet

snippet TextView.qtClass
TextView.qtClass(${1:})
endsnippet

snippet Thread.new
Thread.new(${1:func: nil}, ${2: stackSize: 512})
endsnippet

snippet Thread.primitiveError
Thread.primitiveError(${1:})
endsnippet

snippet Thread.primitiveErrorString
Thread.primitiveErrorString(${1:})
endsnippet

snippet Thunk.new
Thunk.new(${1:function: nil})
endsnippet

snippet Tilt.ar
Tilt.ar(${1:w: nil}, ${2: x: nil}, ${3: y: nil}, ${4: z: nil}, ${5: tilt: nil})
endsnippet

snippet Timer.ar
Timer.ar(${1:trig: 0.0})
endsnippet

snippet Timer.kr
Timer.kr(${1:trig: 0.0})
endsnippet

snippet ToggleFF.ar
ToggleFF.ar(${1:trig: 0.0})
endsnippet

snippet ToggleFF.kr
ToggleFF.kr(${1:trig: 0.0})
endsnippet

snippet ToolBar.qtClass
ToolBar.qtClass(${1:})
endsnippet

snippet ToolBar.new
ToolBar.new(${1:actions: [  ]})
endsnippet

snippet Toolbox.trimLeft
Toolbox.trimLeft(${1:s: nil})
endsnippet

snippet Toolbox.trimRight
Toolbox.trimRight(${1:s: nil})
endsnippet

snippet Toolbox.trim
Toolbox.trim(${1:s: nil})
endsnippet

snippet Toolbox.repeat
Toolbox.repeat(${1:s: nil}, ${2: n: nil})
endsnippet

snippet Toolbox.isMultiline
Toolbox.isMultiline(${1:s: nil})
endsnippet

snippet Toolbox.split
Toolbox.split(${1:s: nil}, ${2: delim: nil})
endsnippet

snippet Toolbox.splitLines
Toolbox.splitLines(${1:s: nil})
endsnippet

snippet Toolbox.join
Toolbox.join(${1:l: nil}, ${2: delim: nil})
endsnippet

snippet Toolbox.joinLines
Toolbox.joinLines(${1:l: nil})
endsnippet

snippet Toolbox.indent
Toolbox.indent(${1:s: nil}, ${2: shift: nil})
endsnippet

snippet Toolbox.unindent
Toolbox.unindent(${1:s: nil}, ${2: shift: nil})
endsnippet

snippet Toolbox.indentAbs
Toolbox.indentAbs(${1:s: nil}, ${2: shift: nil})
endsnippet

snippet TopView.qtClass
TopView.qtClass(${1:})
endsnippet

snippet TopView.new
TopView.new(${1:win: nil}, ${2: name: nil}, ${3: bounds: nil}, ${4: resizable: nil}, ${5: border: nil})
endsnippet

snippet TouchResponder.new
TouchResponder.new(${1:function: nil}, ${2: src: nil}, ${3: chan: nil}, ${4: value: nil}, ${5: install: true}, ${6: swallowEvent: false})
endsnippet

snippet TouchResponder.init
TouchResponder.init(${1:})
endsnippet

snippet TouchResponder.initialized
TouchResponder.initialized(${1:})
endsnippet

snippet TouchResponder.responders
TouchResponder.responders(${1:})
endsnippet

snippet TouchResponder.add
TouchResponder.add(${1:resp: nil})
endsnippet

snippet TouchResponder.remove
TouchResponder.remove(${1:resp: nil})
endsnippet

snippet TransportWindow.new
TransportWindow.new(${1:name: transport}, ${2: startPos: 0})
endsnippet

snippet TreeView.qtClass
TreeView.qtClass(${1:})
endsnippet

snippet Trig1.ar
Trig1.ar(${1:in: 0.0}, ${2: dur: 0.1})
endsnippet

snippet Trig1.kr
Trig1.kr(${1:in: 0.0}, ${2: dur: 0.1})
endsnippet

snippet TrigAvg.kr
TrigAvg.kr(${1:in: 0.0}, ${2: trig: 0})
endsnippet

snippet Tumble.ar
Tumble.ar(${1:w: nil}, ${2: x: nil}, ${3: y: nil}, ${4: z: nil}, ${5: tilt: nil})
endsnippet

snippet Tuning.new
Tuning.new(${1:tuning: nil}, ${2: octaveRatio: 2.0}, ${3: name: Unknown Tuning})
endsnippet

snippet Tuning.at
Tuning.at(${1:key: nil})
endsnippet

snippet Tuning.doesNotUnderstand
Tuning.doesNotUnderstand(${1:selector: nil}, ${2: args: nil})
endsnippet

snippet Tuning.newFromKey
Tuning.newFromKey(${1:key: nil})
endsnippet

snippet Tuning.default
Tuning.default(${1:pitchesPerOctave: nil})
endsnippet

snippet Tuning.et
Tuning.et(${1:pitchesPerOctave: 12})
endsnippet

snippet Tuning.calcET
Tuning.calcET(${1:pitchesPerOctave: nil})
endsnippet

snippet Tuning.etName
Tuning.etName(${1:pitchesPerOctave: nil})
endsnippet

snippet Tuning.choose
Tuning.choose(${1:size: 12})
endsnippet

snippet Tuning.chooseFromSelected
Tuning.chooseFromSelected(${1:selectFunc: nil})
endsnippet

snippet Tuning.names
Tuning.names(${1:})
endsnippet

snippet Tuning.directory
Tuning.directory(${1:})
endsnippet

snippet Tuning.initClass
Tuning.initClass(${1:})
endsnippet

snippet TwoPole.ar
TwoPole.ar(${1:in: 0.0}, ${2: freq: 440.0}, ${3: radius: 0.8}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet TwoPole.kr
TwoPole.kr(${1:in: 0.0}, ${2: freq: 440.0}, ${3: radius: 0.8}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet TwoPole.coeffs
TwoPole.coeffs(${1:sr: 44100}, ${2: freq: 440}, ${3: radius: 0.8})
endsnippet

snippet TwoTube.ar
TwoTube.ar(${1:input: 0}, ${2: k: 0.01}, ${3: loss: 1.0}, ${4: d1length: 100}, ${5: d2length: 100}, ${6: mul: 1.0}, ${7: add: 0.0})
endsnippet

snippet TwoWayIdentityDictionary.new
TwoWayIdentityDictionary.new(${1:})
endsnippet

snippet TwoZero.coeffs
TwoZero.coeffs(${1:sr: 44100}, ${2: freq: 440}, ${3: radius: 0.8})
endsnippet

snippet UGen.new1
UGen.new1(${1:rate: nil}, ${2: args: [  ]})
endsnippet

snippet UGen.newFromDesc
UGen.newFromDesc(${1:rate: nil}, ${2: numOutputs: nil}, ${3: inputs: nil}, ${4: specialIndex: nil})
endsnippet

snippet UGen.multiNew
UGen.multiNew(${1:args: [  ]})
endsnippet

snippet UGen.multiNewList
UGen.multiNewList(${1:args: nil})
endsnippet

snippet UGen.methodSelectorForRate
UGen.methodSelectorForRate(${1:rate: nil})
endsnippet

snippet UGen.replaceZeroesWithSilence
UGen.replaceZeroesWithSilence(${1:array: nil})
endsnippet

snippet UHJ2B.ar
UHJ2B.ar(${1:ls: nil}, ${2: rs: nil})
endsnippet

snippet UHJtoB.ar
UHJtoB.ar(${1:leftsig: nil}, ${2: rightsig: nil})
endsnippet

snippet URI.new
URI.new(${1:validUriString: nil})
endsnippet

snippet URI.fromLocalPath
URI.fromLocalPath(${1:string: nil})
endsnippet

snippet URI.tolerant
URI.tolerant(${1:string: nil})
endsnippet

snippet UnaryOpFunction.new
UnaryOpFunction.new(${1:selector: nil}, ${2: a: nil})
endsnippet

snippet UnaryOpPlug.new
UnaryOpPlug.new(${1:operator: nil}, ${2: a: nil})
endsnippet

snippet UnaryOpStream.new
UnaryOpStream.new(${1:operator: nil}, ${2: a: nil})
endsnippet

snippet UnaryOpUGen.new
UnaryOpUGen.new(${1:selector: nil}, ${2: a: nil})
endsnippet

snippet UniqueID.initClass
UniqueID.initClass(${1:})
endsnippet

snippet UniqueID.next
UniqueID.next(${1:})
endsnippet

snippet UnitTest.initClass
UnitTest.initClass(${1:})
endsnippet

snippet UnitTest.findTestClasses
UnitTest.findTestClasses(${1:})
endsnippet

snippet UnitTest.runTest
UnitTest.runTest(${1:methodName: nil})
endsnippet

snippet UnitTest.setUpClass
UnitTest.setUpClass(${1:})
endsnippet

snippet UnitTest.tearDownClass
UnitTest.tearDownClass(${1:})
endsnippet

snippet UnitTest.run
UnitTest.run(${1:reset: true}, ${2: report: true})
endsnippet

snippet UnitTest.runAll
UnitTest.runAll(${1:})
endsnippet

snippet UnitTest.prRunAllTestMethods
UnitTest.prRunAllTestMethods(${1:report: true})
endsnippet

snippet UnitTest.prRunWithinSetUpClass
UnitTest.prRunWithinSetUpClass(${1:func: nil})
endsnippet

snippet UnitTest.gui
UnitTest.gui(${1:})
endsnippet

snippet UnitTest.runTestClassForClass
UnitTest.runTestClassForClass(${1:class: nil}, ${2: reset: true}, ${3: report: true})
endsnippet

snippet UnitTest.findTestClass
UnitTest.findTestClass(${1:forClass: nil})
endsnippet

snippet UnitTest.report
UnitTest.report(${1:})
endsnippet

snippet UnitTest.forkIfNeeded
UnitTest.forkIfNeeded(${1:function: nil})
endsnippet

snippet UnitTest.findTestMethods
UnitTest.findTestMethods(${1:})
endsnippet

snippet UnitTest.classesWithTests
UnitTest.classesWithTests(${1:package: Common})
endsnippet

snippet UnitTest.classesWithoutTests
UnitTest.classesWithoutTests(${1:package: Common})
endsnippet

snippet UnitTest.findTestedClass
UnitTest.findTestedClass(${1:})
endsnippet

snippet UnitTest.untestedMethods
UnitTest.untestedMethods(${1:})
endsnippet

snippet UnitTest.listUntestedMethods
UnitTest.listUntestedMethods(${1:forClass: nil})
endsnippet

snippet UnitTest.reset
UnitTest.reset(${1:})
endsnippet

snippet UnitTestGUI.new
UnitTestGUI.new(${1:allTestClasses: nil})
endsnippet

snippet UnitTestResult.new
UnitTestResult.new(${1:testClass: nil}, ${2: testMethod: nil}, ${3: message: }, ${4: details: nil}, ${5: debug: nil})
endsnippet

snippet UnitTestScript.new
UnitTestScript.new(${1:name: nil}, ${2: path: nil})
endsnippet

snippet UnitTestScript.initClass
UnitTestScript.initClass(${1:})
endsnippet

snippet UnitTestScript.runTest
UnitTestScript.runTest(${1:scriptName: nil})
endsnippet

snippet UnitTestScript.findTestScripts
UnitTestScript.findTestScripts(${1:})
endsnippet

snippet UnitTestScript.findTestMethods
UnitTestScript.findTestMethods(${1:})
endsnippet

snippet Unix.errno
Unix.errno(${1:})
endsnippet

snippet UnixFILE.closeAll
UnixFILE.closeAll(${1:})
endsnippet

snippet Unpack1FFT.new
Unpack1FFT.new(${1:chain: nil}, ${2: bufsize: nil}, ${3: binindex: nil}, ${4: whichmeasure: 0})
endsnippet

snippet UnpackFFT.new
UnpackFFT.new(${1:chain: nil}, ${2: bufsize: nil}, ${3: frombin: 0}, ${4: tobin: nil})
endsnippet

snippet Unwrap.ar
Unwrap.ar(${1:in: 0.0}, ${2: lo: 0.0}, ${3: hi: 1.0})
endsnippet

snippet Unwrap.kr
Unwrap.kr(${1:in: 0.0}, ${2: lo: 0.0}, ${3: hi: 1.0})
endsnippet

snippet UserView.qtClass
UserView.qtClass(${1:})
endsnippet

snippet UserView.new
UserView.new(${1:parent: nil}, ${2: bounds: nil})
endsnippet

snippet UserView.sizeHint
UserView.sizeHint(${1:})
endsnippet

snippet UserViewHolder.new
UserViewHolder.new(${1:args: [  ]})
endsnippet

snippet VBAP.ar
VBAP.ar(${1:numChans: nil}, ${2: in: nil}, ${3: bufnum: nil}, ${4: azimuth: 0.0}, ${5: elevation: 1.0}, ${6: spread: 0.0})
endsnippet

snippet VBAP.kr
VBAP.kr(${1:numChans: nil}, ${2: in: nil}, ${3: bufnum: nil}, ${4: azimuth: 0.0}, ${5: elevation: 1.0}, ${6: spread: 0.0})
endsnippet

snippet VBAPSpeaker.new
VBAPSpeaker.new(${1:azi: nil}, ${2: ele: nil})
endsnippet

snippet VBAPSpeakerArray.new
VBAPSpeakerArray.new(${1:dim: nil}, ${2: directions: nil})
endsnippet

snippet VBAPSpeakerSet.new
VBAPSpeakerSet.new(${1:chanOffsets: nil})
endsnippet

snippet VDiskIn.ar
VDiskIn.ar(${1:numChannels: nil}, ${2: bufnum: nil}, ${3: rate: 1}, ${4: loop: 0}, ${5: sendID: 0})
endsnippet

snippet VLayout.qtClass
VLayout.qtClass(${1:})
endsnippet

snippet VLayoutView.qtClass
VLayoutView.qtClass(${1:})
endsnippet

snippet VMScan2D.ar
VMScan2D.ar(${1:bufnum: 0}, ${2: mul: 1.0}, ${3: add: 0.0})
endsnippet

snippet VOSIM.ar
VOSIM.ar(${1:trig: 0.1}, ${2: freq: 400.0}, ${3: nCycles: 1}, ${4: decay: 0.9}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet VOsc.ar
VOsc.ar(${1:bufpos: nil}, ${2: freq: 440.0}, ${3: phase: 0.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet VOsc.kr
VOsc.kr(${1:bufpos: nil}, ${2: freq: 440.0}, ${3: phase: 0.0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet VOsc3.ar
VOsc3.ar(${1:bufpos: nil}, ${2: freq1: 110.0}, ${3: freq2: 220.0}, ${4: freq3: 440.0}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet VOsc3.kr
VOsc3.kr(${1:bufpos: nil}, ${2: freq1: 110.0}, ${3: freq2: 220.0}, ${4: freq3: 440.0}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet VarLag.ar
VarLag.ar(${1:in: 0.0}, ${2: time: 0.1}, ${3: curvature: 0}, ${4: warp: 5}, ${5: start: nil}, ${6: mul: 1.0}, ${7: add: 0.0})
endsnippet

snippet VarLag.kr
VarLag.kr(${1:in: 0.0}, ${2: time: 0.1}, ${3: curvature: 0}, ${4: warp: 5}, ${5: start: nil}, ${6: mul: 1.0}, ${7: add: 0.0})
endsnippet

snippet VarLag.new1
VarLag.new1(${1:rate: nil}, ${2: in: nil}, ${3: time: nil}, ${4: curvature: nil}, ${5: warp: nil}, ${6: start: nil})
endsnippet

snippet VarSaw.ar
VarSaw.ar(${1:freq: 440.0}, ${2: iphase: 0.0}, ${3: width: 0.5}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet VarSaw.kr
VarSaw.kr(${1:freq: 440.0}, ${2: iphase: 0.0}, ${3: width: 0.5}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet Vibrato.ar
Vibrato.ar(${1:freq: 440.0}, ${2: rate: 6}, ${3: depth: 0.02}, ${4: delay: 0.0}, ${5: onset: 0.0}, ${6: rateVariation: 0.04}, ${7: depthVariation: 0.1}, ${8: iphase: 0.0}, ${9: trig: 0.0})
endsnippet

snippet Vibrato.kr
Vibrato.kr(${1:freq: 440.0}, ${2: rate: 6}, ${3: depth: 0.02}, ${4: delay: 0.0}, ${5: onset: 0.0}, ${6: rateVariation: 0.04}, ${7: depthVariation: 0.1}, ${8: iphase: 0.0}, ${9: trig: 0.0})
endsnippet

snippet View.initClass
View.initClass(${1:})
endsnippet

snippet View.new
View.new(${1:parent: nil}, ${2: bounds: nil})
endsnippet

snippet View.newCustom
View.newCustom(${1:customArgs: nil})
endsnippet

snippet View.qtClass
View.qtClass(${1:})
endsnippet

snippet View.globalKeyDownAction_
View.globalKeyDownAction_(${1:action: nil})
endsnippet

snippet View.globalKeyUpAction_
View.globalKeyUpAction_(${1:action: nil})
endsnippet

snippet View.prSetCurrentDrag
View.prSetCurrentDrag(${1:obj: nil})
endsnippet

snippet View.prClearCurrentDrag
View.prClearCurrentDrag(${1:})
endsnippet

snippet View.setGlobalEventEnabled
View.setGlobalEventEnabled(${1:event: nil}, ${2: enabled: nil})
endsnippet

snippet View.prInsertMenuAction
View.prInsertMenuAction(${1:view: nil}, ${2: action: nil}, ${3: addBefore: nil})
endsnippet

snippet View.prRemoveMenuAction
View.prRemoveMenuAction(${1:view: nil}, ${2: action: nil})
endsnippet

snippet View.prRemoveAllMenuActions
View.prRemoveAllMenuActions(${1:view: nil})
endsnippet

snippet View.nonimpl
View.nonimpl(${1:methodName: nil})
endsnippet

snippet View.debug
View.debug(${1:level: 1}, ${2: msg: })
endsnippet

snippet VirtualMics.ar
VirtualMics.ar(${1:micPos: nil}, ${2: in: nil}, ${3: pos: nil}, ${4: dbFactor: -6}, ${5: dbLimit: 0})
endsnippet

snippet Vocode.ar
Vocode.ar(${1:src: nil}, ${2: harm: nil}, ${3: noise: nil}, ${4: anabwscale: 0.5}, ${5: outbw: 0.01}, ${6: freqmul: 1}, ${7: mul: 1}, ${8: add: 0})
endsnippet

snippet VocodeBand.ar
VocodeBand.ar(${1:src: nil}, ${2: band: 0}, ${3: harm: nil}, ${4: noise: nil}, ${5: anabwscale: 0.5}, ${6: outbw: 0.01}, ${7: freqmul: 1}, ${8: mul: 1}, ${9: add: 0})
endsnippet

snippet Vocoder.ar
Vocoder.ar(${1:car: nil}, ${2: mod: nil}, ${3: num: nil}, ${4: low: 100}, ${5: high: 5000}, ${6: q: 0.02}, ${7: hpf: 5000}, ${8: hpfscal: 0.05}, ${9: outscal: 25})
endsnippet

snippet Vocoder.bark
Vocoder.bark(${1:signal: nil}, ${2: input: nil}, ${3: mull: 10})
endsnippet

snippet Volume.new
Volume.new(${1:server: nil}, ${2: startBus: 0}, ${3: numChannels: nil}, ${4: min: -90}, ${5: max: 6}, ${6: persist: false})
endsnippet

snippet VolumeGui.new
VolumeGui.new(${1:model: nil}, ${2: win: nil}, ${3: bounds: nil})
endsnippet

snippet Vowel.initLib
Vowel.initLib(${1:})
endsnippet

snippet Vowel.load
Vowel.load(${1:path: nil})
endsnippet

snippet Vowel.formLib
Vowel.formLib(${1:})
endsnippet

snippet Vowel.new1
Vowel.new1(${1:vowel: a}, ${2: register: bass})
endsnippet

snippet Vowel.new
Vowel.new(${1:vowel: a}, ${2: register: bass})
endsnippet

snippet Vowel.basicNew
Vowel.basicNew(${1:freqs: nil}, ${2: dBs: nil}, ${3: widths: nil})
endsnippet

snippet Vowel.compose
Vowel.compose(${1:vowelNames: nil}, ${2: registers: nil}, ${3: weights: nil})
endsnippet

snippet WAmp.kr
WAmp.kr(${1:in: 0.0}, ${2: winSize: 0.1})
endsnippet

snippet WSPopUpMenu.new
WSPopUpMenu.new(${1:parent: nil}, ${2: bounds: nil})
endsnippet

snippet WalshHadamard.ar
WalshHadamard.ar(${1:input: nil}, ${2: which: 0}, ${3: mul: 1.0}, ${4: add: 0.0})
endsnippet

snippet Warp.new
Warp.new(${1:spec: nil})
endsnippet

snippet Warp.asWarp
Warp.asWarp(${1:spec: nil})
endsnippet

snippet Warp.initClass
Warp.initClass(${1:})
endsnippet

snippet Warp1.ar
Warp1.ar(${1:numChannels: 1}, ${2: bufnum: 0}, ${3: pointer: 0}, ${4: freqScale: 1}, ${5: windowSize: 0.2}, ${6: envbufnum: -1}, ${7: overlaps: 8}, ${8: windowRandRatio: 0.0}, ${9: interp: 1}, ${10: mul: 1}, ${11: add: 0})
endsnippet

snippet WarpOverlap.ar
WarpOverlap.ar(${1:numChans: 1}, ${2: buffer: nil}, ${3: overlaps: 4}, ${4: starttime: 0}, ${5: stretch: 1}, ${6: harm: 1}, ${7: windowsize: 6}, ${8: step: 1}, ${9: warpwindowsize: 0.11}, ${10: warpwindowoverlaps: 8}, ${11: warpwindowran: 0.1}, ${12: mul: 1}, ${13: add: 0})
endsnippet

snippet WarpZ.ar
WarpZ.ar(${1:numChannels: 1}, ${2: bufnum: 0}, ${3: pointer: 0}, ${4: freqScale: 1}, ${5: windowSize: 0.2}, ${6: envbufnum: -1}, ${7: overlaps: 8}, ${8: windowRandRatio: 0.0}, ${9: interp: 1}, ${10: zeroSearch: 0}, ${11: zeroStart: 0}, ${12: mul: 1}, ${13: add: 0})
endsnippet

snippet WaveLoss.ar
WaveLoss.ar(${1:in: 0.0}, ${2: drop: 20}, ${3: outof: 40}, ${4: mode: 1}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet WaveLoss.kr
WaveLoss.kr(${1:in: 0.0}, ${2: drop: 20}, ${3: outof: 40}, ${4: mode: 1}, ${5: mul: 1.0}, ${6: add: 0.0})
endsnippet

snippet WaveLoss.categories
WaveLoss.categories(${1:})
endsnippet

snippet WaveTerrain.ar
WaveTerrain.ar(${1:bufnum: 0}, ${2: x: nil}, ${3: y: nil}, ${4: xsize: 100}, ${5: ysize: 100}, ${6: mul: 1.0}, ${7: add: 0.0})
endsnippet

snippet WaveletDaub.ar
WaveletDaub.ar(${1:input: nil}, ${2: n: 64}, ${3: which: 0}, ${4: mul: 1.0}, ${5: add: 0.0})
endsnippet

snippet Wavetable.new
Wavetable.new(${1:})
endsnippet

snippet Wavetable.newClear
Wavetable.newClear(${1:})
endsnippet

snippet Wavetable.sineFill
Wavetable.sineFill(${1:size: nil}, ${2: amplitudes: nil}, ${3: phases: nil})
endsnippet

snippet Wavetable.chebyFill
Wavetable.chebyFill(${1:size: nil}, ${2: amplitudes: nil}, ${3: normalize: true}, ${4: zeroOffset: false})
endsnippet

snippet Wavetable.chebyFill_old
Wavetable.chebyFill_old(${1:size: nil}, ${2: amplitudes: nil})
endsnippet

snippet Wavetable.readNew
Wavetable.readNew(${1:file: nil})
endsnippet

snippet WeaklyNonlinear.ar
WeaklyNonlinear.ar(${1:input: nil}, ${2: reset: 0}, ${3: ratex: 1}, ${4: ratey: 1}, ${5: freq: 440}, ${6: initx: 0}, ${7: inity: 0}, ${8: alpha: 0}, ${9: xexponent: 0}, ${10: beta: 0}, ${11: yexponent: 0}, ${12: mul: 1.0}, ${13: add: 0.0})
endsnippet

snippet WeaklyNonlinear2.ar
WeaklyNonlinear2.ar(${1:input: nil}, ${2: reset: 0}, ${3: ratex: 1}, ${4: ratey: 1}, ${5: freq: 440}, ${6: initx: 0}, ${7: inity: 0}, ${8: alpha: 0}, ${9: xexponent: 0}, ${10: beta: 0}, ${11: yexponent: 0}, ${12: mul: 1.0}, ${13: add: 0.0})
endsnippet

snippet WebView.qtClass
WebView.qtClass(${1:})
endsnippet

snippet WebView.initClass
WebView.initClass(${1:})
endsnippet

snippet WebView.setUrlHandler
WebView.setUrlHandler(${1:prefix: nil}, ${2: function: nil})
endsnippet

snippet WebView.prSetUrlHandler
WebView.prSetUrlHandler(${1:prefix: nil}, ${2: function: nil})
endsnippet

snippet WebView.clearCache
WebView.clearCache(${1:})
endsnippet

snippet WhiteNoise.ar
WhiteNoise.ar(${1:mul: 1.0}, ${2: add: 0.0})
endsnippet

snippet WhiteNoise.kr
WhiteNoise.kr(${1:mul: 1.0}, ${2: add: 0.0})
endsnippet

snippet Window.screenBounds
Window.screenBounds(${1:})
endsnippet

snippet Window.availableBounds
Window.availableBounds(${1:})
endsnippet

snippet Window.closeAll
Window.closeAll(${1:})
endsnippet

snippet Window.new
Window.new(${1:name: }, ${2: bounds: nil}, ${3: resizable: true}, ${4: border: true}, ${5: server: nil}, ${6: scroll: false})
endsnippet

snippet Window.flipY
Window.flipY(${1:aRect: nil})
endsnippet

snippet Window.addWindow
Window.addWindow(${1:window: nil})
endsnippet

snippet Window.removeWindow
Window.removeWindow(${1:window: nil})
endsnippet

snippet Window.centerRect
Window.centerRect(${1:argWidth: 500}, ${2: argHeight: 500})
endsnippet

snippet WrapSummer.ar
WrapSummer.ar(${1:trig: 0}, ${2: step: 1}, ${3: min: 0}, ${4: max: 1}, ${5: reset: 0}, ${6: resetval: nil})
endsnippet

snippet WrapSummer.kr
WrapSummer.kr(${1:trig: 0}, ${2: step: 1}, ${3: min: 0}, ${4: max: 1}, ${5: reset: 0}, ${6: resetval: nil})
endsnippet

snippet XFade2.ar
XFade2.ar(${1:inA: nil}, ${2: inB: 0.0}, ${3: pan: 0.0}, ${4: level: 1.0})
endsnippet

snippet XFade2.kr
XFade2.kr(${1:inA: nil}, ${2: inB: 0.0}, ${3: pan: 0.0}, ${4: level: 1.0})
endsnippet

snippet XFadeDelay.ar
XFadeDelay.ar(${1:in: 0}, ${2: max: 0.2}, ${3: delay: 0.2}, ${4: fadeTime: 0.1}, ${5: trigger: nil}, ${6: mul: 1}, ${7: add: 0})
endsnippet

snippet XFadeRotate.ar
XFadeRotate.ar(${1:n: 0}, ${2: in: nil})
endsnippet

snippet XFadeRotate.kr
XFadeRotate.kr(${1:n: 0}, ${2: in: nil})
endsnippet

snippet XIn.ar
XIn.ar(${1:which: nil}, ${2: n: nil})
endsnippet

snippet XIn.kr
XIn.kr(${1:which: nil}, ${2: n: nil})
endsnippet

snippet XInFeedback.ar
XInFeedback.ar(${1:which: nil}, ${2: n: nil})
endsnippet

snippet XLine.ar
XLine.ar(${1:start: 1.0}, ${2: end: 2.0}, ${3: dur: 1.0}, ${4: mul: 1.0}, ${5: add: 0.0}, ${6: doneAction: 0})
endsnippet

snippet XLine.kr
XLine.kr(${1:start: 1.0}, ${2: end: 2.0}, ${3: dur: 1.0}, ${4: mul: 1.0}, ${5: add: 0.0}, ${6: doneAction: 0})
endsnippet

snippet XOut.ar
XOut.ar(${1:bus: nil}, ${2: xfade: nil}, ${3: channelsArray: nil})
endsnippet

snippet XOut.kr
XOut.kr(${1:bus: nil}, ${2: xfade: nil}, ${3: channelsArray: nil})
endsnippet

snippet XOut.numFixedArgs
XOut.numFixedArgs(${1:})
endsnippet

snippet ZHPF.ar
ZHPF.ar(${1:in: nil}, ${2: fc: 440}, ${3: damping: 0.707}, ${4: mul: 1}, ${5: add: 0})
endsnippet

snippet ZLPF.ar
ZLPF.ar(${1:in: nil}, ${2: fc: 440}, ${3: damping: 0.707}, ${4: mul: 1}, ${5: add: 0})
endsnippet

snippet ZPoint.new
ZPoint.new(${1:argx: 0.0}, ${2: argy: 0.0}, ${3: argz: 0.0})
endsnippet

snippet ZPolar.new
ZPolar.new(${1:argrho: 0.0}, ${2: argtheta: 0.0}, ${3: argphi: 0.0})
endsnippet

snippet ZeroCrossing.ar
ZeroCrossing.ar(${1:in: 0.0})
endsnippet

snippet ZeroCrossing.kr
ZeroCrossing.kr(${1:in: 0.0})
endsnippet

