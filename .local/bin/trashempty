#!/bin/bash

# Define the trash directory
XDG_DATA_HOME=${XDG_DATA_HOME:-$HOME/.local/share}
TRASH_DIR="$XDG_DATA_HOME/Trash"
FILES_DIR="$TRASH_DIR/files"
INFO_DIR="$TRASH_DIR/info"

# Function to delete a file
delete_file() {
    local file=$1
    rm -f "$file"
    echo "Deleted: $file"
}

# Function to empty the trash
empty_trash() {
    local days_old=$1

    for info_file in "$INFO_DIR"/*.trashinfo; do
        if [[ -e "$info_file" ]]; then
            local filename=$(basename "$info_file" .trashinfo)

            if [[ -n $days_old ]]; then
                # Calculate the file's age and compare
                local deletion_date=$(grep '^DeletionDate=' "$info_file" | sed 's/DeletionDate=//')
                local deletion_timestamp=$(date -d "$deletion_date" +%s)
                local current_timestamp=$(date +%s)
                local age_days=$(( (current_timestamp - deletion_timestamp) / 86400 ))

                if [[ $age_days -ge $days_old ]]; then
                    delete_file "$FILES_DIR/$filename"
                    rm -f "$info_file"
                fi
            else
                # Delete without checking the date
                delete_file "$FILES_DIR/$filename"
                rm -f "$info_file"
            fi
        fi
    done
}

# Main script logic
if [[ -n $1 ]] && [[ $1 =~ ^[0-9]+$ ]]; then
    # Remove files older than $1 days without confirmation
    empty_trash $1
else
    # Ask for confirmation before emptying the trash
    read -p "Are you sure you want to empty the trash? [y/N] " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        empty_trash
    fi
fi
