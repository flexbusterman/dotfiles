#!/bin/bash

# Function to calculate time difference
calculate_time_difference() {
	# Join all arguments into a single string
	local full_input="$*"

	# Remove any extra spaces and replace multiple spaces with a single space
	full_input=$(echo "$full_input" | tr -s ' ')

	# Extract start and end times using regex
	local start_time end_time

	# Match formats:
	# 1. HH:MM - HH:MM
	# 2. YYYY-MM-DD HH:MM - HH:MM
	# 3. YYYY-MM-DD HH:MM - YYYY-MM-DD HH:MM
	if [[ $full_input =~ ([0-9]{4}-[0-9]{2}-[0-9]{2}\ [0-9]{2}:[0-9]{2}|[0-9]{2}:[0-9]{2})\ -\ ([0-9]{4}-[0-9]{2}-[0-9]{2}\ [0-9]{2}:[0-9]{2}|[0-9]{2}:[0-9]{2}) ]]; then
		start_time="${BASH_REMATCH[1]}"
		end_time="${BASH_REMATCH[2]}"
	else
		echo "Invalid input format. Use formats like:"
		echo "  2024-01-25 16:42 - 18:15"
		echo "  2024-01-25 16:42 - 2024-01-26 18:15"
		echo "  14:24 - 16:52"
		exit 1
	fi

	# Handle cases with missing date
	local start_date end_date

	# Parse start time
	if [[ "$start_time" =~ ^[0-9]{4}-[0-9]{2}-[0-9]{2} ]]; then
		start_date=$(echo "$start_time" | cut -d' ' -f1)
		start_time=$(echo "$start_time" | cut -d' ' -f2)
	else
		start_date=$(date +%Y-%m-%d)
	fi

	# Parse end time
	if [[ "$end_time" =~ ^[0-9]{4}-[0-9]{2}-[0-9]{2} ]]; then
		end_date=$(echo "$end_time" | cut -d' ' -f1)
		end_time=$(echo "$end_time" | cut -d' ' -f2)
	else
		end_date="$start_date"
	fi

	# Combine date and time
	local full_start="$start_date $start_time"
	local full_end="$end_date $end_time"

	# Convert dates to seconds since epoch
	local start_seconds=$(date -d "$full_start" +%s)
	local end_seconds=$(date -d "$full_end" +%s)

	# Calculate difference in seconds
	local diff_seconds=$((end_seconds - start_seconds))

	# Handle negative time difference by adding a day
	if [[ $diff_seconds -lt 0 ]]; then
		# If end time is earlier, assume it's on the next day
		end_seconds=$((end_seconds + 86400))
		diff_seconds=$((end_seconds - start_seconds))
	fi

	# Convert to hours, minutes, seconds
	local hours=$((diff_seconds / 3600))
	local minutes=$(((diff_seconds % 3600) / 60))
	local seconds=$((diff_seconds % 60))

	# Format output
	printf "Start: %s\nEnd: %s\nTime Difference: %02d:%02d:%02d (HH:MM:SS)\n" "$full_start" "$full_end" $hours $minutes $seconds
}

# Call function with all arguments
calculate_time_difference "$@"
