#!/bin/bash

# create VirtualSink if not present
if ! [[ $(pw-cli list-objects | awk '/node.description = "VirtualSink"/') ]]; then
	echo "VirtualSink not found"
	pw-loopback --capture-props="media.class=Audio/Sink node.description=VirtualSink" &
	sleep 1
fi

# get node names
loopName=$(pw-cli ls Node | awk -F'"' '/node.name = "output.pw/{print $2}')
bluezName=$(pw-cli ls Node | awk -F'"' '/node.name = "bluez_output/{print $2}')
echo "Loopback name: $loopName"
echo "Bluetooth output name: $bluezName"

# Display current connections
echo "Current connections:"
pw-link -lI

# get nodes connected to supercollider inputs
readarray -t scInsL < <(pw-link -lI | sed -n "/^ *[0-9]* SuperCollider:in_1/,/^ *[0-9]* [a-zA-Z]/p" | awk --posix '/\|/ {print $NF}')
readarray -t scInsR < <(pw-link -lI | sed -n "/^ *[0-9]* SuperCollider:in_2/,/^ *[0-9]* [a-zA-Z]/p" | awk --posix '/\|/ {print $NF}')

# Disconnect all existing connections to SuperCollider inputs
echo "Disconnecting existing SuperCollider input connections..."
for input in "${scInsL[@]}"; do
	echo "Disconnecting from SuperCollider:in_1: $input"
	pw-link -d "$input" "SuperCollider:in_1"
done

for input in "${scInsR[@]}"; do
	echo "Disconnecting from SuperCollider:in_2: $input"
	pw-link -d "$input" "SuperCollider:in_2"
done

# get outgoing connections for loopback
readarray -t loopOutsL < <(pw-link -lI | sed -n "/^ *[0-9]* output.pw.*FL/,/^ *[0-9]* [a-zA-Z]/p" | awk --posix '/\|/ {print $NF}')
readarray -t loopOutsR < <(pw-link -lI | sed -n "/^ *[0-9]* output.pw.*FR/,/^ *[0-9]* [a-zA-Z]/p" | awk --posix '/\|/ {print $NF}')

# disconnect loopback outputs
echo "Disconnecting existing loopback outputs..."
for loopOutL in "${loopOutsL[@]}"; do
	echo "Disconnecting $loopName:output_FL from $loopOutL"
	pw-link -d "$loopName:output_FL" "$loopOutL"
done

for loopOutR in "${loopOutsR[@]}"; do
	echo "Disconnecting $loopName:output_FR from $loopOutR"
	pw-link -d "$loopName:output_FR" "$loopOutR"
done

# Make new connections
echo "Creating new connections..."
pw-link "$loopName:output_FL" "SuperCollider:in_1"
pw-link "$loopName:output_FR" "SuperCollider:in_2"
pw-link "SuperCollider:out_1" "$bluezName:playback_FL"
pw-link "SuperCollider:out_2" "$bluezName:playback_FR"

echo "Setup complete!"
