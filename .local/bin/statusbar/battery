#/bin/sh

# Loop through all attached batteries.
for battery in /sys/class/power_supply/BAT?
do
	# Get its remaining capacity and charge status
	capacity=$(cat "$battery"/capacity 2>/dev/null) || break
	# status=$(sed "s/[Dd]ischarging/-/;s/[Nn]ot charging//;s/[Cc]harging/+/;s/[Uu]nknown//;s/[Ff]ull//" "$battery"/status)
	status=$(sed "s/[Dd]ischarging/-/;s/[Cc]harging/+/;s/[Nn]ot//; s/[Uu]nknown//;s/[Ff]ull//" "$battery"/status)
	percentageSum=$((percentageSum + capacity))
	numberOfBatteries=$((numberOfBatteries + 1))
done
percentage=$((percentageSum / numberOfBatteries))

# get time remaining from all batteries and sum
# for seconds in $(TZ=utc date -d "1970-01-01 $(acpi | awk '/remaining/ {print $5}')" +%s)
# do
	# sumSeconds=$((sumSeconds + seconds))
# done

# convert to HH:MM:SS
# timeLeft=$(date -d@$sumSeconds -u +%H:%M)

# if [[ $sumSeconds > 0 ]]; then
	# printf "%s%s%s" "$status$percentage% $timeLeft"
# else
	# printf "%s%s%s" "$status$percentage%"
# fi

printf "%s%s%s" "$status$percentage%"

# percentage=$(bc <<< "$(cat "/sys/class/power_supply/BAT0/capacity" + 2>/dev/null) ")

	# charging=$([[ $(cat "/sys/class/power_supply/BAT0/status" 2>/dev/null) == "Charging" || $(cat "/sys/class/power_supply/BAT1/status" 2>/dev/null) == "Charging" ]] && printf "+" ) 
	# discharging=$([[ $(cat "/sys/class/power_supply/BAT0/status" 2>/dev/null) == "Discharging" || $(cat "/sys/class/power_supply/BAT1/status" 2>/dev/null) == "Discharging" ]] && printf "-" ) 

# printf "BAT %s%s%s%s" "$charging" "$discharging" "$percentage" "%" 

# numberofbatteries=$(acpi | wc -l)
# batterystatus=$(acpi | sed "s/[Dd]ischarging/-/;s/[Nn]ot charging//;s/[Cc]harging/+/;s/[Uu]nknown//;s/[Ff]ull//")
# echo $batterystatus
	# # If it is discharging and 25% or less, we will add a ‚ùó as a warning.
	 # [ "$capacity" -le 25 ] && [ "$status" = "-" ] && warn="!"
	# unset warn
# done | sed 's/*$//'
