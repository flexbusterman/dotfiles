#!/bin/bash

# if [[ $(timew) == "There is no active time tracking." ]]; then
# 	# Extract the next task information
# 	nextID=$(task _get $(task next limit:1 | tail -n +4 | head -n 1 | sed 's/^ //' | cut -d ' ' -f1).id)
# 	rawNextDescription=$(task _get $(task next limit:1 | tail -n +4 | head -n 1 | sed 's/^ //' | cut -d ' ' -f1).description)
# 	nextDescription=$rawNextDescription
# 	# Output for tmux status bar
# 	echo "$nextID $nextDescription"
# else
# 	id=$(task _get $(task active limit:1 | tail -n +4 | head -n 1 | sed 's/^ //' | cut -d ' ' -f1).id)
# 	title=$(task _get $(task active limit:1 | tail -n +4 | head -n 1 | sed 's/^ //' | cut -d ' ' -f1).description)
# 	# Output for tmux status bar
# 	echo "^c#ff79c6^$id $title^d^"
# fi

if [[ $(timew) == "There is no active time tracking." ]]; then
	taskobject=$(jq 'map_values(select(.id > 0) | select(has("wait") | not)) | sort_by(.urgency) | reverse | first' ~/.local/share/$USER/tasklist.json)
	taskid=$(echo $taskobject | jq -r '.id')
	taskdescription=$(echo $taskobject | jq -r '.description')
	echo "$taskid $taskdescription"
else
	timewRawActiveDescription=$(timew)
	timewActiveDescription=$(echo $timewRawActiveDescription | awk /'Tracking'/ | awk -F'"' '{print $2}')
	taskobject=$(jq --arg keyvar "$timewActiveDescription" 'map_values(select(.description==$keyvar))[0]' ~/.local/share/$USER/tasklist.json)
	taskid=$(echo $taskobject | jq -r '.id')
	echo "^c#ff79c6^$taskid $timewActiveDescription^d^"
fi
