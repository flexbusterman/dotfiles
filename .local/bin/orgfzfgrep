#!/bin/sh

# Detect if running in a terminal, otherwise open a terminal with the script
if [ -z "$TMUX" ] && [ -z "$TERM" ]; then
    exec "$TERMINAL" -e "$0"
    exit
fi

cd ~/ORGMODE/

# 1. Search for text in files using Ripgrep
# 2. Interactively narrow down the list using fzf
# 3. Open the file in orgmode tmux session

IFS=: read -ra selected < <(
  rg --color=always --line-number --no-heading --smart-case "${*:-}" |
    fzf --ansi \
        --color "hl:-1:underline,hl+:-1:underline:reverse" \
        --delimiter : \
        --preview 'bat --color=always {1} --highlight-line {2}' \
        --preview-window 'up,60%,border-bottom,+{2}+3/3,~3'
)

if [ -z "${selected[0]}" ]; then
    notify-send "No selection made"
    exit 1
fi

# if tmux session orgmode is not running, start it
if ! tmux has-session -t orgmode 2>/dev/null; then
    notify-send "Starting tmux session orgmode"
    tmux new-session -s orgmode -d
else
    notify-send "tmux session orgmode is running"
fi

# Get current command to check if (n)vim is running
currentCommand=$(tmux list-panes -t orgmode -F '#{pane_current_command}')

# Check if nvim is running
if [[ "$currentCommand" == *"vim"* ]]; then
    tmux send-keys -t orgmode Escape ":e +${selected[1]} \"${selected[0]}\"" Enter
else
    tmux send-keys -t orgmode C-z "cd ~/ORGMODE/; nvim +${selected[1]} \"${selected[0]}\"" Enter
fi

# Expand folds and center the view
tmux send-keys -t orgmode Escape "zRzt"

# Attach to tmux session
notify-send "$TERMINAL" "Opening $file in (n)vim"
tmux attach -t orgmode
