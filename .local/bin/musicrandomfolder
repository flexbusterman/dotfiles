#!/bin/bash

LOG_FILE=~/random.log

log() {
    echo "$(date +'%Y-%m-%d %H:%M:%S') - $1" >> "$LOG_FILE"
}

# Find all directories within ~/Music/FLAC and its subdirectories, excluding the parent directory itself
albums=$(find ~/Music/FLAC -mindepth 1 -type d)
log "Found albums: $albums"

# Convert to an array
albums_array=($albums)
log "Albums array: ${albums_array[@]}"

# Check if there's at least one album
if [ ${#albums_array[@]} -eq 0 ]; then
    notify-send "No albums found in ~/Music/FLAC."
    log "No albums found in ~/Music/FLAC."
    exit 1
fi

# Function to get a random album
get_random_album() {
    echo "$albums" | shuf -n 1
}

# Clear the play cache in MPD
mpc --host ~/.mpd/socket clear
log "Cleared MPD cache."

# Get the list of currently playing files
current_playlist=$(mpc --host ~/.mpd/socket playlist -f %file%)
log "Current playlist: $current_playlist"

# Pick a random album that is not currently in the playlist
random_album=$(get_random_album)
log "Initially selected random album: $random_album"

random_album_basename=$(basename "$random_album")
log "Random album basename: $random_album_basename"

# Ensure that the random album is not already playing
while echo "$current_playlist" | grep -q "$random_album_basename"; do
    log "Album $random_album_basename is currently playing. Selecting a new album."
    random_album=$(get_random_album)
    random_album_basename=$(basename "$random_album")
    log "New random album: $random_album"
    log "New random album basename: $random_album_basename"
done

# Add the album and check for success
if mpc --host ~/.mpd/socket add "$random_album"; then
    mpc --host ~/.mpd/socket play
    notify-send "$random_album"
    log "Successfully added and playing album: $random_album"
else
    notify-send "Error adding $random_album to MPD. It may not be a valid directory."
    log "Error adding album: $random_album. It may not be a valid directory."
    exit 1
fi
