#!/bin/bash

# Function to check if a number is prime
is_prime() {
    local num=$1
    if (( num <= 1 )); then
        return 1
    fi
    if (( num <= 3 )); then
        return 0
    fi
    if (( num % 2 == 0 || num % 3 == 0 )); then
        return 1
    fi
    local i=5
    while (( i * i <= num )); do
        if (( num % i == 0 || num % (i + 2) == 0 )); then
            return 1
        fi
        i=$((i + 6))
    done
    return 0
}

# Function to generate all prime numbers up to max_num
sieve_of_eratosthenes() {
    local max_num=$1
    local sieve=()
    for ((i=0; i<=max_num; i++)); do
        sieve[i]=1
    done
    sieve[0]=0
    sieve[1]=0
    for ((i=2; i*i<=max_num; i++)); do
        if (( sieve[i] == 1 )); then
            for ((j=i*i; j<=max_num; j+=i)); do
                sieve[j]=0
            done
        fi
    done
    for ((i=2; i<=max_num; i++)); do
        if (( sieve[i] == 1 )); then
            echo -e "$i"
        fi
    done
    echo
}

# Check if an argument is given
if [[ $# -ne 1 ]]; then
    echo "Usage: $0 <max_number>"
    exit 1
fi

max_number=$1

# Validate the input
if ! [[ $max_number =~ ^[0-9]+$ ]] || (( max_number < 2 )); then
    echo "Please provide a valid positive integer greater than or equal to 2."
    exit 1
fi

# Call the function to generate prime numbers
sieve_of_eratosthenes "$max_number"
