#!/usr/bin/env bash

# # Use an array to store VMs
# vms=()
# # Read each VM name into the array
# while IFS= read -r vm; do
#     vms+=("$vm")
# done < <(ls ~/VirtualBox\ VMs/)

# Use an array to store VMs
vms=()
# Read each VM name into the array
while IFS= read -r vm; do
    vms+=("$vm")
done < <(ls /var/lib/libvirt/images/ | awk '/qcow/' | sed 's/.qcow2//')

# Append "routervms" to the array
vms+=("routervms")

for VAR in "${vms[@]}"
do
	echo "$VAR"
done

# Join array into lines (for wmenu)
vmname=$(printf "%s\n" "${vms[@]}" | wmenu -i -f "BigBlueTerm437 Nerd Font Mono 9" -n "#FFFFFF" -p "Start VM")
# echo "$vmname"

if [[ "$vmname" == "routervms" ]]; then
	notify-send "Starting routervms headless"
	virsh --connect qemu:///system start "Debian Router"
	virsh --connect qemu:///system start "Debian TTY1"
	virsh --connect qemu:///system start "Debian TTY2"
	# VBoxManage startvm --type=headless 'Debian Router'
	# VBoxManage startvm --type=headless 'Debian TTY 1'
	# VBoxManage startvm --type=headless 'Debian TTY 2'
	sleep 10
	kitty -e tmuxsession router &
	tmux send-keys -t router C-c
	tmux send-keys -t router "ssh router" Enter
else
	# VBoxManage startvm "$vmname"
	virsh --connect qemu:///system start "$vnmname"
fi

# if virsh --connect qemu:///system domstate kali | grep -q "shut off"; then
#   virsh --connect qemu:///system start kali
# fi
#
# virt-viewer -f --connect qemu:///system --reconnect kali
